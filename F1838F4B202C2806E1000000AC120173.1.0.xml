<?xml version="1.0" encoding="utf-16"?>
<CONTAINER NAME="ZAPLINK_FUNCTION_GROUP" VERSION="1.0" CLASS="ZAPLINK_CONTAINER">
 <ZL_OBJECT CHECKSUM="8C268794DBE024194FB9BBCDC807FF16" CODE_SIGNATURE="3B2AC34816FD94ACF1DD347C2CA79860" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_FUGR_DATA" TYPE="CLAS" VERSION="1.01">
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100304" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_RAW_DATA" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100304"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Commun Data for Class &amp; Interface">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_FUNCTION_GROUP
ASDefine XML structure of a Function group
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ALIASES>
    <ITEM CMPNAME="LINE_SEPARATOR" VERSION="1" EXPOSURE="2" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="LINE_SEPARATOR"/>
    <ITEM CMPNAME="TD_ABAPSOURCE" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_ABAPSOURCE"/>
    <ITEM CMPNAME="TD_DOC_ID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_DOC_ID"/>
    <ITEM CMPNAME="TR_DOCID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TR_DOCID"/>
    <ITEM CMPNAME="TT_ABAPRAWSOURCE" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_ABAPRAWSOURCE"/>
    <ITEM CMPNAME="TT_DOCS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_DOCS"/>
    <ITEM CMPNAME="TT_DYNPROS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_DYNPROS"/>
    <ITEM CMPNAME="TT_TEXTS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_TEXTS"/>
    <ITEM CMPNAME="TT_TXTP_TEXTPOOLS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_TXTP_TEXTPOOLS"/>
   </ALIASES>
   <ATTRIBUTS>
    <ITEM CMPNAME="A0_MAINDATA" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="1" TYPE="TS_MAINDATA">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Program main data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="DOC_IDS" VERSION="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100308" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4">BEGIN OF DOC_IDS,
      group     TYPE td_doc_id VALUE &apos;RE&apos;,    &quot; Report
      function  TYPE td_doc_id VALUE &apos;FU&apos;,
    END OF DOC_IDS
`</ITEM>
    <ITEM CMPNAME="DYNPROS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="1" TYPE="TT_DYNPROS"/>
    <ITEM CMPNAME="FUNCTIONS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="1" TYPE="TT_FUNCTIONS"/>
    <ITEM CMPNAME="INCLUDES" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="1" TYPE="TT_INCLUDES"/>
    <ITEM CMPNAME="MARKUPS" VERSION="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100308" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF markups,
      area TYPE string VALUE &apos;[FUNCTIONGROUP NAME]&apos;,
    END OF markups
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Markups for replacements"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="MENUPAINTER" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="1" TYPE="TO_MENUPAINTER">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Menu painter Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="PARAMETER_KINDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4">BEGIN OF parameter_kinds,
      importing   TYPE td_paramkind VALUE &apos;I&apos;,
      changing    TYPE td_paramkind VALUE &apos;C&apos;,
      exporting   TYPE td_paramkind VALUE &apos;E&apos;,
      table       TYPE td_paramkind VALUE &apos;T&apos;,
*      exceptions  type td_paramkind value &apos;X&apos;,
    END OF parameter_kinds
`</ITEM>
    <ITEM CMPNAME="R_DOC_IDS" VERSION="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100308" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="1" TYPTYPE="4">
     BEGIN OF R_DOC_IDS,
      group    TYPE TR_DOCID,
      function TYPE TR_DOCID,
    END OF R_DOC_IDS
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation Object"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="SOURCE" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="1" TYPE="TS_SOURCE">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="ABAP Source code"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="SUFFIXES" VERSION="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100308" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF suffixes,
      top TYPE rs38l-suffix VALUE &apos;TOP&apos;,
    END OF suffixes
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Special suffixes"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TEXTSPOOL" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="1" TYPE="TT_TXTP_TEXTPOOLS">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Textpool table"/>
     </TEXTS>
    </ITEM>
   </ATTRIBUTS>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_EASYXML" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100304"/>
    <ITEM REFCLSNAME="ZAPLINK_FUNCTION_GROUP" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100304"/>
   </FRIENDS>
   <INTERFACES>
    <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100304" RELTYPE="1"/>
   </INTERFACES>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* in the implementation part of the class</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="ANONYMIZE" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Anonymized component data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100304" MTDTYPE="2" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
*&apos;FU&apos;
*table TDCLT
*DOKCLASS DOKTITEL
*FU       Function
*RE       Report/Function Group, Logical DB                            Program/module pool
  DATA _id LIKE LINE OF r_doc_ids-group.

  _id-sign = &apos;I&apos;.
  _id-option = &apos;EQ&apos;.
  _id-low = doc_ids-group.      APPEND _id TO r_doc_ids-group.
  _id-low = doc_ids-function.   APPEND _id TO r_doc_ids-function.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="FROM_DATA" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert FM Data to object attributes"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_func    LIKE LINE OF functions.
  DATA s_txt     LIKE LINE OF a0_maindata-texts.
  DATA s_f_txt   LIKE LINE OF s_func-texts.
  DATA s_param   LIKE LINE OF s_func-parameters.
  DATA s_excep   LIKE LINE OF s_func-exceptions.
  DATA d_suffix  TYPE rs38l-suffix.
  DATA d_group   TYPE rs38l-area.
  DATA s_inc     LIKE LINE OF includes.
  DATA t_abapsrc TYPE tt_abaprawsource.
  DATA d_search  TYPE string.
  DATA d_replace TYPE string.
  DATA d_lcount  TYPE i.
  DATA d_doc     TYPE doku_obj.
  DATA d_doc_p   TYPE ts_doc_param.
  DATA t_docs    TYPE tt_docs.
  FIELD-SYMBOLS:
    &lt;d&gt;  LIKE LINE OF fm_data-docs,
    &lt;dt&gt; LIKE LINE OF &lt;d&gt;-texts,
    &lt;t&gt;  LIKE LINE OF fm_data-texts,
    &lt;ft&gt; LIKE LINE OF fm_data-function_texts,
    &lt;f&gt;  LIKE LINE OF fm_data-functions,
    &lt;i&gt;  LIKE LINE OF fm_data-includes,
    &lt;s&gt;  LIKE LINE OF &lt;i&gt;-source,
    &lt;im&gt; LIKE LINE OF &lt;f&gt;-import_p,
    &lt;ch&gt; LIKE LINE OF &lt;f&gt;-changing_p,
    &lt;ex&gt; LIKE LINE OF &lt;f&gt;-export_p,
    &lt;pa&gt; LIKE LINE OF s_func-parameters,
    &lt;pt&gt; LIKE LINE OF fm_data-param_texts,
    &lt;cx&gt; LIKE LINE OF &lt;f&gt;-exceptions,
    &lt;ta&gt; LIKE LINE OF &lt;f&gt;-tables.

  a0_maindata-hdr = fm_data-header.
  textspool = fm_data-textspool.
  dynpros = fm_data-dynpros.
  menupainter = fm_data-menupainter.

  d_doc = zaplink_function_group=&gt;get_mainprogram( fm_data-header-area ).
  t_docs = fm_data-docs.
  READ TABLE t_docs ASSIGNING &lt;d&gt;
       WITH KEY id = doc_ids-group
            object = d_doc.
  LOOP AT fm_data-texts ASSIGNING &lt;t&gt;.
    CLEAR s_txt.    s_txt-langu = &lt;t&gt;-spras.   s_txt-short_txt = &lt;t&gt;-areat.
    IF &lt;d&gt; IS ASSIGNED.
      READ TABLE &lt;d&gt;-texts ASSIGNING &lt;dt&gt;
          WITH KEY tdspras = s_txt-langu.
      IF sy-subrc = 0.    s_txt-long_txt = &lt;dt&gt;.   CLEAR s_txt-long_txt-tdspras.    DELETE TABLE &lt;d&gt;-texts FROM &lt;dt&gt;.    ENDIF.
    ENDIF.
    INSERT s_txt INTO TABLE a0_maindata-texts.
  ENDLOOP.
  IF &lt;d&gt; IS ASSIGNED.
    LOOP AT &lt;d&gt;-texts ASSIGNING &lt;dt&gt;.
      CLEAR s_txt.    s_txt-langu = &lt;dt&gt;-tdspras.   s_txt-long_txt = &lt;dt&gt;.   CLEAR s_txt-long_txt-tdspras.    INSERT s_txt INTO TABLE a0_maindata-texts.
    ENDLOOP.
  ENDIF.

  LOOP AT fm_data-includes ASSIGNING &lt;i&gt;.
    CLEAR s_inc.    s_inc-name = &lt;i&gt;-name.            t_abapsrc = &lt;i&gt;-source.
    CALL FUNCTION &apos;FUNCTION_INCLUDE_SPLIT&apos;
*     EXPORTING
*       PROGRAM                            =
*       SUPPRESS_SELECT                    = &apos;X&apos;
*       COMPLETE_AREA                      = &apos; &apos;
      IMPORTING
*       NAMESPACE                          =
*       FUNCTION_NOT_EXISTS                =
        group                              = d_group
*       FUNCNAME                           =
*       INCLUDE_NUMBER                     =
*       NO_FUNCTION_INCLUDE                =
*       NO_FUNCTION_MODULE                 =
        suffix                             = d_suffix
*       RESERVED_NAME                      =
*       TOO_MANY_DELIMITERS                =
*       RESERVED_FOR_EXITS                 =
*       HIDDEN_NAME                        =
      CHANGING
        include                            = s_inc-name
      EXCEPTIONS
        include_not_exists                 = 1
        group_not_exists                   = 2
        no_selections                      = 3
        no_function_include                = 4
        no_function_pool                   = 5
        delimiter_wrong_position           = 6
        no_customer_function_group         = 7
        no_customer_function_include       = 8
        reserved_name_customer             = 9
        namespace_too_long                 = 10
        area_length_error                  = 11
        OTHERS                             = 12.
    IF sy-subrc = 0 AND d_group = a0_maindata-area.
      s_inc-name = d_suffix.
      IF s_inc-name = suffixes-top AND NOT &lt;i&gt;-source IS INITIAL.
*FUNCTION-POOL SVIM MESSAGE-ID SV.
        READ TABLE t_abapsrc ASSIGNING &lt;s&gt; INDEX 1.
        TRANSLATE &lt;s&gt; TO UPPER CASE.                      &quot;#EC SYNTCHAR
        IF &lt;s&gt; CP &apos;FUNCTION-POOL *&apos;.
          CONCATENATE space a0_maindata-area space INTO d_search.   TRANSLATE d_search TO UPPER CASE.
          CONCATENATE space markups-area space INTO d_replace.
          REPLACE FIRST OCCURRENCE OF d_search IN &lt;s&gt; WITH d_replace.
        ENDIF.
      ENDIF.
    ENDIF.
    s_inc-source-_ = zaplink_function_group=&gt;conv_abap_raw2source( t_abapsrc ).
    INSERT s_inc INTO TABLE includes.
  ENDLOOP.

  LOOP AT fm_data-functions ASSIGNING &lt;f&gt;.
    CLEAR s_func.   MOVE-CORRESPONDING &lt;f&gt;-header TO s_func.
* Source code : remove FUNCTION XXX &amp; ENDFUNCTION.
    IF NOT &lt;f&gt;-source IS INITIAL.
      t_abapsrc = &lt;f&gt;-source.
      READ TABLE t_abapsrc ASSIGNING &lt;s&gt; INDEX 1.
      TRANSLATE &lt;s&gt; TO UPPER CASE.                        &quot;#EC SYNTCHAR
      IF &lt;s&gt; CP &apos;FUNCTION *.&apos;.    DELETE t_abapsrc INDEX 1.   ENDIF.
      d_lcount = LINES( t_abapsrc ).
      READ TABLE t_abapsrc ASSIGNING &lt;s&gt; INDEX d_lcount.
      TRANSLATE &lt;s&gt; TO UPPER CASE.                        &quot;#EC SYNTCHAR
      IF &lt;s&gt; CP &apos;ENDFUNCTION*.&apos;.    DELETE t_abapsrc INDEX d_lcount.   ENDIF.
      s_func-source-_ = zaplink_function_group=&gt;conv_abap_raw2source( t_abapsrc ).
    ENDIF.

    UNASSIGN &lt;d&gt;.
    READ TABLE t_docs ASSIGNING &lt;d&gt;
         WITH KEY id = doc_ids-function
              object = s_func-name.
    LOOP AT fm_data-function_texts ASSIGNING &lt;ft&gt;
            WHERE funcname = s_func-name.
      CLEAR s_f_txt.    s_f_txt-langu = &lt;ft&gt;-spras.   s_f_txt-short_txt = &lt;ft&gt;-stext.
      IF &lt;d&gt; IS ASSIGNED.
        READ TABLE &lt;d&gt;-texts ASSIGNING &lt;dt&gt;
            WITH KEY tdspras = s_f_txt-langu.
        IF sy-subrc = 0.    s_f_txt-long_txt = &lt;dt&gt;.   CLEAR s_f_txt-long_txt-tdspras.    DELETE TABLE &lt;d&gt;-texts FROM &lt;dt&gt;.   ENDIF.
      ENDIF.
      INSERT s_f_txt INTO TABLE s_func-texts.
    ENDLOOP.
    IF &lt;d&gt; IS ASSIGNED.
      LOOP AT &lt;d&gt;-texts ASSIGNING &lt;dt&gt;.
        CLEAR s_f_txt.    s_f_txt-langu = &lt;dt&gt;-tdspras.   s_f_txt-long_txt = &lt;dt&gt;.   CLEAR s_f_txt-long_txt-tdspras.    INSERT s_f_txt INTO TABLE s_func-texts.
      ENDLOOP.
    ENDIF.

    LOOP AT &lt;f&gt;-import_p ASSIGNING &lt;im&gt;.
      CLEAR s_param.    s_param-hdr = &lt;im&gt;.    s_param-kind = parameter_kinds-importing.   INSERT s_param INTO TABLE s_func-parameters.
    ENDLOOP.
    LOOP AT &lt;f&gt;-changing_p ASSIGNING &lt;ch&gt;.
      CLEAR s_param.    s_param-hdr = &lt;ch&gt;.    s_param-kind = parameter_kinds-changing.   INSERT s_param INTO TABLE s_func-parameters.
    ENDLOOP.
    LOOP AT &lt;f&gt;-export_p ASSIGNING &lt;ex&gt;.
      CLEAR s_param.    MOVE-CORRESPONDING &lt;ex&gt; TO s_param-hdr.    s_param-kind = parameter_kinds-exporting.   INSERT s_param INTO TABLE s_func-parameters.
    ENDLOOP.
    LOOP AT &lt;f&gt;-tables ASSIGNING &lt;ta&gt;.
      CLEAR s_param.    MOVE-CORRESPONDING &lt;ta&gt; TO s_param-hdr.    s_param-dbfield = &lt;ta&gt;-dbstruct.   s_param-kind = parameter_kinds-table.   INSERT s_param INTO TABLE s_func-parameters.
    ENDLOOP.
    d_doc_p-func = s_func-name.
    LOOP AT s_func-parameters ASSIGNING &lt;pa&gt;.
      d_doc_p-param = &lt;pa&gt;-parameter.   UNASSIGN &lt;d&gt;.
      READ TABLE t_docs ASSIGNING &lt;d&gt;
           WITH KEY id = doc_ids-function
                object = d_doc_p.
      LOOP AT fm_data-param_texts ASSIGNING &lt;pt&gt;
           WHERE funcname = s_func-name
             AND parameter = &lt;pa&gt;-parameter
             AND kind = &apos;P&apos;.
        CLEAR s_f_txt.    s_f_txt-langu = &lt;pt&gt;-spras.   s_f_txt-short_txt = &lt;pt&gt;-stext.
        IF &lt;d&gt; IS ASSIGNED.
          READ TABLE &lt;d&gt;-texts ASSIGNING &lt;dt&gt;
              WITH KEY tdspras = s_f_txt-langu.
          IF sy-subrc = 0.    s_f_txt-long_txt = &lt;dt&gt;.   CLEAR s_f_txt-long_txt-tdspras.    DELETE TABLE &lt;d&gt;-texts FROM &lt;dt&gt;.   ENDIF.
        ENDIF.
        INSERT s_f_txt INTO TABLE &lt;pa&gt;-texts.
      ENDLOOP.
      IF &lt;d&gt; IS ASSIGNED.
        LOOP AT &lt;d&gt;-texts ASSIGNING &lt;dt&gt;.
          CLEAR s_f_txt.    s_f_txt-langu = &lt;dt&gt;-tdspras.   s_f_txt-long_txt = &lt;dt&gt;.   CLEAR s_f_txt-long_txt-tdspras.    INSERT s_f_txt INTO TABLE &lt;pa&gt;-texts.
        ENDLOOP.
      ENDIF.
    ENDLOOP.

    LOOP AT &lt;f&gt;-exceptions ASSIGNING &lt;cx&gt;.
      CLEAR s_excep.    s_excep-hdr = &lt;cx&gt;.
      LOOP AT fm_data-param_texts ASSIGNING &lt;pt&gt;
           WHERE funcname = s_func-name
             AND parameter = &lt;cx&gt;-exception
             AND kind = &apos;X&apos;.
        CLEAR s_f_txt.    s_f_txt-langu = &lt;pt&gt;-spras.   s_f_txt-short_txt = &lt;pt&gt;-stext.    INSERT s_f_txt INTO TABLE s_excep-texts.
      ENDLOOP.
      INSERT s_excep INTO TABLE s_func-exceptions.
    ENDLOOP.

    INSERT s_func INTO TABLE functions.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="TO_DATA" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert object attributes to FM Data"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_func    LIKE LINE OF fm_data-functions.
  DATA s_line    LIKE LINE OF s_func-source.
  DATA s_txt     LIKE LINE OF fm_data-texts.
  DATA s_f_txt   LIKE LINE OF fm_data-function_texts.
  DATA s_p_im    LIKE LINE OF s_func-import_p.
  DATA s_p_ch    LIKE LINE OF s_func-changing_p.
  DATA s_p_ex    LIKE LINE OF s_func-export_p.
  DATA s_p_ta    LIKE LINE OF s_func-tables.
  DATA s_p_txt   LIKE LINE OF fm_data-param_texts.
  DATA s_excep   LIKE LINE OF s_func-exceptions.
  DATA d_suffix  TYPE rs38l-suffix.
  DATA d_group   TYPE rs38l-area.
  DATA s_inc     LIKE LINE OF fm_data-includes.
  DATA d_search  TYPE string.
  DATA d_replace TYPE string.
  DATA d_lcount  TYPE i.
  DATA s_doc     LIKE LINE OF fm_data-docs.
  DATA s_doc_txt LIKE LINE OF s_doc-texts.
  DATA d_doc_p   TYPE ts_doc_param.
  FIELD-SYMBOLS:
    &lt;t&gt;  LIKE LINE OF a0_maindata-texts,
    &lt;i&gt;  LIKE LINE OF includes,
    &lt;f&gt;  LIKE LINE OF functions,
    &lt;ft&gt; LIKE LINE OF &lt;f&gt;-texts,
    &lt;s&gt;  LIKE LINE OF s_inc-source,
    &lt;pa&gt; LIKE LINE OF &lt;f&gt;-parameters,
    &lt;pt&gt; LIKE LINE OF &lt;pa&gt;-texts,
    &lt;cx&gt; LIKE LINE OF &lt;f&gt;-exceptions.

  fm_data-header = a0_maindata-hdr.
  fm_data-textspool = textspool.
  fm_data-dynpros = dynpros.
  fm_data-menupainter = menupainter.

*APPLICATION                                      DOKU
*ID	                                   	RE
*OBJECT	                                   	SAPLxxxx
*LANGU                                      E
*MASTERLANG	                                   	X
*TYP                                      E
*DOKFORM                                      S_DOCU_SHOW
*DOKSTYLE	                                   	S_DOCUS1
  s_doc-application = &apos;DOKU&apos;.   s_doc-id = doc_ids-group.   s_doc-object = zaplink_function_group=&gt;get_mainprogram( fm_data-header-area ).
  s_doc-masterlang = abap_true.   s_doc-typ = &apos;E&apos;.    s_doc-dokform = &apos;S_DOCU_SHOW&apos;.    s_doc-dokstyle = &apos;S_DOCUS1&apos;.
  LOOP AT a0_maindata-texts ASSIGNING &lt;t&gt;.
    IF NOT &lt;t&gt;-short_txt IS INITIAL.    CLEAR s_txt.    s_txt-spras = &lt;t&gt;-langu.   s_txt-areat = &lt;t&gt;-short_txt.   INSERT s_txt INTO TABLE fm_data-texts.    ENDIF.
    IF NOT &lt;t&gt;-long_txt IS INITIAL.
      CLEAR s_doc_txt.    s_doc_txt = &lt;t&gt;-long_txt.   s_doc_txt-tdspras = &lt;t&gt;-langu.    INSERT s_doc_txt INTO TABLE s_doc-texts.
      IF s_doc-langu IS INITIAL.    s_doc-langu = s_doc_txt-tdspras.    ENDIF.
    ENDIF.
  ENDLOOP.
  IF NOT s_doc-texts IS INITIAL.    INSERT s_doc INTO TABLE fm_data-docs.   ENDIF.

  LOOP AT includes ASSIGNING &lt;i&gt;.
    CLEAR s_inc.   d_suffix = s_inc-name = &lt;i&gt;-name.
    s_inc-source = zaplink_function_group=&gt;conv_abap_source2raw( &lt;i&gt;-source-_ ).
    IF d_suffix = s_inc-name.   &quot; include has been truncated
      CONCATENATE &apos;L&apos; a0_maindata-area d_suffix INTO s_inc-name.
      CALL FUNCTION &apos;FUNCTION_INCLUDE_SPLIT&apos;
*     EXPORTING
*       PROGRAM                            =
*       SUPPRESS_SELECT                    = &apos;X&apos;
*       COMPLETE_AREA                      = &apos; &apos;
        IMPORTING
*       NAMESPACE                          =
*       FUNCTION_NOT_EXISTS                =
          group                              = d_group
*       FUNCNAME                           =
*       INCLUDE_NUMBER                     =
*       NO_FUNCTION_INCLUDE                =
*       NO_FUNCTION_MODULE                 =
          suffix                             = d_suffix
*       RESERVED_NAME                      =
*       TOO_MANY_DELIMITERS                =
*       RESERVED_FOR_EXITS                 =
*       HIDDEN_NAME                        =
        CHANGING
          include                            = s_inc-name
        EXCEPTIONS
          include_not_exists                 = 1
          group_not_exists                   = 2
          no_selections                      = 3
          no_function_include                = 4
          no_function_pool                   = 5
          delimiter_wrong_position           = 6
          no_customer_function_group         = 7
          no_customer_function_include       = 8
          reserved_name_customer             = 9
          namespace_too_long                 = 10
          area_length_error                  = 11
          OTHERS                             = 12.
      IF sy-subrc &lt;&gt; 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.
      IF d_group &lt;&gt; a0_maindata-area.   CONTINUE.   ENDIF.    &quot; Internal error
      IF d_suffix = suffixes-top AND NOT s_inc-source IS INITIAL.
*FUNCTION-POOL SVIM MESSAGE-ID SV.
        READ TABLE s_inc-source ASSIGNING &lt;s&gt; INDEX 1.
        TRANSLATE &lt;s&gt; TO UPPER CASE.                      &quot;#EC SYNTCHAR
        IF &lt;s&gt; CP &apos;FUNCTION-POOL *&apos;.
          CONCATENATE space markups-area space INTO d_search.   TRANSLATE d_search TO UPPER CASE.
          CONCATENATE space a0_maindata-area space INTO d_replace.
          REPLACE FIRST OCCURRENCE OF d_search IN &lt;s&gt; WITH d_replace.
        ENDIF.
      ENDIF.
    ENDIF.
    INSERT s_inc INTO TABLE fm_data-includes.
  ENDLOOP.

  LOOP AT functions ASSIGNING &lt;f&gt;.
    CLEAR s_func.   MOVE-CORRESPONDING &lt;f&gt; TO s_func-header.
* Source code : remove FUNCTION XXX &amp; ENDFUNCTION.
    IF NOT &lt;f&gt;-source-_ IS INITIAL.
      s_func-source = zaplink_function_group=&gt;conv_abap_source2raw( &lt;f&gt;-source-_ ).
      READ TABLE s_func-source ASSIGNING &lt;s&gt; INDEX 1.   TRANSLATE &lt;s&gt; TO UPPER CASE. &quot;#EC SYNTCHAR
      IF NOT &lt;s&gt; CP &apos;FUNCTION *.&apos;.    CONCATENATE `FUNCTION ` &lt;f&gt;-name &apos;.&apos; INTO s_line.   INSERT s_line INTO s_func-source INDEX 1.   ENDIF.
      d_lcount = LINES( s_func-source ).    READ TABLE s_func-source ASSIGNING &lt;s&gt; INDEX d_lcount.    TRANSLATE &lt;s&gt; TO UPPER CASE. &quot;#EC SYNTCHAR
      IF NOT &lt;s&gt; CP &apos;ENDFUNCTION*.&apos;.    APPEND &apos;ENDFUNCTION.&apos; TO s_func-source.   ENDIF.
    ENDIF.

*APPLICATION                                      DOKU
*ID	                                   	FU
*OBJECT	                                   	xxxxx
*LANGU                                      F
*MASTERLANG	                                   	X
*TYP                                      T
*DOKFORM                                      S_DOCU_SHOW
*DOKSTYLE	                                   	S_DOCUS1
    CLEAR s_doc.    s_doc-application = &apos;DOKU&apos;.   s_doc-id = doc_ids-function.   s_doc-object = &lt;f&gt;-name.
    s_doc-masterlang = abap_true.   s_doc-typ = &apos;T&apos;.    s_doc-dokform = &apos;S_DOCU_SHOW&apos;.    s_doc-dokstyle = &apos;S_DOCUS1&apos;.
    LOOP AT &lt;f&gt;-texts ASSIGNING &lt;ft&gt;.
      IF NOT &lt;ft&gt;-short_txt IS INITIAL.    CLEAR s_f_txt.    s_f_txt-spras = &lt;ft&gt;-langu.   s_f_txt-stext = &lt;ft&gt;-short_txt.   s_f_txt-funcname = &lt;f&gt;-name.   INSERT s_f_txt INTO TABLE fm_data-function_texts.    ENDIF.
      IF NOT &lt;ft&gt;-long_txt IS INITIAL.
        CLEAR s_doc_txt.    s_doc_txt = &lt;ft&gt;-long_txt.   s_doc_txt-tdspras = &lt;ft&gt;-langu.    INSERT s_doc_txt INTO TABLE s_doc-texts.
        IF s_doc-langu IS INITIAL.    s_doc-langu = s_doc_txt-tdspras.    ENDIF.
      ENDIF.
    ENDLOOP.
    IF NOT s_doc-texts IS INITIAL.    INSERT s_doc INTO TABLE fm_data-docs.   ENDIF.

    LOOP AT &lt;f&gt;-parameters ASSIGNING &lt;pa&gt;.
      CASE &lt;pa&gt;-kind.
        WHEN parameter_kinds-importing.
          CLEAR s_p_im.   s_p_im = &lt;pa&gt;-hdr.    INSERT s_p_im INTO TABLE s_func-import_p.
        WHEN parameter_kinds-changing.
          CLEAR s_p_ch.   s_p_ch = &lt;pa&gt;-hdr.    INSERT s_p_ch INTO TABLE s_func-changing_p.
        WHEN parameter_kinds-exporting.
          CLEAR s_p_ex.   MOVE-CORRESPONDING &lt;pa&gt;-hdr TO s_p_ex.    INSERT s_p_ex INTO TABLE s_func-export_p.
        WHEN parameter_kinds-table.
          CLEAR s_p_ta.   MOVE-CORRESPONDING &lt;pa&gt;-hdr TO s_p_ta.    s_p_ta-dbstruct = &lt;pa&gt;-dbfield.    INSERT s_p_ta INTO TABLE s_func-tables.
        WHEN OTHERS.
      ENDCASE.
*APPLICATION                                      DOKU
*ID	                                   	FU
*OBJECT	                                   	xxxxx yyy
*LANGU                                      F
*MASTERLANG	                                   	X
*TYP                                      T
*DOKFORM                                      S_DOCU_SHOW
*DOKSTYLE	                                   	S_DOCUS1
      CLEAR: d_doc_p, s_doc.    d_doc_p-func = &lt;f&gt;-name.    d_doc_p-param = &lt;pa&gt;-parameter.    s_doc-application = &apos;DOKU&apos;.   s_doc-id = doc_ids-function.
      s_doc-object = d_doc_p.   s_doc-masterlang = abap_true.   s_doc-typ = &apos;T&apos;.    s_doc-dokform = &apos;S_DOCU_SHOW&apos;.    s_doc-dokstyle = &apos;S_DOCUS1&apos;.
      LOOP AT &lt;pa&gt;-texts ASSIGNING &lt;pt&gt;.
        IF NOT &lt;pt&gt;-short_txt IS INITIAL.
          CLEAR s_p_txt. s_p_txt-spras = &lt;pt&gt;-langu. s_f_txt-stext = &lt;pt&gt;-short_txt. s_p_txt-funcname = &lt;f&gt;-name. s_p_txt-parameter = &lt;pa&gt;-parameter. s_p_txt-kind = &apos;P&apos;. INSERT s_p_txt INTO TABLE fm_data-param_texts.
        ENDIF.
        IF NOT &lt;pt&gt;-long_txt IS INITIAL.
          CLEAR s_doc_txt.    s_doc_txt = &lt;pt&gt;-long_txt.   s_doc_txt-tdspras = &lt;pt&gt;-langu.    INSERT s_doc_txt INTO TABLE s_doc-texts.
          IF s_doc-langu IS INITIAL.    s_doc-langu = s_doc_txt-tdspras.    ENDIF.
        ENDIF.
      ENDLOOP.
      IF NOT s_doc-texts IS INITIAL.    INSERT s_doc INTO TABLE fm_data-docs.   ENDIF.
    ENDLOOP.

    LOOP AT &lt;f&gt;-exceptions ASSIGNING &lt;cx&gt;.
      CLEAR s_excep.    s_excep = &lt;cx&gt;-hdr.

      LOOP AT &lt;cx&gt;-texts ASSIGNING &lt;pt&gt;.
        CLEAR s_p_txt.    s_p_txt-spras = &lt;pt&gt;-langu.   s_f_txt-stext = &lt;pt&gt;-short_txt.   s_p_txt-funcname = &lt;f&gt;-name.    s_p_txt-parameter = &lt;cx&gt;-exception.   s_p_txt-kind = &apos;X&apos;.    INSERT s_p_txt INTO TABLE fm_data-param_texts.
      ENDLOOP.
      INSERT s_excep INTO TABLE s_func-exceptions.
    ENDLOOP.

    INSERT s_func INTO TABLE fm_data-functions.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="UNANONYMIZE" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UnAnonymized component data"/>
     </TEXTS>
    </ITEM>
   </METHODS>
   <TYPEGROUPS>
    <ITEM TYPEGROUP="ABAP" VERSION="1" IMPLICIT="X"/>
   </TYPEGROUPS>
   <TYPES>
    <ITEM CMPNAME="TD_INCLUDENAME" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="13 " AUTHOR="TBENSIAL" CREATEDON="20100308" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="1" TYPE="D010INC-INCLUDE"/>
    <ITEM CMPNAME="TD_PARAMKIND" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="24 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="1" TYPE="KIND"/>
    <ITEM CMPNAME="TO_MENUPAINTER" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="3" TYPE="ZAPLINK_MENUPAINTER_DATA">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Menu painter Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_DOC_PARAM" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4" R3RELEASE="700">BEGIN OF ts_doc_param,
      func 	TYPE rs38l_fnam,
      param TYPE rs38l_par_,
    END OF ts_doc_param
`</ITEM>
    <ITEM CMPNAME="TS_EXCEP" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="27 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_excep.
  INCLUDE TYPE rsexc AS hdr.
  TYPES:
      texts       TYPE tt_texts,
    END OF ts_excep
`</ITEM>
    <ITEM CMPNAME="TS_FM_DATA" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="20 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_fm_data,
* DO pour type doc
                header          TYPE tlibg,
                texts           TYPE tt_tlibt,
                docs            TYPE tt_docs,
                textspool	      TYPE tt_txtp_textpools,
                dynpros	        TYPE tt_dynpros,
                menupainter	    TYPE to_menupainter,
                includes        TYPE tt_rawincludes,
                functions       TYPE tt_funcs,
                function_texts  TYPE tt_tftit,
                param_texts     TYPE tt_funct,
              END OF ts_fm_data
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function Module Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_FUNC" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="18 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_func,
                header          TYPE rs38l,
                import_p        TYPE tt_rsimp,
                changing_p      TYPE tt_rscha,
                export_p        TYPE tt_rsexp,
                tables          TYPE tt_rstbl,
                exceptions      TYPE tt_rsexc,
                source          TYPE tt_abaprawsource,
      END OF ts_func
`</ITEM>
    <ITEM CMPNAME="TS_FUNCTION" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="29 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_function,
      name        TYPE rs38l-name,
      global      TYPE rs38l-global,
      remote      TYPE rs38l-remote,
      utask       TYPE rs38l-utask,
      texts       TYPE tt_texts,
      parameters  TYPE tt_params,
      exceptions  TYPE tt_exceptions,
      source      TYPE ts_source,
    END OF ts_function
`</ITEM>
    <ITEM CMPNAME="TS_INCLUDE" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="14 " AUTHOR="TBENSIAL" CREATEDON="20100308" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_include,
      name   TYPE td_includename,
      source TYPE ts_source,
    END OF ts_include
`</ITEM>
    <ITEM CMPNAME="TS_MAINDATA" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="21 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_maindata.
  INCLUDE TYPE tlibg as hdr.
  TYPES:
      texts       TYPE tt_texts,
    END OF ts_maindata
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function Module main data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_PARAM" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="25 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_param,
      kind TYPE td_paramkind.
  INCLUDE TYPE rsimp AS hdr.
  TYPES:
      texts       TYPE tt_texts,
    END OF ts_param
`</ITEM>
    <ITEM CMPNAME="TS_RAWINCLUDE" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="16 " AUTHOR="TBENSIAL" CREATEDON="20100308" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_rawinclude,
      name   TYPE td_includename,
      source TYPE tt_abaprawsource,
    END OF ts_rawinclude
`</ITEM>
    <ITEM CMPNAME="TS_SOURCE" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="12 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_source,
            _ TYPE string,
          END OF ts_source
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="ABAP Source code"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_TEXTPOOL" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="22 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_textpool,
          id    TYPE  textpoolid,
          key	  TYPE  textpoolky,
          texts TYPE  tt_texts,
        END OF ts_textpool
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Textpool"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TT_EXCEPTIONS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="28 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_exceptions TYPE SORTED TABLE OF ts_excep WITH UNIQUE KEY exception
`</ITEM>
    <ITEM CMPNAME="TT_FUNCS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="19 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_funcs TYPE SORTED TABLE OF ts_func WITH UNIQUE KEY header-name
`</ITEM>
    <ITEM CMPNAME="TT_FUNCT" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_funct TYPE SORTED TABLE OF funct WITH UNIQUE KEY funcname parameter kind spras
`</ITEM>
    <ITEM CMPNAME="TT_FUNCTIONS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="30 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_functions TYPE SORTED TABLE OF ts_function WITH UNIQUE KEY name
`</ITEM>
    <ITEM CMPNAME="TT_INCLUDES" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="15 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_includes TYPE SORTED TABLE OF ts_include WITH UNIQUE KEY name
`</ITEM>
    <ITEM CMPNAME="TT_PARAMS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="26 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_params TYPE SORTED TABLE OF ts_param WITH UNIQUE KEY parameter
`</ITEM>
    <ITEM CMPNAME="TT_RAWINCLUDES" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="17 " AUTHOR="TBENSIAL" CREATEDON="20100308" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_rawincludes TYPE STANDARD TABLE OF ts_rawinclude WITH NON-UNIQUE KEY name
`</ITEM>
    <ITEM CMPNAME="TT_RSCHA" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_rscha TYPE STANDARD TABLE OF rscha WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_RSEXC" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="11 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_rsexc TYPE STANDARD TABLE OF rsexc WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_RSEXP" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="9 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_rsexp TYPE STANDARD TABLE OF rsexp WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_RSIMP" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_rsimp TYPE STANDARD TABLE OF rsimp WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_RSTBL" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="10 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_rstbl TYPE STANDARD TABLE OF rstbl WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_TEXTPOOLS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="23 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     tt_textpools TYPE SORTED TABLE OF ts_textpool WITH UNIQUE KEY id KEY
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Textpool table"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TT_TFTIT" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_tftit TYPE SORTED TABLE OF tftit WITH UNIQUE KEY funcname spras
`</ITEM>
    <ITEM CMPNAME="TT_TLIBT" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_tlibt TYPE SORTED TABLE OF tlibt WITH UNIQUE KEY spras
`</ITEM>
    <ITEM CMPNAME="T_RAW" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="1" TYPE="RSWSOURCET">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="ABAP Source table"/>
     </TEXTS>
    </ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="5192DE7AFD439966F4CB037F0B816335" CODE_SIGNATURE="6AB3BCBB3E66D3CBDB815F95B0DA9842" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_FUNCTION_GROUP" TYPE="CLAS" VERSION="1.01">
  <DEPENDENCIES>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_CONNECTOR_"/>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_FUGR_DATA"/>
  </DEPENDENCIES>
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100308" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" MSG_ID="ZAPLINK_FUGR">
    <INHERITANCE REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100416"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Data for Class">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs a connector for :
AS- FUGR : Function Group
U1&amp;RELATIONS&amp;
ASIs part of ZAP Link Framework as Official Connector.
ASRequire Official connector for Program types (PROG).
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AShttps://code.google.com/p/zaplink/wiki/Connector</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ATTRIBUTS>
    <ITEM CMPNAME="BALLOG_SUBOBJECT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100304" ATTDECLTYP="2" ATTVALUE="&apos;CNX_FUNCTION_GROUP&apos;" TYPTYPE="1" TYPE="BALSUBOBJ" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Application Log: Subobject"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="C_MAINPROG_PREFIX" VERSION="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100308" ATTDECLTYP="2" ATTVALUE="&apos;SAPL&apos;" TYPTYPE="1" TYPE="TRDIR-NAME">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function group Main program prefix"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="ST_FUNCTION_GROUP" VERSION="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100308" ATTDECLTYP="2" ATTVALUE="&apos;FUGR&apos;" TYPTYPE="1" TYPE="TD_COMPTYPE">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Transport category : ABAP Object"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="_UUID" VERSION="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100308" ATTDECLTYP="2" ATTVALUE="&apos;F1838F4B202C2806E1000000AC120173&apos;" TYPTYPE="1" TYPE="TD_CONNUUID">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UUID for connector Program"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="_VER" VERSION="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100308" ATTDECLTYP="2" ATTVALUE="&apos;1.0&apos;" TYPTYPE="1" TYPE="TD_CONNVER">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Connector Version"/>
     </TEXTS>
    </ITEM>
   </ATTRIBUTS>
   <DEFERRED>
    <CLASSES>
     <ITEM TYPEGROUP="ZAPLINK_FUGR_DATA" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
    </CLASSES>
   </DEFERRED>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_FUGR_DATA" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100308"/>
   </FRIENDS>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* in the implementation part of the class

INCLUDE zaplink_macros.</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" MTDTYPE="2" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
  DATA type LIKE LINE OF supported_types.

  CALL METHOD super-&gt;constructor.
  mac_create_log application_log ballog_subobject space.
  type-type = st_function_group. INSERT type INTO TABLE supported_types.

  uuid = _uuid.
  version = _ver.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="GET_ALL_INCLUDES" VERSION="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100308" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="In subtitution to MF &apos;RS_GET_ALL_INCLUDES&apos;"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="NAME" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100416" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_FUNCTIONGROUP_NAME">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function group, to which the function module belongs"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="RESULTS" VERSION="1" CMPTYPE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100416" PARDECLTYP="3" TYPTYPE="1" TYPE="TT_INCLUDES"/>
      <ITEM SCONAME="WITH_CODE" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100416" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PAROPTIONL="X">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Not only form include but all include with ABAP Code"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA: _result           LIKE LINE OF results.
  DATA d_include          TYPE rs38l-include.
  DATA d_is_hidden        TYPE abap_bool.
  DATA d_is_extern        TYPE abap_bool.
  DATA d_not_funct        TYPE abap_bool.
  DATA d_suffix           TYPE rs38l-suffix.
* Code from FM &apos;RS_GET_ALL_INCLUDES&apos;
  DATA: program           TYPE trdir-name.
  DATA: _fugr_name        TYPE rs38l-area.
  DATA: _is_reserved_name TYPE c.
  DATA: includes          TYPE STANDARD TABLE OF rseuinc.
  FIELD-SYMBOLS:
    &lt;wa&gt; LIKE LINE OF includes.

  program = get_mainprogram( name ).
* Code from FM &apos;RS_GET_ALL_INCLUDES&apos;
  SELECT * FROM d010inc
           APPENDING CORRESPONDING FIELDS OF TABLE includes
*           appending table includes
           WHERE master = program.
  CALL FUNCTION &apos;RS_WORKING_AREA_ACTIVE_CHECK&apos;
    EXCEPTIONS
      nok = 1.
  IF sy-subrc = 0.
    SELECT * FROM rseuinc
             APPENDING CORRESPONDING FIELDS OF TABLE includes
*             appending table includes
             WHERE master = program.
  ENDIF.
  SORT includes BY include.
  DELETE ADJACENT DUPLICATES FROM includes COMPARING include.
  LOOP AT includes ASSIGNING &lt;wa&gt;.
* change from code from FM &apos;RS_GET_ALL_INCLUDES&apos;
*    CALL FUNCTION &apos;RS_PROGNAME_SPLIT&apos;
    d_include = &lt;wa&gt;-include.
    CALL FUNCTION &apos;FUNCTION_INCLUDE_SPLIT&apos;
*     EXPORTING
*       PROGRAM                            =
*       SUPPRESS_SELECT                    = &apos;X&apos;
*       COMPLETE_AREA                      = &apos; &apos;
      IMPORTING
*       NAMESPACE                          =
*       FUNCTION_NOT_EXISTS                =
        group                              = _fugr_name
*       FUNCNAME                           =
*       INCLUDE_NUMBER                     =
        no_function_include                = d_is_extern
        no_function_module                 = d_not_funct
        suffix                             = d_suffix
        reserved_name                      = _is_reserved_name
*       TOO_MANY_DELIMITERS                =
*       RESERVED_FOR_EXITS                 =
        hidden_name                        = d_is_hidden
      CHANGING
        include                            = d_include
      EXCEPTIONS
        include_not_exists                 = 1
        group_not_exists                   = 2
        no_selections                      = 3
        no_function_include                = 4
        no_function_pool                   = 5
        delimiter_wrong_position           = 6
        no_customer_function_group         = 7
        no_customer_function_include       = 8
        reserved_name_customer             = 9
        namespace_too_long                 = 10
        area_length_error                  = 11
        OTHERS                             = 12.
    IF sy-subrc = 0 AND _fugr_name = name AND d_is_extern = abap_false AND
      ( with_code = abap_true OR
              ( d_not_funct = abap_true AND d_is_hidden = abap_false AND
                        ( d_suffix = &apos;TOP&apos; OR _is_reserved_name = abap_false ) ) ) .
      _result-name = &lt;wa&gt;-include.
      _result-source = get_prog_rawsource( _result-name ).
      APPEND _result TO results.
    ENDIF.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="GET_GROUP_SIGNATURE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100416" CHANGEDBY="TBENSIAL" CHANGEDON="20100416" MTDDECLTYP="1" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Get Source code Signature of a function group"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="GROUP_NAME" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100416" CHANGEDBY="TBENSIAL" CHANGEDON="20100416" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_FUNCTIONGROUP_NAME">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Group Name"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100416" PARDECLTYP="3" TYPTYPE="1" TYPE="ZAPLINK_DATATYPES~TD_CHECKSUM">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="MD5 Hash"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA t_includes  TYPE tt_includes.
  DATA t_code      TYPE tt_abaprawsource.
*  DATA t_code_tmp  TYPE tt_abaprawsource.
  DATA d_src       TYPE string.
  DATA d_mainprog  TYPE td_progname.
  DATA t_functions TYPE tt_rs38l_incl.
  FIELD-SYMBOLS:
    &lt;i&gt; LIKE LINE OF t_includes,
    &lt;f&gt; LIKE LINE OF t_functions.

* Main Prog
  d_mainprog = get_mainprogram( group_name ).
  t_code = get_prog_rawsource( d_mainprog ).

** Functions
*  CALL FUNCTION &apos;RS_FUNCTION_POOL_CONTENTS&apos;
*    EXPORTING
*      function_pool           = group_name
*    TABLES
*      functab                 = t_functions
*    EXCEPTIONS
*      function_pool_not_found = 1
*      OTHERS                  = 2.
*  IF sy-subrc &lt;&gt; 0.
*    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*  ENDIF.
*  LOOP AT t_functions ASSIGNING &lt;f&gt;.  t_code_tmp = get_prog_rawsource( &lt;f&gt;-include ).     APPEND LINES OF t_code_tmp TO t_code.   ENDLOOP.

* Includes
  t_includes = get_all_includes( name = group_name
                            with_code = abap_true  ).
  LOOP AT t_includes ASSIGNING &lt;i&gt;.   APPEND LINES OF &lt;i&gt;-source TO t_code.   ENDLOOP.

* Calcul MD5
  zaplink_tools=&gt;pretty_printer( CHANGING table = t_code ).
  zaplink_tools=&gt;condense_abap_source( CHANGING table = t_code ).
  d_src = zaplink_tools=&gt;table_2_string( t_code ).
  d_src = zaplink_tools=&gt;clean_abap_string( d_src ).
  result = zaplink_tools=&gt;calculate_md5_hash( d_src ).</SOURCE>
    </ITEM>
    <ITEM CMPNAME="GET_MAINPROGRAM" VERSION="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100308" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Get main program from Area"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="NAME" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100308" PARPASSTYP="1" TYPTYPE="1" TYPE="RS38L-AREA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function group, to which the function module belongs"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100308" PARDECLTYP="3" TYPTYPE="1" TYPE="TRDIR-NAME">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ABAP Program Name"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_rs38l TYPE rs38l.
* From LSFUNCTION_BUILDERI01 : module okcode_105 input.
  CALL FUNCTION &apos;FUNCTION_INCLUDE_SPLIT&apos;
    EXPORTING
      complete_area = name
    IMPORTING
      namespace     = s_rs38l-namespace
      group         = s_rs38l-str_area
    EXCEPTIONS
      OTHERS        = 6.
  CONCATENATE s_rs38l-namespace c_mainprog_prefix s_rs38l-str_area INTO result.</SOURCE>
    </ITEM>
   </METHODS>
   <REDEFINITIONS>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CNX_EXT_CLEANER~ANONYMIZE">
     <SOURCE>`
*  DATA o_prog TYPE to_program.
*
*  TRY.
*      super-&gt;zaplink_cnx_ext_cleaner~anonymize( object ).
*    CATCH zaplink_cx_connector INTO o_mycx.
*      RAISE EXCEPTION o_mycx.
*  ENDTRY.
*
*  o_prog ?= object-&gt;raw.
*  clear:
*    o_prog-&gt;A0_MAINDATA-CNAM,
*    o_prog-&gt;A0_MAINDATA-CDAT,
*    o_prog-&gt;A0_MAINDATA-UNAM,
*    o_prog-&gt;A0_MAINDATA-UDAT,
*    o_prog-&gt;A0_MAINDATA-SDATE,
*    o_prog-&gt;A0_MAINDATA-STIME,
*    o_prog-&gt;A0_MAINDATA-IDATE,
*    o_prog-&gt;A0_MAINDATA-ITIME.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CNX_EXT_CLEANER~UNANONYMIZE">
     <SOURCE>`
*  DATA o_prog TYPE to_program.
*
*  TRY.
*      super-&gt;zaplink_cnx_ext_cleaner~unanonymize( object ).
*    CATCH zaplink_cx_connector INTO o_mycx.
*      RAISE EXCEPTION o_mycx.
*  ENDTRY.
*
*  o_prog ?= object-&gt;raw.
*  o_prog-&gt;A0_MAINDATA-CNAM = sy-uname.
**    o_prog-&gt;A0_MAINDATA-CDAT,
**    o_prog-&gt;A0_MAINDATA-UNAM,
**    o_prog-&gt;A0_MAINDATA-UDAT,
**    o_prog-&gt;A0_MAINDATA-SDATE,
**    o_prog-&gt;A0_MAINDATA-STIME,
**    o_prog-&gt;A0_MAINDATA-IDATE,
**    o_prog-&gt;A0_MAINDATA-ITIME.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CNX_EXT_CODE_SIGNATURE~GET_SIGNATURE">
     <SOURCE>`
  DATA d_name TYPE td_functiongroup_name.
  DATA d_type  TYPE td_comptype.

  TRY.
    d_type = component-&gt;get_type( ).
    CASE d_type.
      WHEN st_function_group.
        d_name = component-&gt;get_name( ).
        result = get_group_signature( d_name ).
      WHEN OTHERS.
        mac_raise_type_not_supported &apos;ZAPLINK_MESSAGE&apos; d_type.
    ENDCASE.

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~CREATE_NEW_RAW">
     <SOURCE>`
  DATA o_group TYPE to_group.

  CREATE OBJECT object.
  CASE type.
    WHEN st_function_group.
      CREATE OBJECT o_group.
      object-&gt;raw = o_group.
    WHEN OTHERS.
      CLEAR object.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
      RAISE EXCEPTION TYPE zaplink_cx_connector
        EXPORTING
          textid = zaplink_cx_connector=&gt;type_not_supported
          type   = type
          connclass = &apos;ZAPLINK_PROGRAM&apos;.
  ENDCASE.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~DELETE_FROM_SAP">
     <SOURCE>`
  DATA pool  TYPE rs38l-area.
  DATA type  TYPE td_comptype.

  TRY.
      type = component-&gt;get_type( ).
      CASE type.
        WHEN st_function_group.
          pool = component-&gt;get_name( ).
          CALL FUNCTION &apos;FUNCTION_POOL_DELETE&apos;
            EXPORTING
              pool              = pool
              skip_progress_ind = &apos;X&apos;
            EXCEPTIONS
              functions_exists  = 1
              not_found         = 0
              OTHERS            = 3.
          IF sy-subrc &lt;&gt; 0.
            o_mycx ?= zaplink_cx=&gt;create_from_mf_cx( funcname = &apos;FUNCTION_POOL_DELETE&apos;
                                                        subrc = sy-subrc
                                                    classname = &apos;ZAPLINK_CX_CONNECTOR&apos;
                                                    textid = zaplink_cx=&gt;system_error ).
            RAISE EXCEPTION o_mycx.
          ENDIF.
        WHEN OTHERS.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
          RAISE EXCEPTION TYPE zaplink_cx_connector
            EXPORTING
              textid = zaplink_cx_connector=&gt;type_not_supported
              type   = type
              connclass = &apos;ZAPLINK_PROGRAM&apos;.
      ENDCASE.

    CATCH zaplink_cx_connector INTO o_mycx.
      RAISE EXCEPTION o_mycx.
    CATCH zaplink_cx INTO o_cx.
      mac_cascade_raise o_mycx o_cx.
  ENDTRY.

  result = abap_true.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~DO_EXISTS">
     <SOURCE>`
  DATA _name TYPE td_functiongroup_name.
  DATA type  TYPE td_comptype.

  exists = me-&gt;exists-not_exists.

  TRY.
      type = component-&gt;get_type( ).
      CASE type.
        WHEN st_function_group.
          _name = component-&gt;get_name( ).
          CALL FUNCTION &apos;RS_FUNCTION_POOL_EXISTS&apos;
            EXPORTING
              function_pool   = _name
            EXCEPTIONS
              pool_not_exists = 1
              OTHERS          = 2.
          IF sy-subrc = 0.    exists = me-&gt;exists-exists.   ENDIF.
        WHEN OTHERS.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
          RAISE EXCEPTION TYPE zaplink_cx_connector
            EXPORTING
              textid = zaplink_cx_connector=&gt;type_not_supported
              type   = type
              connclass = &apos;ZAPLINK_MESSAGE&apos;.
      ENDCASE.

    CATCH zaplink_cx_connector INTO o_mycx.
      RAISE EXCEPTION o_mycx.
    CATCH zaplink_cx INTO o_cx.
      mac_cascade_raise o_mycx o_cx.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~IS_SUPPORTED_VERSION">
     <SOURCE>`
  result = abap_false.
  if version = _ver.
    result = abap_true.
  endif.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~READ_FROM_SAP">
     <SOURCE>`
  DATA o_data     TYPE to_group.
  DATA s_fm_data  TYPE ts_fm_data.
  DATA d_name TYPE td_compname.
  DATA type   TYPE td_comptype.
  DATA d_mainprog TYPE td_progname.
  DATA d_soft_comp TYPE tdevc-dlvunit.
  DATA t_functions TYPE tt_rs38l_incl.
  DATA s_func LIKE LINE OF s_fm_data-functions.
  DATA t_doc TYPE STANDARD TABLE OF rsfdo WITH DEFAULT KEY.
  DATA t_src TYPE STANDARD TABLE OF rssource WITH DEFAULT KEY.
  DATA t_tmp_doc TYPE tt_docs.
  DATA d_doc TYPE doku_obj.
  DATA s_doc_param TYPE zaplink_fugr_data=&gt;ts_doc_param.
*    BEGIN OF s_doc_param,
*      func   TYPE rs38l_fnam,
*      param TYPE rs38l_par_,
*    END OF s_doc_param.
  FIELD-SYMBOLS:
    &lt;f&gt; LIKE LINE OF t_functions.

  TRY.
    type = component-&gt;get_type( ).
    CREATE OBJECT object.
    object-&gt;set_component( component ).
    CASE type.
      WHEN st_function_group.
        s_fm_data-header-area = d_name = object-&gt;name.
        CALL FUNCTION &apos;RS_FUNCTION_POOL_CONTENTS&apos;
          EXPORTING
            function_pool           = s_fm_data-header-area
          TABLES
            functab                 = t_functions
          EXCEPTIONS
            function_pool_not_found = 1
            OTHERS                  = 2.
        IF sy-subrc &lt;&gt; 0.
          mac_add_mf_and_raise &apos;RS_FUNCTION_POOL_CONTENTS&apos; sy-subrc.
        ENDIF.

        d_doc = d_mainprog = get_mainprogram( s_fm_data-header-area ).
        s_fm_data-docs = zaplink_documentation=&gt;get( ids = zaplink_fugr_data=&gt;r_doc_ids-group
                                                  object = d_doc  ).

        SELECT * INTO TABLE s_fm_data-texts FROM tlibt WHERE area = s_fm_data-header-area.
        SELECT * INTO TABLE s_fm_data-function_texts FROM tftit FOR ALL ENTRIES IN t_functions WHERE funcname = t_functions-funcname.
        SELECT * INTO TABLE s_fm_data-param_texts FROM funct FOR ALL ENTRIES IN t_functions WHERE funcname = t_functions-funcname.
        LOOP AT t_functions ASSIGNING &lt;f&gt;.
          CLEAR s_func.   s_doc_param-func = s_func-header-name = &lt;f&gt;-funcname.   s_func-source = get_prog_rawsource( &lt;f&gt;-include ).
          s_doc_param-param = &apos;*&apos;.    d_doc = s_doc_param.
          t_tmp_doc = zaplink_documentation=&gt;get( ids = zaplink_fugr_data=&gt;r_doc_ids-function
                                               object =  d_doc ).
          APPEND LINES OF t_tmp_doc TO s_fm_data-docs.
          CALL FUNCTION &apos;RPY_FUNCTIONMODULE_READ&apos;
            EXPORTING
              functionname             = s_func-header-name
            IMPORTING
              global_flag              = s_func-header-global
              remote_call              = s_func-header-remote
              update_task              = s_func-header-utask
*               SHORT_TEXT               =
*               FUNCTION_POOL            =
            TABLES
              import_parameter         = s_func-import_p
              changing_parameter       = s_func-changing_p
              export_parameter         = s_func-export_p
              tables_parameter         = s_func-tables
              exception_list           = s_func-exceptions
              documentation            = t_doc
              SOURCE                   = t_src
            EXCEPTIONS
              error_message            = 1
              function_not_found       = 2
              invalid_name             = 3
              OTHERS                   = 4.
          IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
          ENDIF.
          INSERT s_func INTO TABLE s_fm_data-functions.
        ENDLOOP.

        SELECT SINGLE dlvunit INTO d_soft_comp
          FROM v_tralan
          WHERE pgmid = &apos;R3TR&apos;
            AND object = &apos;FUGR&apos;
            AND obj_name = s_fm_data-header-area.

        s_fm_data-includes = get_all_includes( s_fm_data-header-area ).

*          s_fm_data-includes = remove_unwanted_includes( includes = s_fm_data-includes
*                                                        functions = t_functions
*                                                        soft_comp = d_soft_comp ).

* Texts Pool
        s_fm_data-textspool = get_prog_textpool( d_mainprog ).

* Dynpro
        s_fm_data-dynpros = get_dynpros( d_mainprog ).

* Menu Painter
        s_fm_data-menupainter = get_menus( d_mainprog ).
** Documentation
**      CONCATENATE _name &apos;*&apos; INTO _obj. &quot; Issue:7
*          s_obj-prog = _name.
*          s_obj-wildcard = &apos;*&apos;.
*          _obj = s_obj.
**Issue:7
*          o_data-&gt;documentation = zaplink_documentation=&gt;get( ids = r_doc_id
*                                                          object = _obj ).
        CREATE OBJECT o_data.
        o_data-&gt;from_data( s_fm_data ).
        o_data-&gt;_code_signature = get_group_signature( o_data-&gt;a0_maindata-area ).
        CLEAR o_data-&gt;a0_maindata-area.
        object-&gt;raw = o_data.
      WHEN OTHERS.
        CLEAR object.
        mac_raise_type_not_supported &apos;ZAPLINK_FUNCTION_GROUP&apos; type.
    ENDCASE.
    object-&gt;update_connector_data( me ).                    &quot; Issue 66
    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~WRITE_TO_SAP">
     <SOURCE>`
  DATA o_data      TYPE to_group.
  DATA s_fm_data   TYPE ts_fm_data.
  DATA _comp       TYPE to_component.
  DATA d_pname     TYPE tfdir-pname.
  DATA d_group     TYPE rs38l-area.
  DATA _name       TYPE td_compname.
  DATA d_mainprog  TYPE td_progname.
  DATA t_functions TYPE tt_rs38l_incl.
  DATA d_msg       TYPE string.
  DATA d_answer    TYPE c.
  DATA t_doc       TYPE STANDARD TABLE OF rsfdo WITH DEFAULT KEY.
  DATA t_src       TYPE STANDARD TABLE OF rssource WITH DEFAULT KEY.
  DATA t_params    TYPE STANDARD TABLE OF spar WITH DEFAULT KEY.
  DATA s_param     LIKE LINE OF t_params.
  FIELD-SYMBOLS:
    &lt;fi&gt; LIKE LINE OF t_functions,
    &lt;f&gt;  LIKE LINE OF s_fm_data-functions.

  TRY.

      CASE object-&gt;type.
        WHEN st_function_group.
          o_data ?= object-&gt;raw.
          o_data-&gt;a0_maindata-area = object-&gt;name.
          s_fm_data = o_data-&gt;to_data( ).
          d_mainprog = get_mainprogram( s_fm_data-header-area ).

          CALL FUNCTION &apos;RS_FUNCTION_POOL_DELETE&apos;
            EXPORTING
              area                         = s_fm_data-header-area
*             CORRNUM                      = &apos; &apos;
*             TEXT                         = &apos; &apos;
*             UNAME                        = &apos; &apos;
*             WITH_KORR                    = &apos;X&apos;
*             WB_FB_MANAGER                =
              suppress_popups              = abap_true
              skip_progress_ind            = abap_true
*           IMPORTING
*             E_CORRNUM                    =
            EXCEPTIONS
              canceled_in_corr             = 1
              enqueue_system_failure       = 2
              function_exist               = 3
              not_executed                 = 4
              no_modify_permission         = 5
              no_show_permission           = 6
              permission_failure           = 7
              pool_not_exist               = 0
              cancelled                    = 9
              OTHERS                       = 10.
          IF sy-subrc &lt;&gt; 0.
            mac_add_mf_and_raise &apos;RS_FUNCTION_POOL_DELETE&apos; sy-subrc.
          ENDIF.
          IF sy-batch = abap_false.   &quot;only delete in forground
            LOOP AT s_fm_data-functions ASSIGNING &lt;f&gt;.
* FROM  FUNCTION &apos;RPY_FUNCTIONMODULE_READ&apos;
              SELECT SINGLE pname INTO d_pname FROM tfdir WHERE funcname = &lt;f&gt;-header-name.
              IF sy-subrc &lt;&gt; 0.   CONTINUE.   ENDIF.

              CALL FUNCTION &apos;FUNCTION_INCLUDE_SPLIT&apos;
                EXPORTING
                  program                            = d_pname
*               SUPPRESS_SELECT                    = &apos;X&apos;
*               COMPLETE_AREA                      = &apos; &apos;
                IMPORTING
*               NAMESPACE                          =
*               FUNCTION_NOT_EXISTS                =
                  group                              = d_group
*               FUNCNAME                           =
*               INCLUDE_NUMBER                     =
*               NO_FUNCTION_INCLUDE                =
*               NO_FUNCTION_MODULE                 =
*               SUFFIX                             =
*               RESERVED_NAME                      =
*               TOO_MANY_DELIMITERS                =
*               RESERVED_FOR_EXITS                 =
*               HIDDEN_NAME                        =
*              CHANGING
*                INCLUDE                            = d_pname
                EXCEPTIONS
                  include_not_exists                 = 1
                  group_not_exists                   = 2
                  no_selections                      = 3
                  no_function_include                = 4
                  no_function_pool                   = 5
                  delimiter_wrong_position           = 6
                  no_customer_function_group         = 7
                  no_customer_function_include       = 8
                  reserved_name_customer             = 9
                  namespace_too_long                 = 10
                  area_length_error                  = 11
                  OTHERS                             = 12.
              IF sy-subrc &lt;&gt; 0.
                CONTINUE.
              ENDIF.

* The function &amp;1 already exist (&amp;2), do you confirm deletion ?
              MESSAGE i000 WITH d_pname d_group INTO d_msg.
              REFRESH t_params.
              s_param-param = &apos;FUNCTION&apos;.   s_param-value = &lt;f&gt;-header-name.          APPEND s_param TO t_params.
              s_param-param = &apos;GROUP&apos;.      s_param-value = d_group.                  APPEND s_param TO t_params.
              s_param-param = &apos;CURRENT_G&apos;.  s_param-value = s_fm_data-header-area.    APPEND s_param TO t_params.
              CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
                EXPORTING
                  titlebar              = &apos;Confirm module function deletion&apos;(d00)
                  diagnose_object       = &apos;ZAPLINK_FUNCTION_GROUP-CONF&apos;
                  text_question         = d_msg
                  text_button_1         = &apos;Yes&apos;(yes)
                  icon_button_1         = &apos;ICON_DELETE&apos;
                  text_button_2         = &apos;No&apos;(no_)
                  icon_button_2         = &apos;ICON_SKIP&apos;
                  default_button        = &apos;3&apos;
                  display_cancel_button = &apos;X&apos;
                  userdefined_f1_help   = &apos;ZAPLINK_FUNCTION_GROUP-CONFH&apos;
                  start_column          = 10
                  start_row             = 4
                  popup_type            = &apos;ICON_MESSAGE_WARNING&apos;
                  iv_quickinfo_button_1 = &apos;Function is deleted. Function group will be created with this function.&apos;(hye)
                  iv_quickinfo_button_2 = &apos;Function is not deleted and process to next existing function. Function group will be created without this function.&apos;(hno)
                IMPORTING
                  answer                = d_answer
                TABLES
                  parameter             = t_params
                EXCEPTIONS
                  text_not_found        = 1
                  OTHERS                = 2.
              IF sy-subrc &lt;&gt; 0.
                mac_add_mf_and_raise &apos;POPUP_TO_CONFIRM&apos; sy-subrc.
              ELSEIF d_answer = &apos;N&apos; OR d_answer = &apos;2&apos;.
                CONTINUE.
              ELSEIF d_answer = &apos;A&apos;.    &quot; abend
                ROLLBACK WORK.
                mac_add_mf_and_raise &apos;RS_FUNCTION_POOL_INSERT&apos; 1.
              ENDIF.

              CALL FUNCTION &apos;RS_FUNCTION_DELETE&apos;
                EXPORTING
                  funcname                 = &lt;f&gt;-header-name
                  suppress_popups          = abap_true
*               SUPPRESS_CHECKS          = &apos; &apos;
*               SUPPRESS_DELE_ENHA       = &apos; &apos;
*               TRREQUEST                =
                EXCEPTIONS
                  cancelled                = 1
                  function_released        = 2
                  OTHERS                   = 3.
              IF sy-subrc &lt;&gt; 0.
                mac_add_mf_and_raise &apos;RS_FUNCTION_DELETE&apos; sy-subrc.
              ENDIF.
            ENDLOOP.
          ENDIF.

          CALL FUNCTION &apos;RS_FUNCTION_POOL_INSERT&apos;
            EXPORTING
              function_pool                 = s_fm_data-header-area
              short_text                    = space
*             RESPONSIBLE                   = SY-UNAME
*             NAMESPACE                     = &apos; &apos;
*             DEVCLASS                      =
*             CORRNUM                       =
*             SUPPRESS_LANGUAGE_CHECK       = &apos;X&apos;
*             AUTHORITY_CHECK               = &apos;X&apos;
*             SUPPRESS_CORR_CHECK           = &apos;X&apos;
*             UNICODE_CHECKS                = &apos;X&apos;
*           IMPORTING
*             CORRNUM                       =
            EXCEPTIONS
              name_already_exists           = 1
              name_not_correct              = 2
              function_already_exists       = 3
              invalid_function_pool         = 4
              invalid_name                  = 5
              too_many_functions            = 6
              no_modify_permission          = 7
              no_show_permission            = 8
              enqueue_system_failure        = 9
              canceled_in_corr              = 10
              undefined_error               = 11
              OTHERS                        = 12.
          IF sy-subrc &lt;&gt; 0.
            ROLLBACK WORK.
            mac_add_mf_and_raise &apos;RS_FUNCTION_POOL_INSERT&apos; sy-subrc.
          ENDIF.

          LOOP AT s_fm_data-functions ASSIGNING &lt;f&gt;.
            DELETE FROM tftit WHERE funcname = &lt;f&gt;-header-name.
            DELETE FROM funct WHERE funcname = &lt;f&gt;-header-name.
            CALL FUNCTION &apos;RPY_FUNCTIONMODULE_INSERT&apos;
              EXPORTING
                funcname                      = &lt;f&gt;-header-name
                function_pool                 = s_fm_data-header-area
                interface_global              = &lt;f&gt;-header-global
                remote_call                   = &lt;f&gt;-header-remote
                short_text                    = space
                suppress_corr_check           = abap_false
                update_task                   = &lt;f&gt;-header-utask
*               CORRNUM                       = &apos; &apos;
*               NAMESPACE                     = &apos; &apos;
*               NEW_SOURCE                    =
*             IMPORTING
*               FUNCTION_INCLUDE              =
              TABLES
                import_parameter              = &lt;f&gt;-import_p
                export_parameter              = &lt;f&gt;-export_p
                tables_parameter              = &lt;f&gt;-tables
                changing_parameter            = &lt;f&gt;-changing_p
                exception_list                = &lt;f&gt;-exceptions
                parameter_docu                = t_doc
                SOURCE                        = t_src
              EXCEPTIONS
                double_task                   = 1
                error_message                 = 2
                function_already_exists       = 3
                invalid_function_pool         = 4
                invalid_name                  = 5
                too_many_functions            = 6
                no_modify_permission          = 7
                no_show_permission            = 8
                enqueue_system_failure        = 9
                canceled_in_corr              = 10
                OTHERS                        = 11.
            IF sy-subrc &lt;&gt; 0.
              ROLLBACK WORK.
              mac_add_mf_and_raise &apos;RPY_FUNCTIONMODULE_INSERT&apos; sy-subrc.
            ENDIF.
          ENDLOOP.

          CALL FUNCTION &apos;RS_FUNCTION_POOL_CONTENTS&apos;
            EXPORTING
              function_pool           = s_fm_data-header-area
            TABLES
              functab                 = t_functions
            EXCEPTIONS
              function_pool_not_found = 1
              OTHERS                  = 2.
          IF sy-subrc &lt;&gt; 0.
            ROLLBACK WORK.
            mac_add_mf_and_raise &apos;RS_FUNCTION_POOL_CONTENTS&apos; sy-subrc.
          ENDIF.

          LOOP AT s_fm_data-functions ASSIGNING &lt;f&gt;.
            READ TABLE t_functions ASSIGNING &lt;fi&gt;
                 WITH KEY funcname = &lt;f&gt;-header-name.
            IF sy-subrc &lt;&gt; 0.
              ROLLBACK WORK.
              mac_add_mf_and_raise &apos;RS_FUNCTIONMODULE_INSERT&apos; 12.
              CONTINUE.
            ENDIF.
            set_prog_rawsource( program = &lt;fi&gt;-include
                                    raw = &lt;f&gt;-source ).
          ENDLOOP.

* Text Pool
          set_prog_textpool( program = d_mainprog
                            textpool = s_fm_data-textspool ).
* Dynpro
          set_dynpros( program = d_mainprog
                       dynpros = s_fm_data-dynpros ).

* Menu Painter
          set_menus( program = d_mainprog
                       menus = s_fm_data-menupainter ).

*Texts
          DELETE FROM tlibt WHERE area = s_fm_data-header-area.
          MODIFY tlibt FROM TABLE s_fm_data-texts.

          MODIFY tftit FROM TABLE s_fm_data-function_texts.
          MODIFY funct FROM TABLE s_fm_data-param_texts.

** Documentation
*          zaplink_documentation=&gt;set( t_docs = o_data-&gt;documentation ).

*      COMMIT WORK AND WAIT. &quot; why ?

          CREATE OBJECT _comp.
          _comp-&gt;set_type( st_function_group ).
          _name = o_data-&gt;a0_maindata-area.
          _comp-&gt;set_name( _name ).
          CREATE OBJECT components.
          components-&gt;add( _comp ).
        WHEN OTHERS.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
          RAISE EXCEPTION TYPE zaplink_cx_connector
            EXPORTING
              textid = zaplink_cx_connector=&gt;type_not_supported
              type   = object-&gt;type
              connclass = &apos;ZAPLINK_PROGRAM&apos;.
      ENDCASE.

    CATCH zaplink_cx_connector INTO o_mycx.
      ROLLBACK WORK.
      RAISE EXCEPTION o_mycx.
    CATCH zaplink_cx INTO o_cx.
      ROLLBACK WORK.
      mac_cascade_raise o_mycx o_cx.
  ENDTRY.</SOURCE>
    </ITEM>
   </REDEFINITIONS>
   <TEXTSPOOL>
    <ITEM ID="I" KEY="D00">
     <TEXTS>
      <ITEM LANGU="E" ENTRY="Confirm module function deletion" LENGTH="50 "/>
     </TEXTS>
    </ITEM>
    <ITEM ID="I" KEY="HNO">
     <TEXTS>
      <ITEM LANGU="E" ENTRY="Function is not deleted and process to next existing function. Function group will be created without this function." LENGTH="132 "/>
     </TEXTS>
    </ITEM>
    <ITEM ID="I" KEY="HYE">
     <TEXTS>
      <ITEM LANGU="E" ENTRY="Function is deleted. Function group will be created with this function." LENGTH="132 "/>
     </TEXTS>
    </ITEM>
    <ITEM ID="I" KEY="NO_">
     <TEXTS>
      <ITEM LANGU="E" ENTRY="No" LENGTH="15 "/>
     </TEXTS>
    </ITEM>
    <ITEM ID="I" KEY="YES">
     <TEXTS>
      <ITEM LANGU="E" ENTRY="Yes" LENGTH="15 "/>
     </TEXTS>
    </ITEM>
   </TEXTSPOOL>
   <TYPEGROUPS>
    <ITEM TYPEGROUP="ABAP" VERSION="1" EXPLICIT="X"/>
   </TYPEGROUPS>
   <TYPES>
    <ITEM CMPNAME="TD_FUNCTIONGROUP_NAME" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100416" CHANGEDBY="TBENSIAL" CHANGEDON="20100416" TYPTYPE="1" TYPE="TLIBG-AREA" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function group, to which the function module belongs"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TD_INCLUDENAME" VERSION="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100308" TYPTYPE="1" TYPE="ZAPLINK_FUGR_DATA=&gt;TD_INCLUDENAME" R3RELEASE="700"/>
    <ITEM CMPNAME="TO_GROUP" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" TYPTYPE="3" TYPE="ZAPLINK_FUGR_DATA" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Data for Function group"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_FM_DATA" VERSION="1" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100308" TYPTYPE="1" TYPE="ZAPLINK_FUGR_DATA=&gt;TS_FM_DATA" R3RELEASE="700"/>
    <ITEM CMPNAME="TS_PROG_ATTR" VERSION="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_prog_attr.
  INCLUDE TYPE ts_base_attributs AS base.
  TYPES:
    END OF ts_prog_attr
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Program Attributs"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_SOURCE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100304" TYPTYPE="1" TYPE="STRING" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="ABAP Source code"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_TEXT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4" R3RELEASE="700">begin of ts_text,
      langu   type SPRAS,
      ENTRY	  type TEXTPOOLTX,
      LENGTH  type TEXTPOOLLN,
    end of ts_text</ITEM>
    <ITEM CMPNAME="TS_TEXTPOOL" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4" R3RELEASE="700">begin of ts_textpool,
      ID    type  TEXTPOOLID,
      KEY	  type  TEXTPOOLKY,
      texts type  tt_texts,
    end of ts_textpool</ITEM>
    <ITEM CMPNAME="TT_INCLUDES" VERSION="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100308" TYPTYPE="1" TYPE="ZAPLINK_FUGR_DATA=&gt;TT_RAWINCLUDES"/>
    <ITEM CMPNAME="TT_RS38L_INCL" VERSION="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100308" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     TT_RS38L_INCL type STANDARD TABLE OF rs38l_incl with DEFAULT KEY
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="standard table of rs38l_incl"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TT_TEXTPOOLS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4" R3RELEASE="700">
     TT_TEXTPOOLs type SORTED TABLE OF ts_textpool WITH UNIQUE key ID KEY
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Table of textppool"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TT_TEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100304" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4" R3RELEASE="700">tt_texts type SORTED TABLE OF ts_text WITH UNIQUE KEY langu</ITEM>
    <ITEM CMPNAME="T_RAW" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100304" TYPTYPE="1" TYPE="RSWSOURCET" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="ABAP Source"/>
     </TEXTS>
    </ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="05BF0ABE9E164C9E7405A0CFDE81B07E" CODE_SIGNATURE="3525D30644E72320A80F580572EBFAE4" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_MENUPAINTER_DATA" TYPE="CLAS" VERSION="1.01">
  <DEPENDENCIES>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_DOCUMENTATION"/>
  </DEPENDENCIES>
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100217" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Menu painter Data">
      <DOCUMENTATION TDFRELES="700" TDLRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_PROGRAM
ASDefine XML structure of a Menu painter, that is used in Programs and
  Objects.
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AShttp://help.sap.com/saphelp_nw04/Helpdata/EN/9f/dba99935c111d1829f0000e8
= 29fbfe/content.htm</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ALIASES>
    <ITEM CMPNAME="TD_DOC_ID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_DOC_ID"/>
    <ITEM CMPNAME="TR_DOCID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TR_DOCID"/>
    <ITEM CMPNAME="TT_TEXTS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_TEXTS"/>
   </ALIASES>
   <ATTRIBUTS>
    <ITEM CMPNAME="BAR" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="GUI_FUNC">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Bar Menu code"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="DEFAULT_BAR" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="GUI_FUNC">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Default Bar Menu code"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="DEFAULT_FUNCTION" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="9 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="GUI_FUNC">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Default function Menu code"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF doc_ids,
      header TYPE td_doc_id VALUE &apos;DO&apos;,
    END OF doc_ids
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="FUNCTION" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="GUI_FUNC">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function&apos;s Menu code"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="FUNCTIONS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="15 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="TT_FUNCTIONS">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Functions"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="KEY_SETTINGS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="14 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="TT_KEYBOARDS"/>
    <ITEM CMPNAME="MASTER_LANG" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="10 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="SPRSL">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Master Language"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="MENU" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="GUI_FUNC">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Menu code"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="MENU_BARS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="13 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="TT_BARS"/>
    <ITEM CMPNAME="MENU_LIST" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="12 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="TT_MENUS"/>
    <ITEM CMPNAME="OBJ_TYPES" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF obj_types,   &quot; FROM Include RSMPECON
      menu      TYPE mp_o_type VALUE &apos;M&apos;,
      function  TYPE mp_o_type VALUE &apos;F&apos;,
      title     TYPE mp_o_type VALUE &apos;T&apos;,
      menu_bar  TYPE mp_o_type VALUE &apos;A&apos;,
      key_set   TYPE mp_o_type VALUE &apos;P&apos;,  &quot; Function Key Setting
      button    TYPE mp_o_type VALUE &apos;B&apos;,  &quot; Pushbutton settings
      status    TYPE mp_o_type VALUE &apos;C&apos;,
      separator TYPE mp_o_type VALUE &apos;S&apos;,
      icon      TYPE mp_o_type VALUE &apos;I&apos;,
      program   TYPE mp_o_type VALUE &apos;D&apos;,
      dynpro    TYPE mp_o_type VALUE &apos;E&apos;,
      text      TYPE mp_o_type VALUE &apos;Z&apos;,
      context   TYPE mp_o_type VALUE &apos;X&apos;,
      symbolbar TYPE mp_o_type VALUE &apos;Y&apos;,
    END OF obj_types
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Menu Painter: Standards maintenance: Object type"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="R_DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" ATTDECLTYP="1" TYPTYPE="1" TYPE="TR_DOCID">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Range : Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="STATUS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="11 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="TT_STATUS"/>
    <ITEM CMPNAME="TEXT_TYPES" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF text_types,
      object      TYPE mp_txttype VALUE &apos;M&apos;,
      icon        TYPE mp_txttype VALUE &apos;I&apos;,
      quick_info  TYPE mp_txttype VALUE &apos;Q&apos;,
      tech_info   TYPE mp_txttype VALUE &apos;T&apos;,  &quot; Technical Information
    END OF text_types
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Menu Painter: Text type"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TITLES" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="16 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="TT_TITLES">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Title bars"/>
     </TEXTS>
    </ITEM>
   </ATTRIBUTS>
   <DEFERRED>
    <CLASSES>
     <ITEM TYPEGROUP="ZAPLINK_DOCUMENTATION" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
    </CLASSES>
   </DEFERRED>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_EASYXML" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100217"/>
   </FRIENDS>
   <INTERFACES>
    <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100217" RELTYPE="1"/>
   </INTERFACES>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE
 CLASS zaplink_documentation DEFINITION LOAD.</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="ANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100219">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Anonymized component data"/>
     </TEXTS>
     <SOURCE>`
*  FIELD-SYMBOLS:
*    &lt;t&gt; like LINE OF texts.
*
*  clear: a0_maindata-AS4USER, a0_maindata-AS4DATE, a0_maindata-AS4TIME.
*  loop at texts ASSIGNING &lt;t&gt;.
*    clear: &lt;t&gt;-LONG_TXT-TDFUSER, &lt;t&gt;-LONG_TXT-TDFDATE, &lt;t&gt;-LONG_TXT-TDFTIME.
*  endloop.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100219" MTDTYPE="2" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
  DATA _id LIKE LINE OF r_doc_ids.

  _id-sign = &apos;I&apos;. _id-option = &apos;EQ&apos;.
  _id-low = doc_ids-header. APPEND _id TO r_doc_ids.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="FROM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100219">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert FM Data to object attributes"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100219" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA t_tmp   TYPE tt_atrt.
  DATA t_attr  TYPE SORTED TABLE OF rsmpe_atrt WITH UNIQUE KEY obj_code sub_code obj_type.
  DATA s_attr  LIKE LINE OF t_attr.
  DATA t_tmp_m TYPE tt_mnlt.
  DATA t_menus TYPE SORTED TABLE OF rsmpe_mnlt WITH UNIQUE KEY code.
  DATA s_mnu   LIKE LINE OF t_menus.
  DATA s_title LIKE LINE OF titles.
  DATA s_func  LIKE LINE OF functions.
  DATA s_statu LIKE LINE OF status.
  DATA s_s_fu  LIKE LINE OF s_statu-functions.
  DATA s_menu  LIKE LINE OF menu_list.
  DATA s_m_det LIKE LINE OF s_menu-composition.
  DATA s_bar   LIKE LINE OF menu_bars.
  DATA s_b_det LIKE LINE OF s_bar-composition.
  DATA s_key   LIKE LINE OF key_settings.
  DATA s_k_det LIKE LINE OF s_key-keys.
  DATA s_but   LIKE LINE OF s_key-pushbuttons.
  DATA s_u_det LIKE LINE OF s_but-composition.
  FIELD-SYMBOLS:
    &lt;k&gt;  LIKE LINE OF key_settings,
    &lt;at&gt; LIKE LINE OF fm_data-attributes,
    &lt;bd&gt; LIKE LINE OF fm_data-bars_det,
    &lt;kb&gt; LIKE LINE OF fm_data-keyboards,
    &lt;bu&gt; LIKE LINE OF fm_data-buttons_det,
    &lt;sf&gt; LIKE LINE OF fm_data-stat_funcs,
    &lt;st&gt; LIKE LINE OF fm_data-status,
    &lt;mn&gt; LIKE LINE OF fm_data-menus,
    &lt;md&gt; LIKE LINE OF fm_data-menus_det,
    &lt;fu&gt; LIKE LINE OF fm_data-functions,
    &lt;ti&gt; LIKE LINE OF fm_data-titles.

  bar = fm_data-header-actcode.
  menu = fm_data-header-mencode.
  function = fm_data-header-pfkcode.
  default_bar = fm_data-header-defaultact.
  default_function = fm_data-header-defaultpfk.
  master_lang = fm_data-header-mod_langu.

  LOOP AT fm_data-titles ASSIGNING &lt;ti&gt;.
    CLEAR s_title.
    MOVE-CORRESPONDING &lt;ti&gt; TO s_title-hdr.
    s_title-texts = get_texts( texts = fm_data-texts
                            obj_type = obj_types-title
                            obj_code = s_title-code
                            sub_code = space
                            texttype = text_types-tech_info ).
    INSERT s_title INTO TABLE titles.
  ENDLOOP.

  LOOP AT fm_data-functions ASSIGNING &lt;fu&gt;.
    CLEAR s_func.
    MOVE-CORRESPONDING &lt;fu&gt; TO s_func-hdr.
    s_func-texts = get_func_texts( texts = fm_data-texts
                                obj_code = s_func-code
                                sub_code = s_func-textno ).
    INSERT s_func INTO TABLE functions.
  ENDLOOP.

  t_tmp_m = fm_data-menus.
  SORT t_tmp_m                                   BY code.
  DELETE ADJACENT DUPLICATES FROM t_tmp_m COMPARING code.
  t_menus = t_tmp_m.
* Security Menu bars without name are not in attributes tables.
  LOOP AT fm_data-menus_det ASSIGNING &lt;md&gt;.
    READ TABLE t_menus TRANSPORTING NO FIELDS
         WITH TABLE KEY code = &lt;md&gt;-code.
    IF sy-subrc &lt;&gt; 0.
      CLEAR s_mnu.        s_mnu-code = &lt;md&gt;-code.
      INSERT s_mnu INTO TABLE t_menus.
    ENDIF.
  ENDLOOP.
  LOOP AT t_menus ASSIGNING &lt;mn&gt;.
    CLEAR s_menu.
    MOVE-CORRESPONDING &lt;mn&gt; TO s_menu-hdr.
    s_menu-texts = get_texts( texts = fm_data-texts
                           obj_type = obj_types-menu
                           obj_code = s_menu-code
                           sub_code = space
                           texttype = text_types-object ).
    LOOP AT fm_data-menus_det ASSIGNING &lt;md&gt;
            WHERE code = &lt;mn&gt;-code.
      CLEAR s_m_det.
      MOVE-CORRESPONDING &lt;md&gt; TO s_m_det.
      CLEAR: s_m_det-code.
      INSERT s_m_det INTO TABLE s_menu-composition.
    ENDLOOP.
    INSERT s_menu INTO TABLE menu_list.
  ENDLOOP.

  t_tmp = fm_data-attributes.
  SORT t_tmp                                   BY obj_code sub_code obj_type.
  DELETE ADJACENT DUPLICATES FROM t_tmp COMPARING obj_code sub_code obj_type.
  t_attr = t_tmp.
* Security Menu bars without name are not in attributes tables.
  LOOP AT fm_data-bars_det ASSIGNING &lt;bd&gt;.
    READ TABLE t_attr TRANSPORTING NO FIELDS
         WITH TABLE KEY obj_code = &lt;bd&gt;-code
                        sub_code = space
                        obj_type = obj_types-menu_bar.
    IF sy-subrc &lt;&gt; 0.
      CLEAR s_attr.        s_attr-obj_type = obj_types-menu_bar.         s_attr-obj_code = &lt;bd&gt;-code.
      INSERT s_attr INTO TABLE t_attr.
    ENDIF.
  ENDLOOP.
* Security keyboars without name are not in attributes tables.
  LOOP AT fm_data-keyboards ASSIGNING &lt;kb&gt;.
    READ TABLE t_attr TRANSPORTING NO FIELDS
         WITH TABLE KEY obj_code = &lt;kb&gt;-code
                        sub_code = space
                        obj_type = obj_types-key_set.
    IF sy-subrc &lt;&gt; 0.
      CLEAR s_attr.        s_attr-obj_type = obj_types-key_set.         s_attr-obj_code = &lt;kb&gt;-code.
      INSERT s_attr INTO TABLE t_attr.
    ENDIF.
  ENDLOOP.
* Security button without name are not in attributes tables.
  LOOP AT fm_data-buttons_det ASSIGNING &lt;bu&gt;.
    READ TABLE t_attr TRANSPORTING NO FIELDS
         WITH TABLE KEY obj_code = &lt;bu&gt;-pfk_code
                        sub_code = &lt;bu&gt;-code
                        obj_type = obj_types-button.
    IF sy-subrc &lt;&gt; 0.
      CLEAR s_attr.        s_attr-obj_type = obj_types-button.         s_attr-obj_code = &lt;bu&gt;-pfk_code.     s_attr-sub_code = &lt;bu&gt;-code.
      INSERT s_attr INTO TABLE t_attr.
    ENDIF.
  ENDLOOP.

  LOOP AT t_attr ASSIGNING &lt;at&gt;.
    CASE &lt;at&gt;-obj_type.
      WHEN obj_types-menu_bar.
        CLEAR s_bar.        MOVE-CORRESPONDING &lt;at&gt; TO s_bar-hdr.
        s_bar-texts = get_texts( texts = fm_data-texts
                              obj_type = obj_types-menu_bar
                              obj_code = s_bar-obj_code
                              sub_code = space
                              texttype = text_types-tech_info ).
        LOOP AT fm_data-bars_det ASSIGNING &lt;bd&gt;
                WHERE code = &lt;at&gt;-obj_code.
          CLEAR s_b_det.        MOVE-CORRESPONDING &lt;bd&gt; TO s_b_det.         CLEAR: s_b_det-code.
          INSERT s_b_det INTO TABLE s_bar-composition.
        ENDLOOP.
        CLEAR s_bar-obj_type.
        INSERT s_bar INTO TABLE menu_bars.
      WHEN obj_types-key_set.
        CLEAR s_key.          MOVE-CORRESPONDING &lt;at&gt; TO s_key-hdr.
        s_key-texts = get_texts( texts = fm_data-texts
                              obj_type = obj_types-key_set
                              obj_code = s_key-obj_code
                              sub_code = space
                              texttype = text_types-tech_info ).
        LOOP AT fm_data-keyboards ASSIGNING &lt;kb&gt;
                WHERE code = &lt;at&gt;-obj_code.
          CLEAR s_k_det.          MOVE-CORRESPONDING &lt;kb&gt; TO s_k_det.       CLEAR: s_k_det-code.
          INSERT s_k_det INTO TABLE s_key-keys.
        ENDLOOP.
        CLEAR s_key-obj_type.
        INSERT s_key INTO TABLE key_settings.
      WHEN obj_types-button.
        READ TABLE key_settings ASSIGNING &lt;k&gt;
             WITH TABLE KEY obj_code = &lt;at&gt;-obj_code.
        IF sy-subrc &lt;&gt; 0.
          WRITE:/ &apos;button without key&apos;, &lt;at&gt;-obj_code.
        ELSE.
          CLEAR s_but.        MOVE-CORRESPONDING &lt;at&gt; TO s_but-hdr.
          s_but-texts = get_texts( texts = fm_data-texts
                                obj_type = obj_types-button
                                obj_code = s_but-obj_code
                                sub_code = s_but-sub_code
                                texttype = text_types-tech_info ).
          LOOP AT fm_data-buttons_det ASSIGNING &lt;bu&gt;
                  WHERE pfk_code = &lt;at&gt;-obj_code
                    AND code = &lt;at&gt;-sub_code.
            CLEAR s_u_det.        MOVE-CORRESPONDING &lt;bu&gt; TO s_u_det.       CLEAR: s_u_det-pfk_code, s_u_det-code.
            INSERT s_u_det INTO TABLE s_but-composition.
          ENDLOOP.
          CLEAR: s_but-obj_type, s_but-obj_code.
          INSERT s_but INTO TABLE &lt;k&gt;-pushbuttons.
        ENDIF.
    ENDCASE.
  ENDLOOP.

  LOOP AT fm_data-status ASSIGNING &lt;st&gt;.
    CLEAR s_statu.     MOVE-CORRESPONDING &lt;st&gt; TO s_statu-hdr.
    s_statu-texts = get_texts( texts = fm_data-texts
                            obj_type = obj_types-status
                            obj_code = s_statu-code
                            sub_code = space
                            texttype = text_types-tech_info ).
    LOOP AT fm_data-stat_funcs ASSIGNING &lt;sf&gt;
            WHERE status = &lt;st&gt;-code.
      s_s_fu = &lt;sf&gt;-function.
      INSERT s_s_fu INTO TABLE s_statu-functions.
    ENDLOOP.
    INSERT s_statu INTO TABLE status.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="GET_FUNC_TEXTS" VERSION="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100218" MTDDECLTYP="1" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Get Function texts"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="OBJ_CODE" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="RSMPTEXTS-OBJ_CODE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter: Function code"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARDECLTYP="3" TYPTYPE="1" TYPE="TT_MP_FTEXTS"/>
      <ITEM SCONAME="SUB_CODE" VERSION="1" CMPTYPE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter. Function key code"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="TEXTS" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_STEXTS"/>
     </PARAMETERS>
     <SOURCE>`
  DATA s_txt LIKE LINE OF result.
  FIELD-SYMBOLS:
    &lt;r&gt; LIKE LINE OF result,
    &lt;t&gt; LIKE LINE OF texts.

  LOOP AT texts ASSIGNING &lt;t&gt;
       WHERE obj_type = obj_types-function
         AND obj_code = obj_code
         AND sub_code = sub_code.
    READ TABLE result ASSIGNING &lt;r&gt;
         WITH TABLE KEY langu = &lt;t&gt;-sprsl.
    IF sy-subrc &lt;&gt; 0.
      s_txt-langu = &lt;t&gt;-sprsl.
      INSERT s_txt INTO TABLE result.
      READ TABLE result ASSIGNING &lt;r&gt;
           WITH TABLE KEY langu = &lt;t&gt;-sprsl.
      IF sy-subrc &lt;&gt; 0.
* Not possible ==&gt; will dump
      ENDIF.
    ENDIF.

    CASE &lt;t&gt;-texttype.
      WHEN text_types-object.
        &lt;r&gt;-text = &lt;t&gt;-text.
      WHEN text_types-icon.
        &lt;r&gt;-icon = &lt;t&gt;-text.
      WHEN text_types-quick_info.
        &lt;r&gt;-info = &lt;t&gt;-text.
      WHEN OTHERS.
* Erro handling
    ENDCASE.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="GET_TEXTS" VERSION="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" MTDDECLTYP="1" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Get texts for Object_type"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="OBJ_CODE" VERSION="1" CMPTYPE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="RSMPTEXTS-OBJ_CODE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter: Function code"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJ_TYPE" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="RSMPTEXTS-OBJ_TYPE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter: Standards maintenance: Object type"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100218" PARDECLTYP="3" TYPTYPE="1" TYPE="TT_MP_TEXTS"/>
      <ITEM SCONAME="SUB_CODE" VERSION="1" CMPTYPE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter. Function key code"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="TEXTS" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_STEXTS"/>
      <ITEM SCONAME="TEXTTYPE" VERSION="1" CMPTYPE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="RSMPTEXTS-TEXTTYPE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter: Text type"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_txt LIKE LINE OF result.
  FIELD-SYMBOLS:
    &lt;t&gt; LIKE LINE OF texts.

  LOOP AT texts ASSIGNING &lt;t&gt;
       WHERE obj_type = obj_type
         AND obj_code = obj_code
         AND sub_code = sub_code
         AND texttype = texttype.
    s_txt-langu = &lt;t&gt;-sprsl.
    s_txt-text = &lt;t&gt;-text.
    INSERT s_txt INTO TABLE result.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="SET_FUNC_TEXTS" VERSION="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100218" MTDDECLTYP="1" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Set Function texts"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="OBJ_CODE" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="RSMPTEXTS-OBJ_CODE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter: Function code"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_STEXTS"/>
      <ITEM SCONAME="SUB_CODE" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter. Function key code"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="TEXTS" VERSION="1" CMPTYPE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_MP_FTEXTS"/>
     </PARAMETERS>
     <SOURCE>`
  DATA s_txt LIKE LINE OF result.
  FIELD-SYMBOLS:
    &lt;t&gt; LIKE LINE OF texts.

  LOOP AT texts ASSIGNING &lt;t&gt;.
    clear s_txt.
    s_txt-obj_type = obj_types-function.
    s_txt-obj_code = obj_code.
    s_txt-sub_code = sub_code.
    s_txt-sprsl = &lt;t&gt;-langu.
    s_txt-texttype = text_types-object.     s_txt-text = &lt;t&gt;-text.      if not s_txt-text is INITIAL. INSERT s_txt INTO TABLE result. endif.
    s_txt-texttype = text_types-icon.       s_txt-text = &lt;t&gt;-icon.      if not s_txt-text is INITIAL. INSERT s_txt INTO TABLE result. endif.
    s_txt-texttype = text_types-quick_info. s_txt-text = &lt;t&gt;-info.      if not s_txt-text is INITIAL. INSERT s_txt INTO TABLE result. endif.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="SET_TEXTS" VERSION="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100218" MTDDECLTYP="1" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Set texts from texts data"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="OBJ_CODE" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="RSMPTEXTS-OBJ_CODE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter: Function code"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJ_TYPE" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="RSMPTEXTS-OBJ_TYPE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter: Standards maintenance: Object type"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_STEXTS"/>
      <ITEM SCONAME="SUB_CODE" VERSION="1" CMPTYPE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter. Function key code"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="TEXTS" VERSION="1" CMPTYPE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="1" TYPE="TT_MP_TEXTS"/>
      <ITEM SCONAME="TEXTTYPE" VERSION="1" CMPTYPE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" PARPASSTYP="1" TYPTYPE="1" TYPE="RSMPTEXTS-TEXTTYPE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Menu Painter: Text type"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_txt LIKE LINE OF result.
  FIELD-SYMBOLS:
    &lt;t&gt; LIKE LINE OF texts.

  LOOP AT texts ASSIGNING &lt;t&gt;.
    s_txt-obj_type = obj_type.
    s_txt-obj_code = obj_code.
    s_txt-sub_code = sub_code.
    s_txt-texttype = texttype.
    s_txt-sprsl = &lt;t&gt;-langu.
    s_txt-text = &lt;t&gt;-text.
    INSERT s_txt INTO TABLE result.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="TO_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100219">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert object attributes to FM Data"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100219" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_title LIKE LINE OF fm_data-titles.
  DATA s_func  LIKE LINE OF fm_data-functions.
  DATA s_statu LIKE LINE OF fm_data-status.
  DATA s_s_fu  LIKE LINE OF fm_data-stat_funcs.
  DATA s_menu  LIKE LINE OF fm_data-menus.
  DATA s_m_det LIKE LINE OF fm_data-menus_det.
  DATA s_attr  LIKE LINE OF fm_data-attributes.
  DATA s_b_det LIKE LINE OF fm_data-bars_det.
  DATA s_k_det LIKE LINE OF fm_data-keyboards.
  DATA s_but   LIKE LINE OF fm_data-buttons_det.
  FIELD-SYMBOLS:
    &lt;mb&gt; LIKE LINE OF menu_bars,
    &lt;bc&gt; LIKE LINE OF &lt;mb&gt;-composition,
    &lt;ks&gt; LIKE LINE OF key_settings,
    &lt;kk&gt; LIKE LINE OF &lt;ks&gt;-keys,
    &lt;pb&gt; LIKE LINE OF &lt;ks&gt;-pushbuttons,
    &lt;pc&gt; LIKE LINE OF &lt;pb&gt;-composition,
    &lt;st&gt; LIKE LINE OF status,
    &lt;sf&gt; LIKE LINE OF &lt;st&gt;-functions,
    &lt;mn&gt; LIKE LINE OF menu_list,
    &lt;md&gt; LIKE LINE OF &lt;mn&gt;-composition,
    &lt;fu&gt; LIKE LINE OF functions,
    &lt;ti&gt; LIKE LINE OF titles.

  fm_data-header-actcode = bar.
  fm_data-header-mencode = menu.
  fm_data-header-pfkcode = function.
  fm_data-header-defaultact = default_bar.
  fm_data-header-defaultpfk = default_function.
  fm_data-header-mod_langu = master_lang.

  LOOP AT titles ASSIGNING &lt;ti&gt;.
    CLEAR s_title.        MOVE-CORRESPONDING &lt;ti&gt;-hdr TO s_title.
    INSERT s_title INTO TABLE fm_data-titles.
    CALL METHOD set_texts
      EXPORTING
        obj_type = obj_types-title
        obj_code = s_title-code
        sub_code = space
        texttype = text_types-tech_info
        texts    = &lt;ti&gt;-texts
      CHANGING
        RESULT   = fm_data-texts.
  ENDLOOP.

  LOOP AT functions ASSIGNING &lt;fu&gt;.
    CLEAR s_func.     MOVE-CORRESPONDING &lt;fu&gt;-hdr TO s_func.
    INSERT s_func INTO TABLE fm_data-functions.
    CALL METHOD set_func_texts
      EXPORTING
        obj_code = s_func-code
        sub_code = s_func-textno
        texts    = &lt;fu&gt;-texts
      CHANGING
        RESULT   = fm_data-texts.
  ENDLOOP.

  LOOP AT menu_list ASSIGNING &lt;mn&gt;.
    CLEAR s_menu.     MOVE-CORRESPONDING &lt;mn&gt;-hdr TO s_menu.
    INSERT s_menu INTO TABLE fm_data-menus.
    CALL METHOD set_texts
      EXPORTING
        obj_type = obj_types-menu
        obj_code = s_menu-code
        sub_code = space
        texttype = text_types-object
        texts    = &lt;mn&gt;-texts
      CHANGING
        RESULT   = fm_data-texts.
    LOOP AT &lt;mn&gt;-composition ASSIGNING &lt;md&gt;.
      CLEAR s_m_det.      MOVE-CORRESPONDING &lt;md&gt; TO s_m_det.       s_m_det-code = &lt;mn&gt;-code.
      INSERT s_m_det INTO TABLE fm_data-menus_det.
    ENDLOOP.
  ENDLOOP.

* Menu Bars
  LOOP AT menu_bars ASSIGNING &lt;mb&gt;.
    CLEAR s_attr.         MOVE-CORRESPONDING &lt;mb&gt;-hdr TO s_attr.    s_attr-obj_type = obj_types-menu_bar.
    INSERT s_attr INTO TABLE fm_data-attributes.
    CALL METHOD set_texts
      EXPORTING
        obj_type = obj_types-menu_bar
        obj_code = s_attr-obj_code
        sub_code = space
        texttype = text_types-tech_info
        texts    = &lt;mb&gt;-texts
      CHANGING
        RESULT   = fm_data-texts.
    LOOP AT &lt;mb&gt;-composition ASSIGNING &lt;bc&gt;.
      CLEAR s_b_det.      MOVE-CORRESPONDING &lt;bc&gt; TO s_b_det.       s_b_det-code = &lt;mb&gt;-obj_code.
      INSERT s_b_det INTO TABLE fm_data-bars_det.
    ENDLOOP.
  ENDLOOP.

* Key settings
  LOOP AT key_settings ASSIGNING &lt;ks&gt;.
    CLEAR s_attr.         MOVE-CORRESPONDING &lt;ks&gt;-hdr TO s_attr.    s_attr-obj_type = obj_types-key_set.
    INSERT s_attr INTO TABLE fm_data-attributes.
    LOOP AT &lt;ks&gt;-keys ASSIGNING &lt;kk&gt;.
      CLEAR s_k_det.      MOVE-CORRESPONDING &lt;kk&gt; TO s_k_det.       s_k_det-code = &lt;ks&gt;-obj_code.
      INSERT s_k_det INTO TABLE fm_data-keyboards.
    ENDLOOP.
    LOOP AT &lt;ks&gt;-pushbuttons ASSIGNING &lt;pb&gt;.
      CLEAR s_attr.       MOVE-CORRESPONDING &lt;pb&gt; TO s_attr.        s_attr-obj_type = obj_types-button.       s_attr-obj_code = &lt;ks&gt;-obj_code.
      INSERT s_attr INTO TABLE fm_data-attributes.
      CALL METHOD set_texts
        EXPORTING
          obj_type = obj_types-button
          obj_code = s_attr-obj_code
          sub_code = s_attr-sub_code
          texttype = text_types-tech_info
          texts    = &lt;pb&gt;-texts
        CHANGING
          RESULT   = fm_data-texts.
      LOOP AT &lt;pb&gt;-composition ASSIGNING &lt;pc&gt;.
        CLEAR s_but.      MOVE-CORRESPONDING &lt;pc&gt; TO s_but.         s_but-pfk_code = &lt;ks&gt;-obj_code.        s_but-code = &lt;pb&gt;-sub_code.
        INSERT s_but INTO TABLE fm_data-buttons_det.
      ENDLOOP.
    ENDLOOP.
  ENDLOOP.

  LOOP AT status ASSIGNING &lt;st&gt;.
    CLEAR s_statu.        MOVE-CORRESPONDING &lt;st&gt;-hdr TO s_statu.
    INSERT s_statu INTO TABLE fm_data-status.
    CALL METHOD set_texts
      EXPORTING
        obj_type = obj_types-status
        obj_code = s_statu-code
        sub_code = space
        texttype = text_types-tech_info
        texts    = &lt;st&gt;-texts
      CHANGING
        RESULT   = fm_data-texts.
    LOOP AT &lt;st&gt;-functions ASSIGNING &lt;sf&gt;.
      CLEAR s_s_fu.     s_s_fu-status = &lt;st&gt;-code.      s_s_fu-function = &lt;sf&gt;.
      INSERT s_s_fu INTO TABLE fm_data-stat_funcs.
    ENDLOOP.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="UNANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100219">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UnAnonymized component data"/>
     </TEXTS>
    </ITEM>
   </METHODS>
   <TYPES>
    <ITEM CMPNAME="TS_ATTRIBUTE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="22 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_attribute.
    INCLUDE TYPE rsmpe_atr AS hdr.
    TYPES:
        texts TYPE tt_mp_texts,
      END OF ts_attribute
`</ITEM>
    <ITEM CMPNAME="TS_BAR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="14 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_bar.
    INCLUDE TYPE rsmpe_atr AS hdr.
    TYPES:
        texts        TYPE tt_mp_texts,
        composition  TYPE tt_bar_details,
      END OF ts_bar
`</ITEM>
    <ITEM CMPNAME="TS_BUTTON" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="17 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_button.
    INCLUDE TYPE rsmpe_atr AS hdr.
    TYPES:
        texts        TYPE tt_mp_texts,
        composition  TYPE tt_button_details,
      END OF ts_button
`</ITEM>
    <ITEM CMPNAME="TS_FM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="39 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_fm_data,
          header        TYPE rsmpe_adm,
          status        TYPE tt_stat,
          functions     TYPE tt_funt,
          menus_det     TYPE tt_men,
          menus         TYPE tt_mnlt,
          bars_det      TYPE tt_act,
          buttons_det   TYPE tt_but,
          keyboards     TYPE tt_pfk,
          stat_funcs    TYPE tt_staf,
          attributes    TYPE tt_atrt,
          titles        TYPE tt_titt,
          ffuncs        TYPE tt_buts,
          texts         TYPE tt_stexts,
        END OF ts_fm_data
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function Module Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_FUNCTION" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_function.
    INCLUDE TYPE rsmpe_fun AS hdr.
    TYPES:
        texts         TYPE tt_mp_ftexts,
      END OF ts_function
`</ITEM>
    <ITEM CMPNAME="TS_KEYBOARD" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="20 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_keyboard.
    INCLUDE TYPE rsmpe_atr AS hdr.
    TYPES:
        texts        TYPE tt_mp_texts,
        keys         TYPE tt_keyssettings,
        pushbuttons  TYPE tt_buttons,
      END OF ts_keyboard
`</ITEM>
    <ITEM CMPNAME="TS_MENU" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="11 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_menu.
    INCLUDE TYPE rsmpe_mnl AS hdr.
    TYPES:
        texts        TYPE tt_mp_texts,
        composition  TYPE tt_menu_details,
      END OF ts_menu
`</ITEM>
    <ITEM CMPNAME="TS_MP_FTEXT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_mp_ftext,
          langu TYPE rsmptexts-sprsl,
          text  TYPE rsmptexts-text,
          icon  TYPE rsmptexts-text,
          info  TYPE rsmptexts-text,
        END OF ts_mp_ftext
`</ITEM>
    <ITEM CMPNAME="TS_MP_TEXT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_mp_text,
          langu TYPE rsmptexts-sprsl,
          text  TYPE rsmptexts-text,
*    types:
*      begin of ts_menu.
*        include TYPE rsmpe_mnl as hdr.
*    types:
*        texts type tt_mp_texts,
*      end of ts_menu.
*    TYPES:
*      tt_mtexts TYPE STANDARD TABLE OF t WITH unique KEY code .
        END OF ts_mp_text
`</ITEM>
    <ITEM CMPNAME="TS_STATUS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_status.
    INCLUDE TYPE rsmpe_sta AS hdr.
    TYPES:
        texts TYPE tt_mp_texts,
        functions TYPE tt_funcs,
      END OF ts_status
`</ITEM>
    <ITEM CMPNAME="TS_TITLE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="24 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_title.
    INCLUDE TYPE rsmpe_tit AS hdr.
    TYPES:
        texts TYPE tt_mp_texts,
      END OF ts_title
`</ITEM>
    <ITEM CMPNAME="TT_ACT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="31 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_act TYPE STANDARD TABLE OF rsmpe_act WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_ATRT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="35 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_atrt TYPE STANDARD TABLE OF rsmpe_atrt WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_ATTRIBUTES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="23 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_attributes TYPE SORTED TABLE OF ts_attribute WITH UNIQUE KEY obj_type obj_code sub_code
`</ITEM>
    <ITEM CMPNAME="TT_BARS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="15 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_bars TYPE SORTED TABLE OF ts_bar WITH UNIQUE KEY obj_code
`</ITEM>
    <ITEM CMPNAME="TT_BAR_DETAILS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="13 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_bar_details TYPE SORTED TABLE OF rsmpe_act WITH UNIQUE KEY no
`</ITEM>
    <ITEM CMPNAME="TT_BUT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="32 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_but TYPE STANDARD TABLE OF rsmpe_but WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_BUTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="37 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_buts TYPE STANDARD TABLE OF rsmpe_buts WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_BUTTONS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="18 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_buttons TYPE SORTED TABLE OF ts_button WITH UNIQUE KEY sub_code
`</ITEM>
    <ITEM CMPNAME="TT_BUTTON_DETAILS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="16 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_button_details TYPE SORTED TABLE OF rsmpe_but WITH UNIQUE KEY no
`</ITEM>
    <ITEM CMPNAME="TT_FFUNCS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="26 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_ffuncs TYPE SORTED TABLE OF rsmpe_buts WITH UNIQUE KEY obj_code sub_code
`</ITEM>
    <ITEM CMPNAME="TT_FUNCS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_funcs TYPE SORTED TABLE OF gui_func WITH UNIQUE KEY table_line
`</ITEM>
    <ITEM CMPNAME="TT_FUNCTIONS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="9 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_functions TYPE SORTED TABLE OF ts_function WITH UNIQUE KEY code textno
`</ITEM>
    <ITEM CMPNAME="TT_FUNT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="28 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_funt TYPE STANDARD TABLE OF rsmpe_funt WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_KEYBOARDS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="21 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_keyboards TYPE SORTED TABLE OF ts_keyboard WITH UNIQUE KEY obj_code
`</ITEM>
    <ITEM CMPNAME="TT_KEYSSETTINGS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="19 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_keyssettings TYPE SORTED TABLE OF rsmpe_pfk WITH UNIQUE KEY pfno
`</ITEM>
    <ITEM CMPNAME="TT_MEN" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="29 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_men TYPE STANDARD TABLE OF rsmpe_men WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_MENUS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="12 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_menus TYPE SORTED TABLE OF ts_menu WITH UNIQUE KEY code
`</ITEM>
    <ITEM CMPNAME="TT_MENU_DETAILS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="10 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_menu_details TYPE SORTED TABLE OF rsmpe_men WITH UNIQUE KEY no
`</ITEM>
    <ITEM CMPNAME="TT_MNLT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="30 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_mnlt TYPE STANDARD TABLE OF rsmpe_mnlt WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_MP_FTEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_mp_ftexts TYPE SORTED TABLE OF ts_mp_ftext WITH UNIQUE KEY langu
`</ITEM>
    <ITEM CMPNAME="TT_MP_TEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_mp_texts TYPE SORTED TABLE OF ts_mp_text WITH UNIQUE KEY langu
`</ITEM>
    <ITEM CMPNAME="TT_PFK" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="33 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_pfk TYPE STANDARD TABLE OF rsmpe_pfk WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_STAF" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="34 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_staf TYPE STANDARD TABLE OF rsmpe_staf WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_STAT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="27 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_stat TYPE STANDARD TABLE OF rsmpe_stat WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_STATUS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_status TYPE SORTED TABLE OF ts_status WITH UNIQUE KEY code
`</ITEM>
    <ITEM CMPNAME="TT_STEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="38 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_stexts TYPE SORTED TABLE OF rsmptexts WITH UNIQUE KEY obj_type obj_code sub_code texttype sprsl
`</ITEM>
    <ITEM CMPNAME="TT_TITLES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="25 " AUTHOR="TBENSIAL" CREATEDON="20100217" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_titles TYPE SORTED TABLE OF ts_title WITH UNIQUE KEY code
`</ITEM>
    <ITEM CMPNAME="TT_TITT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="36 " AUTHOR="TBENSIAL" CREATEDON="20100218" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_titt TYPE STANDARD TABLE OF rsmpe_titt WITH DEFAULT KEY
`</ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="09C443D835D231B8F3E4B5E20A8EF04A" CONNECTOR="1FAC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_FUGR" TYPE="MSAG" VERSION="1.0">
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA MASTERLANG="E" RESPUSER="TBENSIAL" LASTUSER="TBENSIAL" LDATE="20100308" LTIME="170446"/>
   <MESSAGES>
    <ITEM MSGNR="000" NAME="TBENSIAL" DATUM="20100308" SELFDEF="3">
     <TEXTS>
      <ITEM LANGU="E" SHORT_TXT="The function &amp;1 already exist in FUGR (&amp;2), do you confirm deletion ?"/>
     </TEXTS>
    </ITEM>
   </MESSAGES>
   <TEXTS>
    <ITEM LANGU="E" SHORT_TXT="Pour object : ZAPLINK_FUNCTION_GROUP"/>
   </TEXTS>
  </RAW>
 </ZL_OBJECT>
</CONTAINER>
