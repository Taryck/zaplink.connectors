<?xml version="1.0" encoding="utf-16"?>
<CONTAINER NAME="ZAPLINK_DICTIONARY" VERSION="1.0" CLASS="ZAPLINK_CONTAINER">
 <ZL_OBJECT CHECKSUM="E0819DC09E9F1F7938C1C80282597CD2" CODE_SIGNATURE="B3C36B31FE55711D03824C6CE89B2007" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_DICTIONARY" TYPE="CLAS" VERSION="1.01">
  <DEPENDENCIES>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_CONNECTOR_"/>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_DOCUMENTATION"/>
  </DEPENDENCIES>
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100129" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100129" CHANGEDBY="TBENSIAL" CHANGEDON="20100419"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Data for Class">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs a connector for :
AS- TYPE : Type group
AS- DOMA : Domain
AS- DTEL : Data element
AS- TTYP : Table type
AS- SHLP : Search Help
AS- TABL : Table / Structure
AS- VIEW : View
AS- ENQU : Lock Object
AS
U1&amp;RELATIONS&amp;
ASIs part of ZAP Link Framework as Official Connector.
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AShttps://code.google.com/p/zaplink/wiki/Connector</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ATTRIBUTS>
    <ITEM CMPNAME="BALLOG_SUBOBJECT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100203" CHANGEDBY="TBENSIAL" CHANGEDON="20100203" ATTDECLTYP="2" ATTVALUE="&apos;CNX_DICTIONARY&apos;" TYPTYPE="1" TYPE="BALSUBOBJ" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Application Log: Subobject"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="DD_EU_TYPE" VERSION="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100209" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF dd_eu_type,          &quot; Domain DDEUTYPE
      table_type        TYPE ddeutype VALUE &apos;A&apos;,     &quot; A  Table Type
      domain            TYPE ddeutype VALUE &apos;D&apos;,     &quot; D  Domain
      data_element      TYPE ddeutype VALUE &apos;E&apos;,     &quot; E  Data Element
      table_field       TYPE ddeutype VALUE &apos;F&apos;,     &quot; F  Table Field
      type_group        TYPE ddeutype VALUE &apos;G&apos;,     &quot; G  Type Group
      search_help       TYPE ddeutype VALUE &apos;H&apos;,     &quot; H  Search Help
      mactchcode_id     TYPE ddeutype VALUE &apos;I&apos;,     &quot; I  Matchcode ID
      lock_object       TYPE ddeutype VALUE &apos;L&apos;,     &quot; L  Lock Object
      matchcode_obj     TYPE ddeutype VALUE &apos;M&apos;,     &quot; M  Matchcode Object
      table_index       TYPE ddeutype VALUE &apos;N&apos;,     &quot; N  Table Index
      ext_index         TYPE ddeutype VALUE &apos;N&apos;,     &quot; O  Extention Index MF INTERN_TRANSL_EUTYPE
      internal_struct   TYPE ddeutype VALUE &apos;S&apos;,     &quot; S  Internal Structure
      transp_table      TYPE ddeutype VALUE &apos;T&apos;,     &quot; T  Transparent Table
      structure         TYPE ddeutype VALUE &apos;U&apos;,     &quot; U  Table/Structure
      view              TYPE ddeutype VALUE &apos;V&apos;,     &quot; V  View
      table_pool        TYPE ddeutype VALUE &apos;X&apos;,     &quot; X  Table Pool
      table_cluster     TYPE ddeutype VALUE &apos;Y&apos;,     &quot; Y  Table Cluster
      t_cluster_pool    TYPE ddeutype VALUE &apos;Z&apos;,     &quot; Z  Table cluster/pool
    END OF dd_eu_type
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="DD object type in EU management system (domain : DDEUTYPE)"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="SUPPORTEDTYPES" VERSION="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100129" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF supportedtypes,                                  &quot;#EC NOTEXT
      type_group        TYPE td_comptype VALUE &apos;TYPE&apos;,
      domain            TYPE td_comptype VALUE &apos;DOMA&apos;,
      data_element      TYPE td_comptype VALUE &apos;DTEL&apos;,
      table_type        TYPE td_comptype VALUE &apos;TTYP&apos;,
      search_help       TYPE td_comptype VALUE &apos;SHLP&apos;,
      mactchcode_id     TYPE td_comptype VALUE &apos;MCID&apos;,
      lock_object       TYPE td_comptype VALUE &apos;ENQU&apos;,
      matchcode_obj     TYPE td_comptype VALUE &apos;MCOB&apos;,
      table_index       TYPE td_comptype VALUE &apos;INDX&apos;,     &quot; N  Table Index
      ext_index         TYPE td_comptype VALUE &apos;XINX&apos;,     &quot; O  Extention Index MF INTERN_TRANSL_EUTYPE
      table             TYPE td_comptype VALUE &apos;TABL&apos;,
      view              TYPE td_comptype VALUE &apos;VIEW&apos;,
      t_cluster_pool    TYPE td_comptype VALUE &apos;SQLT&apos;,
    END OF supportedtypes
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Connector supported types"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="_UUID" VERSION="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100129" CHANGEDBY="TBENSIAL" CHANGEDON="20100209" ATTDECLTYP="2" ATTVALUE="&apos;5079624B82531D63E1000000AC120173&apos;" TYPTYPE="1" TYPE="TD_CONNUUID">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UUID for connector Message class"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="_VER" VERSION="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100129" CHANGEDBY="TBENSIAL" CHANGEDON="20100209" ATTDECLTYP="2" ATTVALUE="&apos;1.0&apos;" TYPTYPE="1" TYPE="TD_CONNVER">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Connector Version"/>
     </TEXTS>
    </ITEM>
   </ATTRIBUTS>
   <DEFERRED>
    <CLASSES>
     <ITEM TYPEGROUP="ZAPLINK_DOCUMENTATION" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
    </CLASSES>
   </DEFERRED>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* in the implementation part of the class

INCLUDE zaplink_macros.

DEFINE mac_obj_data.
  data o_typegroup type to_typegroup.
  data o_domain    type to_domain.
  data o_data_e    type to_data_element.
  data o_view      type to_view.
  data o_table     type to_table.
  data o_tab_type  type to_table_type.
  data o_s_help    type to_search_help.
  data o_lock_obj  type to_lock_object.
END-OF-DEFINITION.</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100129" MTDTYPE="2" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
  DATA type LIKE LINE OF supported_types.

  CALL METHOD super-&gt;constructor.
  mac_create_log application_log ballog_subobject space.
  type-type = supportedtypes-type_group.    INSERT type INTO TABLE supported_types.
  type-type = supportedtypes-domain.        INSERT type INTO TABLE supported_types.
  type-type = supportedtypes-data_element.  INSERT type INTO TABLE supported_types.
  type-type = supportedtypes-view.          INSERT type INTO TABLE supported_types.
  type-type = supportedtypes-table.         INSERT type INTO TABLE supported_types.
  type-type = supportedtypes-table_type.    INSERT type INTO TABLE supported_types.
  type-type = supportedtypes-search_help.   INSERT type INTO TABLE supported_types.
  type-type = supportedtypes-lock_object.   INSERT type INTO TABLE supported_types.

  uuid = _uuid.
  version = _ver.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="EXPORT_DATA_ELEMENT" VERSION="1" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100215" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Export Data Element from SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100215" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJECT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100215" CHANGEDBY="TBENSIAL" CHANGEDON="20100215" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_DATA_ELEMENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Data for data element"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100215">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name     TYPE ddobjname.
  DATA str        TYPE string.
  DATA subrc      TYPE sy-subrc.
  DATA s_fm_data  TYPE zaplink_dtel_data=&gt;ts_fm_data.
  DATA d_mask     TYPE doku_obj.
  DATA t_texts    TYPE STANDARD TABLE OF dd04t WITH DEFAULT KEY.
  FIELD-SYMBOLS:
    &lt;o_s&gt; TYPE REF TO cl_wb_source.

  TRY.
    d_name = component-&gt;get_name( ).
    CALL FUNCTION &apos;DDIF_DTEL_GET&apos;
      EXPORTING
        name                = d_name
        state               = &apos;M&apos;
        langu               = &apos; &apos;
      IMPORTING
*        GOTSTATE            =
        dd04v_wa            = s_fm_data-header
        tpara_wa            = s_fm_data-param
      EXCEPTIONS
        illegal_input       = 1
        OTHERS              = 2.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_DTEL_GET&apos; sy-subrc.
    ENDIF.

    SELECT *
      INTO TABLE t_texts
      FROM dd04t
      WHERE rollname = d_name
        AND ddtext &lt;&gt; space.
    SORT t_texts BY ddlanguage as4local.
    DELETE ADJACENT DUPLICATES FROM t_texts COMPARING ddlanguage.
    s_fm_data-texts = t_texts.

    d_mask = d_name.
    s_fm_data-docs = zaplink_documentation=&gt;get( ids = zaplink_dtel_data=&gt;r_doc_ids
                                              object = d_mask ).

    CREATE OBJECT object.
    object-&gt;from_data( s_fm_data ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="EXPORT_DOMAIN" VERSION="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Export Domain from SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100210" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJECT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100210" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_DOMAIN">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Data for Domain"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100210">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name     TYPE ddobjname.
  DATA str        TYPE string.
  DATA subrc      TYPE sy-subrc.
  DATA s_fm_data  TYPE zaplink_doma_data=&gt;ts_fm_data.
  DATA d_mask     TYPE doku_obj.
  DATA t_texts    TYPE STANDARD TABLE OF dd01t WITH DEFAULT KEY.
  DATA t_vtexts   TYPE STANDARD TABLE OF dd07t WITH DEFAULT KEY.
  FIELD-SYMBOLS:
*    &lt;o_e&gt; TYPE REF TO cl_wb_editor,
    &lt;o_s&gt; TYPE REF TO cl_wb_source.

  TRY.
    d_name = component-&gt;get_name( ).
    CALL FUNCTION &apos;DDIF_DOMA_GET&apos;
      EXPORTING
        name                = d_name
        state               = &apos;M&apos;
*       LANGU               = &apos; &apos;
      IMPORTING
*       GOTSTATE            =
        dd01v_wa            = s_fm_data-header
      TABLES
        dd07v_tab           = s_fm_data-values
      EXCEPTIONS
        illegal_input       = 1
        OTHERS              = 2.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_DOMA_GET&apos; sy-subrc.
    ENDIF.

    SELECT *
      INTO TABLE t_texts
      FROM dd01t
      WHERE domname = d_name
        AND ddtext &lt;&gt; space.
    SORT t_texts BY ddlanguage as4local.
    DELETE ADJACENT DUPLICATES FROM t_texts COMPARING ddlanguage.
    s_fm_data-texts = t_texts.

    SELECT *
      INTO TABLE t_vtexts
      FROM dd07t
      WHERE domname = d_name
        AND ddtext &lt;&gt; space.
    SORT t_vtexts BY ddlanguage as4local.
    DELETE ADJACENT DUPLICATES FROM t_vtexts COMPARING ddlanguage.
    s_fm_data-values_texts = t_vtexts.

    d_mask = d_name.
    s_fm_data-docs = zaplink_documentation=&gt;get( ids = zaplink_doma_data=&gt;r_doc_ids
                                              object = d_mask ).

    CREATE OBJECT object.
    object-&gt;from_data( s_fm_data ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="EXPORT_LOCK_OBJECT" VERSION="1" STATE="1" EDITORDER="16 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Export Lock Object from SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJECT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_LOCK_OBJECT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Lock object (SE11) Datas"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name     TYPE ddobjname.
  DATA str        TYPE string.
  DATA subrc      TYPE sy-subrc.
  DATA s_fm_data  TYPE zaplink_enqu_data=&gt;ts_fm_data.
  DATA d_mask     TYPE doku_obj.
  DATA t_texts    TYPE STANDARD TABLE OF dd25t WITH DEFAULT KEY.
  FIELD-SYMBOLS:
    &lt;o_s&gt; TYPE REF TO cl_wb_source.

  TRY.
    d_name = component-&gt;get_name( ).
    CALL FUNCTION &apos;DDIF_ENQU_GET&apos;
      EXPORTING
        name                = d_name
*       STATE               = &apos;A&apos;
*       LANGU               = &apos; &apos;
      IMPORTING
*       GOTSTATE            =
        dd25v_wa            = s_fm_data-header
      TABLES
        dd26e_tab           = s_fm_data-tables
        dd27p_tab           = s_fm_data-fields
*       DDENA_TAB           =
      EXCEPTIONS
        illegal_input       = 1
        OTHERS              = 2.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_ENQU_GET&apos; sy-subrc.
    ENDIF.

    SELECT *
      INTO TABLE t_texts
      FROM dd25t
      WHERE viewname = d_name
        AND ddtext &lt;&gt; space.
    SORT t_texts BY ddlanguage as4local.
    DELETE ADJACENT DUPLICATES FROM t_texts COMPARING ddlanguage.
    s_fm_data-texts = t_texts.

    d_mask = d_name.
    s_fm_data-docs = zaplink_documentation=&gt;get( ids = zaplink_enqu_data=&gt;r_doc_ids
                                              object = d_mask ).

    CREATE OBJECT object.
    object-&gt;from_data( s_fm_data ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="EXPORT_SEARCH_HELP" VERSION="1" STATE="1" EDITORDER="14 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Export Search Help from SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJECT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_SEARCH_HELP">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Search Help (SE11) Datas"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name     TYPE ddobjname.
  DATA str        TYPE string.
  DATA subrc      TYPE sy-subrc.
  DATA s_fm_data  TYPE zaplink_shlp_data=&gt;ts_fm_data.
  DATA d_mask     TYPE doku_obj.
  DATA t_texts    TYPE STANDARD TABLE OF dd30t WITH DEFAULT KEY.
  FIELD-SYMBOLS:
    &lt;o_s&gt; TYPE REF TO cl_wb_source.

  TRY.
    d_name = component-&gt;get_name( ).
    CALL FUNCTION &apos;DDIF_SHLP_GET&apos;
      EXPORTING
        name                = d_name
        state               = space
*       LANGU               = &apos; &apos;
      IMPORTING
*       GOTSTATE            =
        dd30v_wa            = s_fm_data-header
      TABLES
        dd31v_tab           = s_fm_data-sub_sh
        dd32p_tab           = s_fm_data-fields
        dd33v_tab           = s_fm_data-ssh_params
      EXCEPTIONS
        illegal_input       = 1
        OTHERS              = 2.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_SHLP_GET&apos; sy-subrc.
    ENDIF.

    SELECT *
      INTO TABLE t_texts
      FROM dd30t
      WHERE shlpname = d_name
        AND ddtext &lt;&gt; space.
    SORT t_texts BY ddlanguage as4local.
    DELETE ADJACENT DUPLICATES FROM t_texts COMPARING ddlanguage.
    s_fm_data-texts = t_texts.

    d_mask = d_name.
    s_fm_data-docs = zaplink_documentation=&gt;get( ids = zaplink_shlp_data=&gt;r_doc_ids
                                              object = d_mask ).

    CREATE OBJECT object.
    object-&gt;from_data( s_fm_data ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="EXPORT_TABLE" VERSION="1" STATE="1" EDITORDER="10 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Export table from SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100222" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJECT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_TABLE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Table (SE11) Datas"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100222">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name     TYPE ddobjname.
  DATA str        TYPE string.
  DATA subrc      TYPE sy-subrc.
  DATA s_fm_data  TYPE zaplink_tabl_data=&gt;ts_fm_data.
  DATA d_mask     TYPE doku_obj.
  DATA t_texts    TYPE STANDARD TABLE OF dd02t WITH DEFAULT KEY.
  DATA t_ftexts   TYPE STANDARD TABLE OF dd03t WITH DEFAULT KEY.
  FIELD-SYMBOLS:
    &lt;o_s&gt; TYPE REF TO cl_wb_source.

  TRY.
    d_name = component-&gt;get_name( ).
    CALL FUNCTION &apos;DDIF_TABL_GET&apos;
      EXPORTING
        name                = d_name
        state               = &apos;M&apos;
*       LANGU               = &apos; &apos;
      IMPORTING
*       GOTSTATE            =
        dd02v_wa            = s_fm_data-header
        dd09l_wa            = s_fm_data-tech
      TABLES
        dd03p_tab           = s_fm_data-fields
        dd05m_tab           = s_fm_data-fk_fields
        dd08v_tab           = s_fm_data-forein_keys
        dd12v_tab           = s_fm_data-indexes
        dd17v_tab           = s_fm_data-idx_fields
        dd35v_tab           = s_fm_data-search_helps
        dd36m_tab           = s_fm_data-sh_fields
      EXCEPTIONS
        illegal_input       = 1
        OTHERS              = 2.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_TABL_GET&apos; sy-subrc.
    ENDIF.

    SELECT *
      INTO TABLE t_texts
      FROM dd02t
      WHERE tabname = d_name
        AND ddtext &lt;&gt; space.
    SORT t_texts BY ddlanguage as4local.
    DELETE ADJACENT DUPLICATES FROM t_texts COMPARING ddlanguage.
    s_fm_data-texts = t_texts.

    SELECT *
      INTO TABLE t_ftexts
      FROM dd03t
      WHERE tabname = d_name
        AND ddtext &lt;&gt; space.
    SORT t_ftexts BY ddlanguage as4local.
    DELETE ADJACENT DUPLICATES FROM t_ftexts COMPARING ddlanguage.
    s_fm_data-texts = t_ftexts.

    d_mask = d_name.
    s_fm_data-docs = zaplink_documentation=&gt;get( ids = zaplink_tabl_data=&gt;r_doc_ids
                                              object = d_mask ).

    CREATE OBJECT object.
    object-&gt;from_data( s_fm_data ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="EXPORT_TABLE_TYPE" VERSION="1" STATE="1" EDITORDER="12 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Export table type from SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJECT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_TABLE_TYPE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Table type (SE11) Datas"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name     TYPE ddobjname.
  DATA str        TYPE string.
  DATA subrc      TYPE sy-subrc.
  DATA s_fm_data  TYPE zaplink_ttyp_data=&gt;ts_fm_data.
  DATA d_mask     TYPE doku_obj.
  DATA t_texts    TYPE STANDARD TABLE OF dd40t WITH DEFAULT KEY.
  FIELD-SYMBOLS:
    &lt;o_s&gt; TYPE REF TO cl_wb_source.

  TRY.
    d_name = component-&gt;get_name( ).
    CALL FUNCTION &apos;DDIF_TTYP_GET&apos;
      EXPORTING
        name                = d_name
        STATE               = space
*       LANGU               = &apos; &apos;
      IMPORTING
*       GOTSTATE            =
        DD40V_WA            = s_fm_data-header
      TABLES
        DD42V_TAB           = s_fm_data-keys
      EXCEPTIONS
        ILLEGAL_INPUT       = 1
        OTHERS              = 2.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_TTYP_GET&apos; sy-subrc.
    ENDIF.

    SELECT *
      INTO TABLE t_texts
      FROM dd40t
      WHERE typename = d_name
        AND ddtext &lt;&gt; space.
    SORT t_texts BY ddlanguage as4local.
    DELETE ADJACENT DUPLICATES FROM t_texts COMPARING ddlanguage.
    s_fm_data-texts = t_texts.

    d_mask = d_name.
    s_fm_data-docs = zaplink_documentation=&gt;get( ids = zaplink_ttyp_data=&gt;r_doc_ids
                                              object = d_mask ).

    CREATE OBJECT object.
    object-&gt;from_data( s_fm_data ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="EXPORT_TYPE_GROUP" VERSION="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100209" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Export Type Group from SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100209" CHANGEDBY="TBENSIAL" CHANGEDON="20100209" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJECT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100209" CHANGEDBY="TBENSIAL" CHANGEDON="20100209" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_TYPEGROUP">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Data for Type group"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100209">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_type     TYPE td_typegroup.
  DATA str        TYPE string.
  DATA subrc      TYPE sy-subrc.
  DATA t_source   TYPE tt_abaprawsource.
  DATA o_src      TYPE REF TO cl_wb_source.

  TRY.
    d_type = component-&gt;get_name( ).
*  PERFORM tygr_exists IN PROGRAM saplsd31
*          USING    type
*          CHANGING subrc.
*  IF sy-subrc &lt;&gt; 0.
*    EXIT.
*  ENDIF.
    o_src = get_type_group( d_type ).
    CHECK o_src IS BOUND.
    o_src-&gt;get_source_old( IMPORTING old_source = t_source ).

    CREATE OBJECT object.
    object-&gt;a0_maindata-name = d_type.
    object-&gt;a0_maindata-uccheck = o_src-&gt;l_progdir_entry-uccheck.
    SELECT SINGLE masterlang FROM tadir
                             INTO object-&gt;a0_maindata-lang
         WHERE  pgmid       = &apos;R3TR&apos;
         AND    object      = &apos;TYPE&apos;
         AND    obj_name    = object-&gt;a0_maindata-name.
* Kurzbeschreibung lesen
    SELECT SINGLE ddtext FROM ddtypet INTO object-&gt;a0_maindata-text
           WHERE typegroup  = object-&gt;a0_maindata-name
             AND ddlanguage = object-&gt;a0_maindata-lang.

    object-&gt;set_source( t_source ).
    object-&gt;_code_signature = get_typegroup_signature( d_type ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="EXPORT_VIEW" VERSION="1" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Export view from SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENT" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100216" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_COMPONENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJECT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_VIEW">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Views (SE11) Datas"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100216">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name     TYPE ddobjname.
  DATA str        TYPE string.
  DATA subrc      TYPE sy-subrc.
  DATA s_fm_data  TYPE zaplink_view_data=&gt;ts_fm_data.
  DATA d_mask     TYPE doku_obj.
  DATA t_texts    TYPE STANDARD TABLE OF dd25t WITH DEFAULT KEY.
  FIELD-SYMBOLS:
    &lt;o_s&gt; TYPE REF TO cl_wb_source.

  TRY.
    d_name = component-&gt;get_name( ).
    CALL FUNCTION &apos;DDIF_VIEW_GET&apos;
      EXPORTING
        name                = d_name
        state               = &apos;M&apos;
        langu               = &apos; &apos;
      IMPORTING
*       GOTSTATE            =
        dd25v_wa            = s_fm_data-header
        dd09l_wa            = s_fm_data-tech
      TABLES
        dd26v_tab           = s_fm_data-tables
        dd27p_tab           = s_fm_data-fields
        dd28j_tab           = s_fm_data-joins
        dd28v_tab           = s_fm_data-wheres
      EXCEPTIONS
        illegal_input       = 1
        OTHERS              = 2.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_VIEW_GET&apos; sy-subrc.
    ENDIF.

    SELECT *
      INTO TABLE t_texts
      FROM dd25t
      WHERE viewname = d_name
        AND ddtext &lt;&gt; space.
    SORT t_texts BY ddlanguage as4local.
    DELETE ADJACENT DUPLICATES FROM t_texts COMPARING ddlanguage.
    s_fm_data-texts = t_texts.

    d_mask = d_name.
    s_fm_data-docs = zaplink_documentation=&gt;get( ids = zaplink_view_data=&gt;r_doc_ids
                                              object = d_mask ).

    CREATE OBJECT object.
    object-&gt;from_data( s_fm_data ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="GET_TYPEGROUP_SIGNATURE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100420" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Get Source code Signature of Type Group"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100420" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" PARDECLTYP="3" TYPTYPE="1" TYPE="ZAPLINK_DATATYPES~TD_CHECKSUM">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Source Code Signature (Checksum)"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="TYPE_GROUP" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100420" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_TYPEGROUP">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Type group name"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100420">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA t_src    TYPE tt_abaprawsource.
  DATA s_src    TYPE td_abapsource.
  DATA o_src    TYPE REF TO cl_wb_source.

  o_src = get_type_group( type_group ).
  CHECK o_src IS BOUND.
  o_src-&gt;get_source_old( IMPORTING old_source = t_src ).
  zaplink_tools=&gt;pretty_printer( CHANGING table = t_src ).
  zaplink_tools=&gt;condense_abap_source( CHANGING table = t_src ).
  s_src = zaplink_tools=&gt;table_2_string( t_src ).
  result = zaplink_tools=&gt;calculate_md5_hash( s_src ).</SOURCE>
    </ITEM>
    <ITEM CMPNAME="GET_TYPE_GROUP" VERSION="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100419" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Get Type Group from SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100419" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" PARDECLTYP="3" TYPTYPE="3" TYPE="CL_WB_SOURCE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Source Management"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="TYPE_GROUP" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100419" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_TYPEGROUP">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Type group name"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100419">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_type     TYPE td_typegroup.
  DATA str        TYPE string.
  DATA subrc      TYPE sy-subrc.
  DATA t_source   TYPE TABLE OF string.
  FIELD-SYMBOLS:
    &lt;o_s&gt; TYPE REF TO cl_wb_source.

*  PERFORM tygr_exists IN PROGRAM saplsd31
*          USING    type
*          CHANGING subrc.
*  IF sy-subrc &lt;&gt; 0.
*    EXIT.
*  ENDIF.
  PERFORM xx_first_get IN PROGRAM saplsd31
          USING    type_group space dd_eu_type-type_group &apos;S&apos; space &apos;X&apos;
          CHANGING subrc.
* source_instance  ABAP_EDITOR DF
* uccheck = source_instance-&gt;l_progdir_entry-uccheck
*  df-ddxx-as4user = source_instance-&gt;l_progdir_entry-unam.
*  df-ddxx-as4date = source_instance-&gt;l_progdir_entry-udat.
** unicode flag
*  df-ddxx-uccheck = source_instance-&gt;l_progdir_entry-uccheck.
** Mastersprache in TADIR lesen
*  SELECT SINGLE masterlang FROM tadir
*                           INTO rsdxx-malangu
*       WHERE  pgmid       = &apos;R3TR&apos;
*       AND    object      = &apos;TYPE&apos;
*       AND    obj_name    = df-ddxx-typegroup.
** Kurzbeschreibung lesen
*  SELECT SINGLE ddtext FROM ddtypet INTO df-ddxx-ddtext
*         WHERE typegroup  = df-ddxx-typegroup AND
*               ddlanguage = rsdxx-malangu.

  str = &apos;(SAPLSD31)SOURCE_INSTANCE&apos;.
  ASSIGN (str) TO &lt;o_s&gt;.
  IF sy-subrc &lt;&gt; 0.
    EXIT.
  ENDIF.
  result = &lt;o_s&gt;.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="IMPORT_DATA_ELEMENT" VERSION="1" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100215" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Import Data Element to SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENTS" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100215" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_LIST">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="O_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100215" CHANGEDBY="TBENSIAL" CHANGEDON="20100215" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_DATA_ELEMENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Data for Data element"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100215">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name         TYPE rsedd0-ddobjname.
  DATA d_subrc        TYPE sy-subrc.
  DATA s_fm_data      TYPE zaplink_dtel_data=&gt;ts_fm_data.

  TRY.
    s_fm_data = o_data-&gt;to_data( ).
    d_name = s_fm_data-header-rollname.
    CALL FUNCTION &apos;RS_DD_DELETE_OBJ&apos;
      EXPORTING
        no_ask                     = abap_true
        objname                    = d_name
        objtype                    = dd_eu_type-data_element
*     CHANGING
*       CORRNUM                    = &apos; &apos;
      EXCEPTIONS
        not_executed               = 1
        object_not_found           = 0
        object_not_specified       = 3
        permission_failure         = 4
        dialog_needed              = 5
        OTHERS                     = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;RS_DD_DELETE_OBJ&apos; sy-subrc.
    ENDIF.

    CALL FUNCTION &apos;DDIF_DTEL_PUT&apos;
      EXPORTING
        name              = d_name
        dd04v_wa          = s_fm_data-header
      EXCEPTIONS
        dtel_not_found    = 1
        name_inconsistent = 2
        dtel_inconsistent = 3
        put_failure       = 4
        put_refused       = 5
        OTHERS            = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_DTEL_PUT&apos; sy-subrc.
    ENDIF.

    DELETE FROM dd04t WHERE rollname = s_fm_data-header-rollname.
    MODIFY dd04t FROM TABLE s_fm_data-texts.

    zaplink_documentation=&gt;set( s_fm_data-docs ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="IMPORT_DOMAIN" VERSION="1" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Import Domain to SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENTS" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100210" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_LIST">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="O_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100215" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_DOMAIN">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Data for Domain"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100210">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name         TYPE rsedd0-ddobjname.
  DATA d_subrc        TYPE sy-subrc.
  DATA s_fm_data      TYPE zaplink_doma_data=&gt;ts_fm_data.

  TRY.
    s_fm_data = o_data-&gt;to_data( ).
    d_name = s_fm_data-header-domname.
    CALL FUNCTION &apos;RS_DD_DELETE_OBJ&apos;
      EXPORTING
        no_ask                     = abap_true
        objname                    = d_name
        objtype                    = dd_eu_type-domain
*     CHANGING
*       CORRNUM                    = &apos; &apos;
      EXCEPTIONS
        not_executed               = 1
        object_not_found           = 0
        object_not_specified       = 3
        permission_failure         = 4
        dialog_needed              = 5
        OTHERS                     = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;RS_DD_DELETE_OBJ&apos; sy-subrc.
    ENDIF.

    CALL FUNCTION &apos;DDIF_DOMA_PUT&apos;
      EXPORTING
        name              = d_name
        dd01v_wa          = s_fm_data-header
      TABLES
        dd07v_tab         = s_fm_data-values
      EXCEPTIONS
        doma_not_found    = 1
        name_inconsistent = 2
        doma_inconsistent = 3
        put_failure       = 4
        put_refused       = 5
        OTHERS            = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_DOMA_PUT&apos; sy-subrc.
    ENDIF.

    DELETE FROM dd01t WHERE domname = s_fm_data-header-domname.
    MODIFY dd01t FROM TABLE s_fm_data-texts.

    DELETE FROM dd07t WHERE domname = s_fm_data-header-domname.
    MODIFY dd07t FROM TABLE s_fm_data-values_texts.

    zaplink_documentation=&gt;set( s_fm_data-docs ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="IMPORT_LOCK_OBJECT" VERSION="1" STATE="1" EDITORDER="17 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Import Lock Object to SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENTS" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100311" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_LIST">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="O_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_LOCK_OBJECT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Table type (SE11) Datas"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name         TYPE rsedd0-ddobjname.
  DATA d_subrc        TYPE sy-subrc.
  DATA s_fm_data      TYPE zaplink_enqu_data=&gt;ts_fm_data.

  TRY.
    s_fm_data = o_data-&gt;to_data( ).
    d_name = s_fm_data-header-viewname.
    CALL FUNCTION &apos;RS_DD_DELETE_OBJ&apos;
      EXPORTING
        no_ask                     = abap_true
        objname                    = d_name
        objtype                    = dd_eu_type-lock_object
*     CHANGING
*       CORRNUM                    = &apos; &apos;
      EXCEPTIONS
        not_executed               = 1
        object_not_found           = 0
        object_not_specified       = 3
        permission_failure         = 4
        dialog_needed              = 5
        OTHERS                     = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;RS_DD_DELETE_OBJ&apos; sy-subrc.
    ENDIF.

    CALL FUNCTION &apos;DDIF_ENQU_PUT&apos;
      EXPORTING
        name              = d_name
        dd25v_wa          = s_fm_data-header
      TABLES
        dd26e_tab         = s_fm_data-tables
        dd27p_tab         = s_fm_data-fields
      EXCEPTIONS
        enqu_not_found    = 1
        name_inconsistent = 2
        enqu_inconsistent = 3
        put_failure       = 4
        put_refused       = 5
        OTHERS            = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_ENQU_PUT&apos; sy-subrc.
    ENDIF.

    DELETE FROM dd25t WHERE viewname = s_fm_data-header-viewname.
    MODIFY dd25t FROM TABLE s_fm_data-texts.

    zaplink_documentation=&gt;set( s_fm_data-docs ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="IMPORT_SEARCH_HELP" VERSION="1" STATE="1" EDITORDER="15 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Import Search Help to SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENTS" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100311" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_LIST">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="O_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_SEARCH_HELP">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Table type (SE11) Datas"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name         TYPE rsedd0-ddobjname.
  DATA d_subrc        TYPE sy-subrc.
  DATA s_fm_data      TYPE zaplink_shlp_data=&gt;ts_fm_data.

  TRY.
    s_fm_data = o_data-&gt;to_data( ).
    d_name = s_fm_data-header-shlpname.
    CALL FUNCTION &apos;RS_DD_DELETE_OBJ&apos;
      EXPORTING
        no_ask                     = abap_true
        objname                    = d_name
        objtype                    = dd_eu_type-search_help
*     CHANGING
*       CORRNUM                    = &apos; &apos;
      EXCEPTIONS
        not_executed               = 1
        object_not_found           = 0
        object_not_specified       = 3
        permission_failure         = 4
        dialog_needed              = 5
        OTHERS                     = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;RS_DD_DELETE_OBJ&apos; sy-subrc.
    ENDIF.

    CALL FUNCTION &apos;DDIF_SHLP_PUT&apos;
      EXPORTING
        name              = d_name
        dd30v_wa          = s_fm_data-header
      TABLES
        dd31v_tab         = s_fm_data-sub_sh
        dd32p_tab         = s_fm_data-fields
        dd33v_tab         = s_fm_data-ssh_params
      EXCEPTIONS
        shlp_not_found    = 1
        name_inconsistent = 2
        shlp_inconsistent = 3
        put_failure       = 4
        put_refused       = 5
        OTHERS            = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_SHLP_PUT&apos; sy-subrc.
    ENDIF.

    DELETE FROM dd30t WHERE shlpname = s_fm_data-header-shlpname.
    MODIFY dd30t FROM TABLE s_fm_data-texts.

    zaplink_documentation=&gt;set( s_fm_data-docs ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="IMPORT_TABLE" VERSION="1" STATE="1" EDITORDER="11 " AUTHOR="TBENSIAL" CREATEDON="20100226" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Import table to SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENTS" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100226" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_LIST">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="O_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100226" CHANGEDBY="TBENSIAL" CHANGEDON="20100226" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_TABLE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Table (SE11) Datas"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100226">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name         TYPE rsedd0-ddobjname.
  DATA d_subrc        TYPE sy-subrc.
  DATA s_fm_data      TYPE zaplink_tabl_data=&gt;ts_fm_data.
  DATA t_idx_flds     TYPE zaplink_tabl_data=&gt;tt_dd17v.
  FIELD-SYMBOLS: &lt;i&gt; LIKE LINE OF s_fm_data-indexes.

  TRY.
    s_fm_data = o_data-&gt;to_data( ).
    d_name = s_fm_data-header-tabname.
    CALL FUNCTION &apos;RS_DD_DELETE_OBJ&apos;
      EXPORTING
        no_ask                     = abap_true
        objname                    = d_name
        objtype                    = dd_eu_type-transp_table
*     CHANGING
*       CORRNUM                    = &apos; &apos;
      EXCEPTIONS
        not_executed               = 1
        object_not_found           = 0
        object_not_specified       = 3
        permission_failure         = 4
        dialog_needed              = 5
        OTHERS                     = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;RS_DD_DELETE_OBJ&apos; sy-subrc.
    ENDIF.

    CALL FUNCTION &apos;DDIF_TABL_PUT&apos;
      EXPORTING
        name                    = d_name
        dd02v_wa                = s_fm_data-header
        dd09l_wa                = s_fm_data-tech
      TABLES
          dd03p_tab           = s_fm_data-fields
          dd05m_tab           = s_fm_data-fk_fields
          dd08v_tab           = s_fm_data-forein_keys
*        dd12v_tab           = s_fm_data-indexes
*        dd17v_tab           = s_fm_data-idx_fields
          dd35v_tab           = s_fm_data-search_helps
          dd36m_tab           = s_fm_data-sh_fields
      EXCEPTIONS
        tabl_not_found          = 1
        name_inconsistent       = 2
        tabl_inconsistent       = 3
        put_failure             = 4
        put_refused             = 5
        OTHERS                  = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_TABL_PUT&apos; sy-subrc.
    ENDIF.

    LOOP AT s_fm_data-indexes ASSIGNING &lt;i&gt;.
      t_idx_flds = s_fm_data-idx_fields.    DELETE t_idx_flds WHERE indexname &lt;&gt; &lt;i&gt;-indexname.
      CALL FUNCTION &apos;DDIF_INDX_PUT&apos;
        EXPORTING
          name              = d_name
          id                = &lt;i&gt;-indexname
          dd12v_wa          = &lt;i&gt;
        TABLES
          dd17v_tab         = t_idx_flds
        EXCEPTIONS
          indx_not_found    = 1
          name_inconsistent = 2
          indx_inconsistent = 3
          put_failure       = 4
          put_refused       = 5
          OTHERS            = 6.
      IF sy-subrc &lt;&gt; 0.
        mac_add_mf_and_raise &apos;DDIF_INDX_PUT&apos; sy-subrc.
      ENDIF.
    ENDLOOP.

    DELETE FROM dd02t WHERE tabname = s_fm_data-header-tabname.
    MODIFY dd02t FROM TABLE s_fm_data-texts.

    DELETE FROM dd03t WHERE tabname = s_fm_data-header-tabname.
    MODIFY dd03t FROM TABLE s_fm_data-fields_texts.

    zaplink_documentation=&gt;set( s_fm_data-docs ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="IMPORT_TABLE_TYPE" VERSION="1" STATE="1" EDITORDER="13 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Import table type to SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENTS" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100310" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_LIST">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="O_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_TABLE_TYPE">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Table type (SE11) Datas"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name         TYPE rsedd0-ddobjname.
  DATA d_subrc        TYPE sy-subrc.
  DATA s_fm_data      TYPE zaplink_ttyp_data=&gt;ts_fm_data.

  TRY.
    s_fm_data = o_data-&gt;to_data( ).
    d_name = s_fm_data-header-typename.
    CALL FUNCTION &apos;RS_DD_DELETE_OBJ&apos;
      EXPORTING
        no_ask                     = abap_true
        objname                    = d_name
        objtype                    = dd_eu_type-table_type
*     CHANGING
*       CORRNUM                    = &apos; &apos;
      EXCEPTIONS
        not_executed               = 1
        object_not_found           = 0
        object_not_specified       = 3
        permission_failure         = 4
        dialog_needed              = 5
        OTHERS                     = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;RS_DD_DELETE_OBJ&apos; sy-subrc.
    ENDIF.

    CALL FUNCTION &apos;DDIF_TTYP_PUT&apos;
      EXPORTING
        name              = d_name
        dd40v_wa          = s_fm_data-header
      TABLES
        dd42v_tab         = s_fm_data-keys
      EXCEPTIONS
        ttyp_not_found    = 1
        name_inconsistent = 2
        ttyp_inconsistent = 3
        put_failure       = 4
        put_refused       = 5
        OTHERS            = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_TTYP_PUT&apos; sy-subrc.
    ENDIF.

    DELETE FROM dd40t WHERE typename = s_fm_data-header-typename.
    MODIFY dd40t FROM TABLE s_fm_data-texts.

    zaplink_documentation=&gt;set( s_fm_data-docs ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="IMPORT_TYPE_GROUP" VERSION="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100209" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Import Type Group to SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENTS" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100209" CHANGEDBY="TBENSIAL" CHANGEDON="20100209" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_LIST">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="O_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100209" CHANGEDBY="TBENSIAL" CHANGEDON="20100209" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_TYPEGROUP">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Data for Type group"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100209">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_typegroup    TYPE td_typegroup.
  DATA d_name         TYPE rsedd0-ddobjname.
  DATA d_subrc        TYPE sy-subrc.
  DATA t_source       TYPE zaplink_type_data=&gt;tt_string.
  DATA d_program      TYPE progdir.
  DATA str            TYPE string.
  FIELD-SYMBOLS:
    &lt;prog&gt; TYPE sy-repid.          &quot;Typgruppeninclude

  TRY.
    d_typegroup = o_data-&gt;a0_maindata-name.
* Check existence
    PERFORM tygr_exists IN PROGRAM saplsd31
          USING    d_typegroup
          CHANGING d_subrc.

    IF d_subrc = 0.
      d_name = d_typegroup.
      CALL FUNCTION &apos;RS_DD_DELETE_OBJ&apos;
        EXPORTING
*       NO_ASK                     = &apos; &apos;
          objname                    = d_name
          objtype                    = dd_eu_type-type_group
*     CHANGING
*       CORRNUM                    = &apos; &apos;
        EXCEPTIONS
          not_executed               = 1
          object_not_found           = 0
          object_not_specified       = 3
          permission_failure         = 4
          dialog_needed              = 5
          OTHERS                     = 6.
      IF sy-subrc &lt;&gt; 0.
        mac_add_mf_and_raise &apos;RS_DD_DELETE_OBJ&apos; sy-subrc.
      ENDIF.
    ENDIF.

    t_source = o_data-&gt;get_source( ).
    CALL FUNCTION &apos;RS_DD_TYGR_INSERT_SOURCES&apos;
      EXPORTING
        typegroupname        = o_data-&gt;a0_maindata-name
        ddtext               = o_data-&gt;a0_maindata-text
        corrnum              = space
        devclass             = space
      TABLES
        SOURCE               = t_source
      EXCEPTIONS
        already_exists       = 1
        not_executed         = 2
        permission_failure   = 3
        object_not_specified = 4
        illegal_name         = 5
        OTHERS               = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;RS_DD_TYGR_INSERT_SOURCES&apos; sy-subrc.
    ENDIF.

    PERFORM tygr_exists IN PROGRAM saplsd31
            USING    d_typegroup
            CHANGING d_subrc.
    IF d_subrc &lt;&gt; 0.
      EXIT.
    ENDIF.

    str = &apos;(SAPLSD31)PROGNAME&apos;.
    ASSIGN (str) TO &lt;prog&gt;.
    IF sy-subrc &lt;&gt; 0.
      EXIT.
    ENDIF.

    CALL FUNCTION &apos;READ_PROGDIR&apos;
      EXPORTING
        i_progname          = &lt;prog&gt;
*     I_STATE             = &apos; &apos;
      IMPORTING
        e_progdir           = d_program
*     E_PROGDIR_TAB       =
      EXCEPTIONS
        not_exists          = 1
        OTHERS              = 2.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;READ_PROGDIR&apos; sy-subrc.
    ENDIF.

    IF d_program-uccheck &lt;&gt; o_data-&gt;a0_maindata-uccheck.
      d_program-uccheck = o_data-&gt;a0_maindata-uccheck.
      CALL FUNCTION &apos;UPDATE_PROGDIR&apos;
        EXPORTING
          i_progdir    = d_program
          i_progname   = &lt;prog&gt;
          i_state      = d_program-state
        EXCEPTIONS
          not_executed = 1
          OTHERS       = 2.
      IF sy-subrc &lt;&gt; 0.
        mac_add_mf_and_raise &apos;UPDATE_PROGDIR&apos; sy-subrc.
      ENDIF.
    ENDIF.

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="IMPORT_VIEW" VERSION="1" STATE="1" EDITORDER="9 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100419" MTDNEWEXC="X" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Import view to SAP System"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="COMPONENTS" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100216" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_LIST">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Component key"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="O_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_VIEW">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Views (SE11) Datas"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100216">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA d_name         TYPE rsedd0-ddobjname.
  DATA d_subrc        TYPE sy-subrc.
  DATA s_fm_data      TYPE zaplink_view_data=&gt;ts_fm_data.

  TRY.
    s_fm_data = o_data-&gt;to_data( ).
    d_name = s_fm_data-header-viewname.
    CALL FUNCTION &apos;RS_DD_DELETE_OBJ&apos;
      EXPORTING
        no_ask                     = abap_true
        objname                    = d_name
        objtype                    = dd_eu_type-view
*     CHANGING
*       CORRNUM                    = &apos; &apos;
      EXCEPTIONS
        not_executed               = 1
        object_not_found           = 0
        object_not_specified       = 3
        permission_failure         = 4
        dialog_needed              = 5
        OTHERS                     = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;RS_DD_DELETE_OBJ&apos; sy-subrc.
    ENDIF.

    CALL FUNCTION &apos;DDIF_VIEW_PUT&apos;
      EXPORTING
        name              = d_name
        dd25v_wa          = s_fm_data-header
        dd09l_wa          = s_fm_data-tech
      TABLES
        dd26v_tab         = s_fm_data-tables
        dd27p_tab         = s_fm_data-fields
        dd28j_tab         = s_fm_data-joins
        dd28v_tab         = s_fm_data-wheres
      EXCEPTIONS
        view_not_found    = 1
        name_inconsistent = 2
        view_inconsistent = 3
        put_failure       = 4
        put_refused       = 5
        OTHERS            = 6.
    IF sy-subrc &lt;&gt; 0.
      mac_add_mf_and_raise &apos;DDIF_VIEW_PUT&apos; sy-subrc.
    ENDIF.

    DELETE FROM dd25t WHERE viewname = s_fm_data-header-viewname.
    MODIFY dd25t FROM TABLE s_fm_data-texts.

    zaplink_documentation=&gt;set( s_fm_data-docs ).

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
   </METHODS>
   <REDEFINITIONS>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CNX_EXT_CLEANER~ANONYMIZE">
     <SOURCE>`
  mac_obj_data.

  DEFINE mac_do_obj.
    &amp;1 ?= object-&gt;raw.
    &amp;1-&gt;anonymize( ).
  END-OF-DEFINITION.

  CASE object-&gt;type.
    WHEN supportedtypes-type_group.
      o_typegroup ?= object-&gt;raw.
*      o_typegroup-&gt;anonymize( ).
    WHEN supportedtypes-domain.         mac_do_obj o_domain.
    WHEN supportedtypes-data_element.   mac_do_obj o_data_e.
    WHEN supportedtypes-view.           mac_do_obj o_view.
    WHEN OTHERS.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
      RAISE EXCEPTION TYPE zaplink_cx_connector
        EXPORTING
          textid = zaplink_cx_connector=&gt;type_not_supported
          type   = object-&gt;type
          connclass = &apos;ZAPLINK_DICTIONARY&apos;.
  ENDCASE.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CNX_EXT_CLEANER~UNANONYMIZE">
     <SOURCE>`
*  DATA o_type TYPE to_data.
*  DATA s_msg LIKE LINE OF o_type-&gt;messages.
*
*  TRY.
*      super-&gt;zaplink_cnx_ext_cleaner~unanonymize( object ).
*    CATCH zaplink_cx_connector INTO o_mycx.
*      RAISE EXCEPTION o_mycx.
*  ENDTRY.
*
*  o_type ?= object-&gt;raw.
*  if o_type-&gt;A0_MAINDATA-RESPUSER is INITIAL. o_type-&gt;A0_MAINDATA-RESPUSER = sy-uname. endif.
*  s_msg-name = o_type-&gt;A0_MAINDATA-RESPUSER.
*  MODIFY o_type-&gt;messages FROM s_msg TRANSPORTING name
*         WHERE name IS INITIAL.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CNX_EXT_CODE_SIGNATURE~GET_SIGNATURE">
     <SOURCE>`
  DATA d_type   TYPE td_comptype.
  DATA d_tgrp   TYPE td_typegroup.

  TRY.
    d_type = component-&gt;get_type( ).
    CASE d_type.
      WHEN supportedtypes-type_group.
        d_tgrp = component-&gt;get_name( ).
        result = get_typegroup_signature( d_tgrp ).
      WHEN supportedtypes-domain OR supportedtypes-data_element OR supportedtypes-table_type OR supportedtypes-search_help OR supportedtypes-mactchcode_id OR
           supportedtypes-lock_object OR supportedtypes-matchcode_obj OR supportedtypes-table_index OR supportedtypes-ext_index OR supportedtypes-table  OR supportedtypes-view.
      WHEN OTHERS.
        mac_raise_type_not_supported &apos;ZAPLINK_DICTIONARY&apos; d_type.
    ENDCASE.
    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~CREATE_NEW_RAW">
     <SOURCE>`
  mac_obj_data.

  DEFINE mac_obj_create.
    create object &amp;1.
    object-&gt;raw = &amp;1.
  END-OF-DEFINITION.

  CREATE OBJECT object.
  CASE type.
    WHEN supportedtypes-type_group.     mac_obj_create o_typegroup.
    WHEN supportedtypes-domain.         mac_obj_create o_domain.
    WHEN supportedtypes-data_element.   mac_obj_create o_data_e.
    WHEN supportedtypes-view.           mac_obj_create o_view.
    WHEN supportedtypes-table.          mac_obj_create o_table.
    WHEN supportedtypes-table_type.     mac_obj_create o_tab_type.
    WHEN supportedtypes-search_help.    mac_obj_create o_s_help.
    WHEN supportedtypes-lock_object.    mac_obj_create o_lock_obj.
    WHEN OTHERS.
      CLEAR object.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
      RAISE EXCEPTION TYPE zaplink_cx_connector
        EXPORTING
          textid = zaplink_cx_connector=&gt;type_not_supported
          type   = type
          connclass = &apos;ZAPLINK_DICTIONARY&apos;.
  ENDCASE.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~DELETE_FROM_SAP">
     <SOURCE>`
  DATA d_name TYPE rsedd0-ddobjname.
  DATA d_type TYPE rsedd0-ddobjtype.
  DATA type  TYPE td_comptype.

  TRY.

      type = component-&gt;get_type( ).
      CASE type.
        WHEN supportedtypes-type_group.
          d_type = dd_eu_type-type_group.
        WHEN supportedtypes-domain.
          d_type = dd_eu_type-domain.
        WHEN supportedtypes-data_element.
          d_type = dd_eu_type-data_element.
        WHEN supportedtypes-table_type.
          d_type = dd_eu_type-table_type.
        WHEN supportedtypes-search_help.
          d_type = dd_eu_type-search_help.
        WHEN supportedtypes-mactchcode_id.
          d_type = dd_eu_type-mactchcode_id.
        WHEN supportedtypes-lock_object.
          d_type = dd_eu_type-lock_object.
        WHEN supportedtypes-matchcode_obj.
          d_type = dd_eu_type-matchcode_obj.
        WHEN supportedtypes-table_index.
          d_type = dd_eu_type-table_index.
        WHEN supportedtypes-ext_index.
          d_type = dd_eu_type-ext_index.
*        WHEN supportedtypes-table.
*          d_type = dd_eu_type-table.
        WHEN supportedtypes-view.
          d_type = dd_eu_type-view.
*        WHEN supportedtypes-t_cluster_pool.
*          d_type = dd_eu_type-t_cluster_pool.
        WHEN OTHERS.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
          RAISE EXCEPTION TYPE zaplink_cx_connector
            EXPORTING
              textid = zaplink_cx_connector=&gt;type_not_supported
              type   = type
              connclass = &apos;ZAPLINK_DICTIONARY&apos;.
      ENDCASE.
      d_name = component-&gt;get_name( ).

      IF NOT d_type IS INITIAL.
        CALL FUNCTION &apos;RS_DD_DELETE_OBJ&apos;
          EXPORTING
*           NO_ASK                     = &apos; &apos;
            objname                    = d_name
            objtype                    = d_type
*         CHANGING
*           CORRNUM                    = &apos; &apos;
          EXCEPTIONS
            not_executed               = 1
            object_not_found           = 2
            object_not_specified       = 3
            permission_failure         = 4
            dialog_needed              = 5
            OTHERS                     = 6.
        IF sy-subrc &lt;&gt; 0. &quot; SAP NameSpace
          CASE sy-subrc.
            WHEN 2.
              RAISE EXCEPTION TYPE zaplink_cx_connector
                EXPORTING textid = zaplink_cx_connector=&gt;not_found.
            WHEN OTHERS.
              mac_add_mf_and_raise &apos;RS_DD_DELETE_OBJ&apos; sy-subrc.
          ENDCASE.
        ENDIF.

      ENDIF.

    CATCH zaplink_cx_connector INTO o_mycx.
      RAISE EXCEPTION o_mycx.
    CATCH zaplink_cx INTO o_cx.
      mac_cascade_raise o_mycx o_cx.
  ENDTRY.
  result = abap_true.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~DO_EXISTS">
     <SOURCE>`
  DATA d_name TYPE rsedd0-ddobjname.
  DATA d_type TYPE rsedd0-ddobjtype.
  DATA type        TYPE td_comptype.

  exists = me-&gt;exists-not_exists.

  TRY.
      type = component-&gt;get_type( ).
      CASE type.
        WHEN supportedtypes-type_group.
          d_type = dd_eu_type-type_group.
        WHEN supportedtypes-domain.
          d_type = dd_eu_type-domain.
        WHEN supportedtypes-data_element.
          d_type = dd_eu_type-data_element.
        WHEN supportedtypes-table_type.
          d_type = dd_eu_type-table_type.
        WHEN supportedtypes-search_help.
          d_type = dd_eu_type-search_help.
        WHEN supportedtypes-mactchcode_id.
          d_type = dd_eu_type-mactchcode_id.
        WHEN supportedtypes-lock_object.
          d_type = dd_eu_type-lock_object.
        WHEN supportedtypes-matchcode_obj.
          d_type = dd_eu_type-matchcode_obj.
        WHEN supportedtypes-table_index.
          d_type = dd_eu_type-table_index.
        WHEN supportedtypes-ext_index.
          d_type = dd_eu_type-ext_index.
        WHEN supportedtypes-table.
          d_type = dd_eu_type-transp_table.
        WHEN supportedtypes-view.
          d_type = dd_eu_type-view.
*        WHEN supportedtypes-t_cluster_pool.
*          d_type = dd_eu_type-t_cluster_pool.
        WHEN OTHERS.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
          RAISE EXCEPTION TYPE zaplink_cx_connector
            EXPORTING
              textid = zaplink_cx_connector=&gt;type_not_supported
              type   = type
              connclass = &apos;ZAPLINK_MESSAGE&apos;.
      ENDCASE.
      d_name = component-&gt;get_name( ).

      IF NOT d_type IS INITIAL AND NOT d_name IS INITIAL.
        CALL FUNCTION &apos;INTERN_DD_CHECK_EXIST&apos;
          EXPORTING
            objname                     = d_name
            objtype                     = d_type
            err_message                 = abap_false
*           OBJSTATE                    = &apos;M&apos;
            exists                      = abap_true
*           SECNAME                     = &apos; &apos;
*         IMPORTING
*           MASTERLANGU                 =
*           OTHER_CLASS                 =
*           PROXY_TYPE                  =
          EXCEPTIONS
            object_not_found            = 1
            other_object_class          = 2
            invalid_parameter           = 3
            object_already_exists       = 4
            OTHERS                      = 5.
        IF sy-subrc = 0. &quot; SAP NameSpace
          exists = me-&gt;exists-exists.
        ELSE.
          CASE sy-subrc.
            WHEN 1  or 2.
            WHEN OTHERS.
              mac_add_mf_and_raise &apos;INTERN_DD_CHECK_EXIST&apos; sy-subrc.
          ENDCASE.
        ENDIF.

      ENDIF.

    CATCH zaplink_cx_connector INTO o_mycx.
      RAISE EXCEPTION o_mycx.
    CATCH zaplink_cx INTO o_cx.
      mac_cascade_raise o_mycx o_cx.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~IS_SUPPORTED_VERSION">
     <SOURCE>`
  result = abap_false.
  if version = _ver.    result = abap_true.   endif.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~READ_FROM_SAP">
     <SOURCE>`
  mac_obj_data.
  DATA d_type       TYPE td_comptype.

  DEFINE mac_catch_local_cx.
    catch zaplink_cx_connector into o_mycx.
      if not o_mycx-&gt;messages is bound.
        o_mycx-&gt;messages = application_log.
        o_mycx-&gt;update( ).
      endif.
      raise exception o_mycx.
  END-OF-DEFINITION.

  TRY.
    d_type = component-&gt;get_type( ).
    CREATE OBJECT object.
    object-&gt;set_component( component ).

    CASE d_type.
      WHEN supportedtypes-type_group.
        TRY.
          o_typegroup = export_type_group( component ).
          mac_catch_local_cx.
        ENDTRY.
        CLEAR o_typegroup-&gt;a0_maindata-name.
        object-&gt;raw = o_typegroup.
      WHEN supportedtypes-domain.
        TRY.
          o_domain = export_domain( component ).
          mac_catch_local_cx.
        ENDTRY.
        CLEAR o_domain-&gt;a0_maindata-domname.
        object-&gt;raw = o_domain.
      WHEN supportedtypes-data_element.
        TRY.
          o_data_e = export_data_element( component ).
          mac_catch_local_cx.
        ENDTRY.
        CLEAR o_data_e-&gt;a0_maindata-rollname.
        object-&gt;raw = o_data_e.
      WHEN supportedtypes-view.
        TRY.
          o_view = export_view( component ).
          mac_catch_local_cx.
        ENDTRY.
        CLEAR o_view-&gt;a0_maindata-viewname.
        object-&gt;raw = o_view.
      WHEN supportedtypes-table.
        TRY.
          o_table = export_table( component ).
          mac_catch_local_cx.
        ENDTRY.
        CLEAR o_table-&gt;a0_maindata-tabname.
        object-&gt;raw = o_table.
      WHEN supportedtypes-table_type.
        TRY.
          o_tab_type = export_table_type( component ).
          mac_catch_local_cx.
        ENDTRY.
        CLEAR o_tab_type-&gt;a0_maindata-typename.
        object-&gt;raw = o_tab_type.
      WHEN supportedtypes-search_help.
        TRY.
          o_s_help = export_search_help( component ).
          mac_catch_local_cx.
        ENDTRY.
        CLEAR o_s_help-&gt;a0_maindata-shlpname.
        object-&gt;raw = o_s_help.
      WHEN supportedtypes-lock_object.
        TRY.
          o_lock_obj = export_lock_object( component ).
          mac_catch_local_cx.
        ENDTRY.
        CLEAR o_lock_obj-&gt;a0_maindata-viewname.
        object-&gt;raw = o_lock_obj.
      WHEN OTHERS.
        CLEAR object.
        mac_raise_type_not_supported &apos;ZAPLINK_DICTIONARY&apos; d_type.
    ENDCASE.
    object-&gt;update_connector_data( me ).                    &quot; Issue 66
    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~WRITE_TO_SAP">
     <SOURCE>`
  mac_obj_data.
  DATA o_comp       TYPE to_component.

  DEFINE mac_catch_local_cx.
    catch zaplink_cx_connector into o_mycx.
      if not o_mycx-&gt;messages is bound.
        o_mycx-&gt;messages = application_log.
        o_mycx-&gt;update( ).
      endif.
      raise exception o_mycx.
  END-OF-DEFINITION.

  TRY.

      CASE object-&gt;type.
        WHEN supportedtypes-type_group.
          o_typegroup ?= object-&gt;raw.
          o_typegroup-&gt;a0_maindata-name = object-&gt;name.
          TRY.
            components = import_type_group( o_typegroup ).
            mac_catch_local_cx.
          ENDTRY.
        WHEN supportedtypes-domain.
          o_domain ?= object-&gt;raw.
          o_domain-&gt;a0_maindata-domname = object-&gt;name.
          TRY.
            components = import_domain( o_domain ).
            mac_catch_local_cx.
          ENDTRY.
        WHEN supportedtypes-data_element.
          o_data_e ?= object-&gt;raw.
          o_data_e-&gt;a0_maindata-rollname = object-&gt;name.
          TRY.
            components = import_data_element( o_data_e ).
            mac_catch_local_cx.
          ENDTRY.
        WHEN supportedtypes-view.
          o_view ?= object-&gt;raw.
          o_view-&gt;a0_maindata-viewname = object-&gt;name.
          TRY.
            components = import_view( o_view ).
            mac_catch_local_cx.
          ENDTRY.
        WHEN supportedtypes-table.
          o_table ?= object-&gt;raw.
          o_table-&gt;a0_maindata-tabname = object-&gt;name.
          TRY.
            components = import_table( o_table ).
            mac_catch_local_cx.
          ENDTRY.
        WHEN supportedtypes-table_type.
          o_tab_type ?= object-&gt;raw.
          o_tab_type-&gt;a0_maindata-typename = object-&gt;name.
          TRY.
            components = import_table_type( o_tab_type ).
            mac_catch_local_cx.
          ENDTRY.
        WHEN supportedtypes-search_help.
          o_s_help ?= object-&gt;raw.
          o_s_help-&gt;a0_maindata-shlpname = object-&gt;name.
          TRY.
            components = import_search_help( o_s_help ).
            mac_catch_local_cx.
          ENDTRY.
        WHEN supportedtypes-lock_object.
          o_lock_obj ?= object-&gt;raw.
          o_lock_obj-&gt;a0_maindata-viewname = object-&gt;name.
          TRY.
            components = import_lock_object( o_lock_obj ).
            mac_catch_local_cx.
          ENDTRY.
        WHEN OTHERS.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
          RAISE EXCEPTION TYPE zaplink_cx_connector
            EXPORTING
              textid = zaplink_cx_connector=&gt;type_not_supported
              type   = object-&gt;type
              connclass = &apos;ZAPLINK_DICTIONARY&apos;.
      ENDCASE.

      CREATE OBJECT o_comp.
      o_comp-&gt;set_type( object-&gt;type ).
      o_comp-&gt;set_name( object-&gt;name ).
      IF NOT components IS BOUND. CREATE OBJECT components. ENDIF.
      components-&gt;add( o_comp ).

    CATCH zaplink_cx_connector INTO o_mycx.
      RAISE EXCEPTION o_mycx.
    CATCH zaplink_cx INTO o_cx.
      mac_cascade_raise o_mycx o_cx.
  ENDTRY.</SOURCE>
    </ITEM>
   </REDEFINITIONS>
   <TYPEGROUPS>
    <ITEM TYPEGROUP="ABAP" VERSION="1" IMPLICIT="X"/>
   </TYPEGROUPS>
   <TYPES>
    <ITEM CMPNAME="TD_TYPEGROUP" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100209" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" TYPTYPE="1" TYPE="TYPEGROUP" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Type group name"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TO_DATA_ELEMENT" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" TYPTYPE="3" TYPE="ZAPLINK_DTEL_DATA" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Data for Data element"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TO_DOMAIN" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" TYPTYPE="3" TYPE="ZAPLINK_DOMA_DATA" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Data for Domain"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TO_LOCK_OBJECT" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" TYPTYPE="3" TYPE="ZAPLINK_ENQU_DATA" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Lock object (SE11) Datas"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TO_SEARCH_HELP" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" TYPTYPE="3" TYPE="ZAPLINK_SHLP_DATA" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Search Help (SE11) Datas"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TO_TABLE" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" TYPTYPE="3" TYPE="ZAPLINK_TABL_DATA" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Table (SE11) Datas"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TO_TABLE_TYPE" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" TYPTYPE="3" TYPE="ZAPLINK_TTYP_DATA" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Table Type (SE11) Datas"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TO_TYPEGROUP" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100129" TYPTYPE="3" TYPE="ZAPLINK_TYPE_DATA" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Data for Type group"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TO_VIEW" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100420" TYPTYPE="3" TYPE="ZAPLINK_VIEW_DATA" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Views (SE11) Datas"/>
     </TEXTS>
    </ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="EAAFD56F392D8A2A45B1D2D335D2CBAA" CODE_SIGNATURE="2146484EAEC49BC5FC0DA22AFF903D36" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_DOCUMENTATION" TYPE="CLAS" VERSION="1.01">
  <DEPENDENCIES>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_CONNECTOR_"/>
  </DEPENDENCIES>
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20090617" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100309"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ZAPLink - Documentation tools">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs a connector for :
AS- DOCT : General Text
AS- DOCV : Independent Documentation
U1&amp;RELATIONS&amp;
ASIs part of ZAP Link Framework as Official Connector.
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AShttps://code.google.com/p/zaplink/wiki/Connector</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ATTRIBUTS>
    <ITEM CMPNAME="BALLOG_SUBOBJECT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100309" ATTDECLTYP="2" ATTVALUE="&apos;CNX_DOCUMENTATION&apos;" TYPTYPE="1" TYPE="BALSUBOBJ" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Application Log: Subobject"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="LOG" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100309" ATTDECLTYP="1" TYPTYPE="1" TYPE="TO_MSG_COLL" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Statit log"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="NODE_NAME" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" ATTDECLTYP="2" ATTVALUE="&apos;DOCS&apos;" TYPTYPE="1" TYPE="STRING">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Node name for documentaiton"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="SUPPORTEDTYPES" VERSION="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100402" ATTDECLTYP="2" TYPTYPE="4" R3RELEASE="700">BEGIN OF supportedtypes,                                  &quot;#EC NOTEXT
      general           TYPE td_comptype VALUE &apos;DOCT&apos;,    &quot; General Text
      Indep             TYPE td_comptype VALUE &apos;DOCV&apos;,    &quot; Documentation (Independent)
    END OF supportedtypes
`</ITEM>
    <ITEM CMPNAME="_UUID" VERSION="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100309" ATTDECLTYP="2" ATTVALUE="&apos;3D34954BEABE5F12E1000000AC120173&apos;" TYPTYPE="1" TYPE="TD_CONNUUID" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UUID for connector Message class"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="_VER" VERSION="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100309" ATTDECLTYP="2" ATTVALUE="&apos;1.0&apos;" TYPTYPE="1" TYPE="TD_CONNVER" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Connector Version"/>
     </TEXTS>
    </ITEM>
   </ATTRIBUTS>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS

INCLUDE zaplink_macros.

DEFINE lmac_add_mf_and_raise.
  o_mycx ?= zaplink_cx=&gt;create_from_mf_cx( funcname = &amp;1
                                              subrc = &amp;2
                                          classname = &apos;ZAPLINK_CX_CONNECTOR&apos; ).
  log-&gt;add_symsg( ).
  log-&gt;add_exception( o_mycx ).
  raise exception o_mycx.
END-OF-DEFINITION.</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" MTDTYPE="2" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
  mac_create_log log ballog_subobject space.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" MTDTYPE="2" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
  DATA type LIKE LINE OF supported_types.

  super-&gt;constructor( ).
  mac_create_log application_log ballog_subobject space.
  type-type = supportedtypes-general. INSERT type INTO TABLE supported_types.
  type-type = supportedtypes-indep.   INSERT type INTO TABLE supported_types.

  uuid = _uuid.
  version = _ver.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="DOCU_GET" VERSION="1" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" MTDDECLTYP="1" MTDNEWEXC="X">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Get documentation"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="DOCU" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="DOKIL">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Index for Documentation Table DOKH"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="HEAD" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_HEAD"/>
      <ITEM SCONAME="LANG" VERSION="1" CMPTYPE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_LANG"/>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100309">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
  DATA _text  TYPE tt_rawtext.

  TRY.
    head-id = docu-id.
    head-object = docu-object.
    head-masterlang = docu-masterlang.
    head-langu = docu-langu.
    head-typ = docu-typ.
    head-selfdef = docu-selfdef.
    IF docu-selfdef = space.
      CALL FUNCTION &apos;DOCU_GET&apos;
        EXPORTING
*       EXTEND_EXCEPT                = &apos; &apos;
          id                           = docu-id
          langu                        = docu-langu
          object                       = docu-object
          typ                          = docu-typ
          version                      = docu-version
          version_active_or_last       = &apos;A&apos;
*         PRINT_PARAM_GET              = &apos;X&apos;
        IMPORTING
          dokstate                     = lang-state
*         DOKTITLE                     =
          head                         = lang-head
*        doktyp                       = head-typ
        TABLES
          line                         = _text
        EXCEPTIONS
          no_docu_on_screen            = 1
          no_docu_self_def             = 2
          no_docu_temp                 = 3
          ret_code                     = 4
          OTHERS                       = 5.
      IF sy-subrc &lt;&gt; 0.
        lmac_add_mf_and_raise &apos;DOCU_GET&apos; sy-subrc.
      ENDIF.
      lang-_ = raw2string( _text ).
      head-application = lang-tdobject.
      head-dokform = lang-tdform.
      head-dokstyle = lang-tdstyle.
      CLEAR:
        lang-tdobject,
        lang-tdname,
        lang-tdid,
        lang-tdform,
        lang-tdstyle.
    ENDIF.

    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="GET" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" MTDDECLTYP="1">
     <PARAMETERS>
      <ITEM SCONAME="IDS" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="TR_DOCID">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Range of ID"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJECT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="DOKU_OBJ">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Documentation Object"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="T_DOCS" VERSION="1" CMPTYPE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARDECLTYP="3" TYPTYPE="1" TYPE="TT_DOCS">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Documents"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA _obj   TYPE RANGE OF doku_obj.
  DATA my_obj LIKE LINE OF _obj.
  DATA docs   TYPE STANDARD TABLE OF dokil WITH DEFAULT KEY.
  DATA doc    LIKE LINE OF t_docs.
  DATA _lang  LIKE LINE OF doc-texts.
  FIELD-SYMBOLS:
    &lt;d&gt; LIKE LINE OF docs.

  IF ids IS INITIAL.
    EXIT.
  ENDIF.

  my_obj-sign = &apos;I&apos;. my_obj-option = &apos;CP&apos;.
  my_obj-low = object. APPEND my_obj TO _obj.

  SELECT * INTO TABLE docs
    FROM dokil
    WHERE id IN ids
      AND object IN _obj.

  IF docs IS INITIAL.
    EXIT.
  ENDIF.

  reset( ).

  SORT docs BY id object masterlang DESCENDING langu.

  LOOP AT docs ASSIGNING &lt;d&gt;.
    AT NEW object. &quot; ID + OBJECT
      CLEAR doc.
      CALL METHOD docu_get
        EXPORTING
          docu = &lt;d&gt;
        IMPORTING
          head = doc-hdr
          lang = _lang.
    ENDAT.

    IF _lang IS INITIAL.
      CALL METHOD docu_get
        EXPORTING
          docu   = &lt;d&gt;
        IMPORTING
*          head   = _head
          lang   = _lang.
    ENDIF.
    IF NOT _lang IS INITIAL.
      CLEAR: _lang-tdversion, _lang-tdfuser, _lang-tdfdate, _lang-tdftime, _lang-tdluser, _lang-tdldate, _lang-tdltime.   &quot; Issue 68 : Remove useless data
      INSERT _lang INTO TABLE doc-texts.
      CLEAR _lang.
    ENDIF.

    AT END OF object. &quot; ID + OBJECT
      APPEND doc TO t_docs.
    ENDAT.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="GET_AS_XML_OFF" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" MTDDECLTYP="1" MTDNEWEXC="X">
     <PARAMETERS>
      <ITEM SCONAME="IDS" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="TR_DOCID">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Range of ID"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="OBJECT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="DOKU_OBJ">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Documentation Object"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="XMLDOC" VERSION="1" CMPTYPE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100309" PARDECLTYP="3" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="XML Code"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <EXCEPTIONS>
      <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
       </TEXTS>
      </ITEM>
     </EXCEPTIONS>
     <SOURCE>`
*  DATA ezxml  TYPE REF TO zaplink_easyxml.
*  DATA t_docs TYPE tt_docs.
*
*  t_docs = get( ids = ids
*             object = object ).
*
*  IF NOT t_docs IS INITIAL.
*    CREATE OBJECT ezxml.
*    TRY.
*        CALL METHOD ezxml-&gt;any2xml
*          EXPORTING
*            any        = t_docs
*            type       = node_name
**        attributes = &apos;&apos;
*          RECEIVING
*            xmldoc     = xmldoc.
*      CATCH zaplink_cx INTO o_cx.
*        mac_cascade_raise o_mycx o_cx.
*    ENDTRY.
*    CALL METHOD log-&gt;add_from_instance
*      EXPORTING
*        io_msglist        = ezxml-&gt;application_log
*        if_add_as_subnode = abap_true.
*  ENDIF.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="GET_SINGLE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" MTDDECLTYP="1" R3RELEASE="700">
     <PARAMETERS>
      <ITEM SCONAME="IDS" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_DOC_ID"/>
      <ITEM SCONAME="OBJECT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="DOKU_OBJ">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Documentation Object"/>
       </TEXTS>
      </ITEM>
      <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_DOC">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Document"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA r_ids  TYPE tr_docid.
  DATA my_id  LIKE LINE OF r_ids.
  DATA t_docs TYPE tt_docs.

  my_id-sign = &apos;I&apos;. my_id-option = &apos;EQ&apos;.    my_id-low = ids. APPEND my_id TO r_ids.
  t_docs = get( ids = r_ids
             object = object ).
  IF NOT t_docs IS INITIAL.   READ TABLE t_docs INTO result INDEX 1.    ENDIF.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="NAME_2_MASK" VERSION="1" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100402" MTDDECLTYP="1" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert Component name to mask depending of component type"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="NAME" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100402" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPNAME"/>
      <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100402" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_NAME_MASK"/>
      <ITEM SCONAME="TYPE" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100402" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPTYPE"/>
     </PARAMETERS>
     <SOURCE>`
  CASE type.
    WHEN supportedtypes-general. result-id = &apos;TX&apos;.    result-object = name.
    WHEN supportedtypes-indep.   result = name.
  ENDCASE.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="RAW2STRING" VERSION="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="RawTexts to String"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="RAW" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_RAWTEXT"/>
      <ITEM SCONAME="STRING" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARDECLTYP="3" TYPTYPE="1" TYPE="STRING"/>
     </PARAMETERS>
     <SOURCE>`
FIELD-SYMBOLS &lt;l&gt; LIKE LINE OF raw.
  DATA str TYPE string.

  LOOP AT raw ASSIGNING &lt;l&gt;.
    str = &lt;l&gt;.
    IF string IS INITIAL.
      string = str.
    ELSE.
      CONCATENATE string line_separator str INTO string.
    ENDIF.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="RESET" VERSION="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Reset Bal Log"/>
     </TEXTS>
     <SOURCE>`
  DATA object	TYPE balobj_d.
  DATA subobject  TYPE balsubobj.
  DATA ext_id	TYPE balnrext.

  IF NOT log IS BOUND.    EXIT.   ENDIF.

  object = zaplink_connector=&gt;ballog_object.
  subobject	= &apos;DOCT&apos;.
*  CONCATENATE sy-uname sy-datum sy-uzeit INTO ext_id SEPARATED BY space.
*01    Create
*02    Change
*03    Display
*04    Modify (Direct Input: Create/Change)
*06    Delete
*11    Create defaults
*12    Change defaults
*13    Display defaults
  CALL METHOD log-&gt;init
    EXPORTING
      id_object      = object
      id_subobject   = subobject
      id_extnumber   = ext_id
      auto_upd_custo = abap_true
      id_activity    = zaplink_message_collector=&gt;actions-create
    EXCEPTIONS
      error          = 1
      OTHERS         = 2.
  IF sy-subrc &lt;&gt; 0.
* ignore
  ENDIF.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="SET" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" MTDDECLTYP="1">
     <PARAMETERS>
      <ITEM SCONAME="T_DOCS" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="TT_DOCS">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Documents"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA _text  TYPE tt_rawtext.
  DATA _dokil TYPE dokil.
  DATA _head  TYPE thead.
  FIELD-SYMBOLS:
    &lt;o&gt; LIKE LINE OF t_docs,
    &lt;t&gt; LIKE LINE OF &lt;o&gt;-texts.

  IF t_docs IS INITIAL.
    EXIT. &quot;nothing to do
  ENDIF.

  LOOP AT t_docs ASSIGNING &lt;o&gt;.
    _dokil-id = &lt;o&gt;-id.
    _dokil-object = &lt;o&gt;-object.
    _dokil-selfdef = &lt;o&gt;-selfdef.

    CALL FUNCTION &apos;DOCU_SELFDEF_WRITE&apos;
      EXPORTING
        object_id   = _dokil-id
        object_name = _dokil-object
        selfdef     = _dokil-selfdef
      EXCEPTIONS
        not_deleted = 1
        OTHERS      = 2.
    IF sy-subrc &lt;&gt; 0.
      lmac_add_mf_and_raise &apos;DOCU_SELFDEF_WRITE&apos; sy-subrc.
    ENDIF.
    LOOP AT &lt;o&gt;-texts ASSIGNING &lt;t&gt;.
      _text = string2raw( &lt;t&gt;-_  ).
      _head = &lt;t&gt;-head.
*    head-application = lang-tdobject.
*    head-dokform = lang-tdform.
*    head-dokstyle = lang-tdstyle.
      _head-tdobject = &lt;o&gt;-application.
      _head-tdname = &lt;o&gt;-object.
      _head-tdid = &lt;o&gt;-id.
      _head-tdform = &lt;o&gt;-dokform.
      _head-tdstyle = &lt;o&gt;-dokstyle.

      IF &lt;o&gt;-selfdef IS INITIAL.
        CALL FUNCTION &apos;DOCU_UPDATE&apos;
          EXPORTING
*       ACTCLASS            = &apos; &apos;
            head                = _head
*       NO_MASTERLANG       = &apos; &apos;
            state               = &lt;t&gt;-state
            typ                 = &lt;o&gt;-typ
            version             = 0
          TABLES
            line                = _text.
      ENDIF.
    ENDLOOP.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="SET_AS_XML_OFF" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" MTDDECLTYP="1">
     <PARAMETERS>
      <ITEM SCONAME="XML" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_ELEMENT">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="IF_IXML_ELEMENT"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
*  DATA t_docs TYPE tt_docs.
*  DATA ezxml  TYPE REF TO zaplink_easyxml.
*
*  CREATE OBJECT ezxml.
*
**  TRY.
*  CALL METHOD ezxml-&gt;_xml2any
*    EXPORTING
*      xml = xml
*    CHANGING
*      any = t_docs.
**  ENDTRY.
*
*  IF t_docs IS INITIAL AND ezxml-&gt;application_log-&gt;has_messages_of_msgt( id_msgty = &apos;W&apos; ) IS INITIAL.
*    EXIT. &quot;nothing to do
*  ENDIF.
*
*  reset( ).
*
*  CALL METHOD application_log-&gt;add_from_instance
*    EXPORTING
*      io_msglist        = ezxml-&gt;application_log
*      if_add_as_subnode = abap_true
**      if_cumulate       =
*      .
*
*  set( t_docs ).</SOURCE>
    </ITEM>
    <ITEM CMPNAME="SET_SINGLE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20100309" MTDDECLTYP="1" R3RELEASE="700">
     <PARAMETERS>
      <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_DOC">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Document"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA t_docs TYPE tt_docs.

  append data to t_docs.
  set( t_docs ).</SOURCE>
    </ITEM>
    <ITEM CMPNAME="STRING2RAW" VERSION="1" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="String to RawTexts"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="RAW" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARDECLTYP="3" TYPTYPE="1" TYPE="TT_RAWTEXT"/>
      <ITEM SCONAME="STRING" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
     </PARAMETERS>
     <SOURCE>`
SPLIT string AT LINE_SEPARATOR
        INTO TABLE raw.</SOURCE>
    </ITEM>
   </METHODS>
   <REDEFINITIONS>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~CREATE_NEW_RAW">
     <SOURCE>`
  DATA o_doc TYPE to_doc.

  CREATE OBJECT object.
  CASE type.
    WHEN supportedtypes-general or supportedtypes-indep.
      CREATE OBJECT o_doc.
      object-&gt;raw = o_doc.
    WHEN OTHERS.
      CLEAR object.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
      RAISE EXCEPTION TYPE zaplink_cx_connector
        EXPORTING
          textid = zaplink_cx_connector=&gt;type_not_supported
          type   = type
          connclass = &apos;ZAPLINK_PROGRAM&apos;.
  ENDCASE.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~DELETE_FROM_SAP">
     <SOURCE>`
  DATA pool     TYPE rs38l-area.
  DATA type     TYPE td_comptype.
  DATA s_mask   TYPE ts_name_mask.
  DATA d_ori_modified TYPE c.
  DATA d_doc_type TYPE doku_typ.
  DATA s_dokil  TYPE dokil.
  DATA s_head   TYPE thead.

  TRY.
      type = component-&gt;get_type( ).
      CASE type.
        WHEN supportedtypes-general OR supportedtypes-indep.
          CASE type.
            WHEN supportedtypes-general. s_mask-id = &apos;TX&apos;.    s_mask-object = component-&gt;get_name( ).     &quot; Issue 60
            WHEN supportedtypes-indep.   s_mask = component-&gt;get_name( ).
          ENDCASE.
* FROM MSDCUI01 : MODULE d0100_get_docuobject (583)
          CALL FUNCTION &apos;EXT_MODIFY_ORIGINAL_CHECK&apos;
            EXPORTING
              p_id                = s_mask-id
              p_object            = s_mask-object
            IMPORTING
              p_original_modified = d_ori_modified
            EXCEPTIONS
              OTHERS              = 1.
          IF d_ori_modified = abap_true.&quot;Modi. vorh.
            d_doc_type = &apos;M&apos;.
          ELSEIF s_mask-id = &apos;FU&apos; OR s_mask-id = &apos;FX&apos;.
            d_doc_type = &apos;T&apos;.
          ELSE.
            d_doc_type = &apos;E&apos;.
          ENDIF.

          SELECT SINGLE * INTO s_dokil
            FROM dokil
            WHERE id = s_mask-id
              AND object = s_mask-object
              AND typ = d_doc_type
              AND masterlang = abap_true.
          IF sy-subrc &lt;&gt; 0.
            SELECT SINGLE * INTO s_dokil
              FROM dokil
              WHERE id = s_mask-id
                AND object = s_mask-object
                AND typ = d_doc_type.
          ENDIF.

          s_head-tdid     = s_mask-id.
          s_head-tdname   = s_mask-object.
          s_head-tdspras  = s_dokil-langu.

          CALL FUNCTION &apos;ENQUEUE_ESDOC&apos;
            EXPORTING
*             MODE_DOKHL           = &apos;E&apos;
              id     = s_dokil-id
              object = s_dokil-object
              langu  = s_dokil-langu
              typ    = s_dokil-typ
*             _SCOPE               = &apos;2&apos;
*             _WAIT                = &apos; &apos;
            EXCEPTIONS
              foreign_lock         = 1
              system_failure       = 2
              OTHERS               = 3.
          IF sy-subrc &lt;&gt; 0.
            mac_add_mf_and_raise &apos;ENQUEUE_ESDOC&apos; sy-subrc.
          ENDIF.

          CALL FUNCTION &apos;DOCU_DELETE&apos;
            EXPORTING
*             ACTCLASS              = &apos; &apos;
*             DELETE_RAW_ONLY       = &apos; &apos;
              head                  = s_head
              typ                   = d_doc_type
              version               = s_dokil-version.
          IF sy-subrc &lt;&gt; 0.
            mac_add_mf_and_raise &apos;DOCU_DELETE&apos; sy-subrc.
          ENDIF.
          CALL FUNCTION &apos;DEQUEUE_ESDOC&apos;
           EXPORTING
*             MODE_DOKHL         = &apos;E&apos;
*             _SCOPE             = &apos;3&apos;
              id     = s_dokil-id
              object = s_dokil-object
              langu  = s_dokil-langu
              typ    = s_dokil-typ.

          SELECT SINGLE * INTO s_dokil
            FROM dokil
            WHERE id = s_mask-id
              AND object = s_mask-object
              AND typ = d_doc_type.
          IF sy-subrc &lt;&gt; 0.   result = abap_true.   ENDIF.

        WHEN OTHERS.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
          RAISE EXCEPTION TYPE zaplink_cx_connector
            EXPORTING
              textid = zaplink_cx_connector=&gt;type_not_supported
              type   = type
              connclass = &apos;ZAPLINK_PROGRAM&apos;.
      ENDCASE.

    CATCH zaplink_cx_connector INTO o_mycx.
      RAISE EXCEPTION o_mycx.
    CATCH zaplink_cx INTO o_cx.
      mac_cascade_raise o_mycx o_cx.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~DO_EXISTS">
     <SOURCE>`
  DATA type     TYPE td_comptype.
  DATA s_mask   TYPE ts_name_mask.
  DATA d_name   TYPE td_compname.

  exists = me-&gt;exists-not_exists.

  TRY.
      type = component-&gt;get_type( ).
      CASE type.
        WHEN supportedtypes-general OR supportedtypes-indep..
          d_name = component-&gt;get_name( ).
          s_mask = name_2_mask( type = type    name = d_name ).
          SELECT SINGLE id INTO s_mask-id
            FROM dokil
            WHERE     id = s_mask-id
              AND object = s_mask-object.
          IF sy-subrc = 0.    exists = me-&gt;exists-exists.   ENDIF.
*          CALL FUNCTION &apos;DOCU_INIT&apos;
*            EXPORTING
*              id            = s_mask-id
*              langu         =
*              object        = s_mask-object
*              typ           =
*            IMPORTING
**             FOUND         =
*              XDOKIL        = s_dokil.
*          IF not s_dokil is INITIAL.    exists = me-&gt;exists-exists.   ENDIF.
        WHEN OTHERS.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
          RAISE EXCEPTION TYPE zaplink_cx_connector
            EXPORTING
              textid = zaplink_cx_connector=&gt;type_not_supported
              type   = type
              connclass = &apos;ZAPLINK_MESSAGE&apos;.
      ENDCASE.

    CATCH zaplink_cx_connector INTO o_mycx.
      RAISE EXCEPTION o_mycx.
    CATCH zaplink_cx INTO o_cx.
      mac_cascade_raise o_mycx o_cx.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~IS_SUPPORTED_VERSION">
     <SOURCE>`
  result = abap_false.
  if version = _ver.    result = abap_true.   endif.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~READ_FROM_SAP">
     <SOURCE>`
  DATA o_data   TYPE to_doc.
  DATA d_name   TYPE td_compname.
  DATA type     TYPE td_comptype.
  DATA s_mask   TYPE ts_name_mask.
  DATA s_doc    TYPE ts_doc.

  TRY.
    type = component-&gt;get_type( ).
    CREATE OBJECT object.
    object-&gt;set_component( component ).
    CASE type.
      WHEN supportedtypes-general OR supportedtypes-indep.
        d_name = component-&gt;get_name( ).
        s_mask = name_2_mask( type = type    name = d_name ).
        s_doc = get_single( ids = s_mask-id
                         object = s_mask-object ).

        CREATE OBJECT o_data.
        o_data-&gt;from_data( s_doc ).
        CLEAR: o_data-&gt;a0_maindata-id, o_data-&gt;a0_maindata-object.
        object-&gt;raw = o_data.
      WHEN OTHERS.
        CLEAR object.
        mac_raise_type_not_supported &apos;ZAPLINK_DOCUMENTATION&apos; type.
    ENDCASE.
    object-&gt;update_connector_data( me ).                    &quot; Issue 66
    mac_def_catch zaplink_cx_connector.
  ENDTRY.</SOURCE>
    </ITEM>
    <ITEM REFCLSNAME="ZAPLINK_CONNECTOR_" VERSION="1" MTDNAME="ZAPLINK_CONNECTOR~WRITE_TO_SAP">
     <SOURCE>`
  DATA o_data   TYPE to_doc.
  DATA o_comp   TYPE to_component.
  DATA s_mask   TYPE ts_name_mask.
  DATA s_doc    TYPE ts_doc.

  TRY.

      CASE object-&gt;type.
        WHEN supportedtypes-general OR supportedtypes-indep.
          o_data ?= object-&gt;raw.
          CASE object-&gt;type.
            WHEN supportedtypes-general. s_mask-id = &apos;TX&apos;.    s_mask-object = object-&gt;name.
            WHEN supportedtypes-indep.   s_mask = object-&gt;name.
          ENDCASE.
          o_data-&gt;a0_maindata-id = s_mask-id.   o_data-&gt;a0_maindata-object = s_mask-object.
          s_doc = o_data-&gt;to_data( ).
          set_single( s_doc ).
          CREATE OBJECT o_comp.
          o_comp-&gt;set_type( object-&gt;type ).   o_comp-&gt;set_name( object-&gt;name ).
          CREATE OBJECT components.
          components-&gt;add( o_comp ).
        WHEN OTHERS.
* Type &apos;&amp;TYPE&amp;&apos; is not supported by this connector &apos;&amp;CONNCLASS&amp;&apos;
          RAISE EXCEPTION TYPE zaplink_cx_connector
            EXPORTING
              textid = zaplink_cx_connector=&gt;type_not_supported
              type   = object-&gt;type
              connclass = &apos;ZAPLINK_PROGRAM&apos;.
      ENDCASE.

    CATCH zaplink_cx_connector INTO o_mycx.
      ROLLBACK WORK.
      RAISE EXCEPTION o_mycx.
    CATCH zaplink_cx INTO o_cx.
      ROLLBACK WORK.
      mac_cascade_raise o_mycx o_cx.
  ENDTRY.</SOURCE>
    </ITEM>
   </REDEFINITIONS>
   <TYPEGROUPS>
    <ITEM TYPEGROUP="ABAP" VERSION="1" IMPLICIT="X"/>
   </TYPEGROUPS>
   <TYPES>
    <ITEM CMPNAME="TO_DOC" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="3" TYPE="ZAPLINK_DOCV_DATA">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Data for documentation"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TO_LOG" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100127" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="3" TYPE="ZAPLINK_MESSAGE_COLLECTOR">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Message Collector"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_NAME_MASK" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100309" TYPTYPE="4" R3RELEASE="700">BEGIN OF ts_name_mask,
      ID 	    TYPE DOKIL-ID,
      OBJECT  TYPE DOKIL-OBJECT,
    END OF ts_name_mask
`</ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="4FE7C5BD8776B9B7127D95F69FFD9E61" CODE_SIGNATURE="000A2589C84B692CD196774D10EB4A4E" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_DOCV_DATA" TYPE="CLAS" VERSION="1.01">
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100309" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_RAW_DATA" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100309"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Documentation Datas">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_DOCUMENTATION
ASDefine XML structure of a independent documentation &amp; general text
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ALIASES>
    <ITEM CMPNAME="TS_DOC" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TS_DOC"/>
    <ITEM CMPNAME="TS_HEAD" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TS_HEAD"/>
   </ALIASES>
   <ATTRIBUTS>
    <ITEM CMPNAME="A0_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" TYPTYPE="1" TYPE="TS_HEAD" R3RELEASE="700"/>
    <ITEM CMPNAME="TEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100309" TYPTYPE="1" TYPE="TT_TEXTS" R3RELEASE="700"/>
   </ATTRIBUTS>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_DOCUMENTATION" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100309"/>
   </FRIENDS>
   <INTERFACES>
    <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100309" RELTYPE="1"/>
   </INTERFACES>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="FROM_DATA" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" R3RELEASE="700">
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_DOC"/>
     </PARAMETERS>
     <SOURCE>`
  DATA s_text LIKE LINE OF texts.
  FIELD-SYMBOLS:
    &lt;t&gt; LIKE LINE OF fm_data-texts.

  a0_maindata = fm_data-hdr.    a0_maindata-masterlang = a0_maindata-langu.   CLEAR a0_maindata-langu.
  LOOP AT fm_data-texts ASSIGNING &lt;t&gt;.
    CLEAR s_text.   s_text-langu = &lt;t&gt;-tdspras.   s_text-_ = &lt;t&gt;-_.   INSERT s_text INTO TABLE texts.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="TO_DATA" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100309" R3RELEASE="700">
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_DOC"/>
     </PARAMETERS>
     <SOURCE>`
  DATA s_text LIKE LINE OF fm_data-texts.
  FIELD-SYMBOLS:
    &lt;t&gt; LIKE LINE OF texts.

  fm_data-hdr = a0_maindata.    fm_data-hdr-langu = a0_maindata-masterlang. fm_data-hdr-masterlang = abap_true.
  LOOP AT texts ASSIGNING &lt;t&gt;.
    CLEAR s_text.   s_text-tdspras = &lt;t&gt;-langu.   s_text-_ = &lt;t&gt;-_.   INSERT s_text INTO TABLE fm_data-texts.
  ENDLOOP.</SOURCE>
    </ITEM>
   </METHODS>
   <TYPES>
    <ITEM CMPNAME="TS_TEXT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4" R3RELEASE="700">begin of ts_text,
        Langu type sy-langu,
        _     type string,      &quot; Text
      end of ts_text
`</ITEM>
    <ITEM CMPNAME="TT_RAWTEXT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100309" TYPTYPE="4" R3RELEASE="700">tt_rawtext TYPE STANDARD TABLE OF tline WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_TEXT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4" R3RELEASE="700">
     tt_text TYPE STANDARD TABLE OF tline WITH DEFAULT KEY
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Table of TLINE"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TT_TEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100309" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4" R3RELEASE="700">tt_texts type SORTED TABLE OF ts_text with UNIQUE key langu
`</ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="9B23840CD98F4BFE1BF3E4B13863788D" CODE_SIGNATURE="CA97F826BC49E94511BC5EC3A6A6B0B1" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_DOMA_DATA" TYPE="CLAS" VERSION="1.01">
  <DEPENDENCIES>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_DOCUMENTATION"/>
  </DEPENDENCIES>
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_RAW_DATA" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100210"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Domain (SE11) Datas">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_DICTIONARY
ASDefine XML structure of a Domain
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ALIASES>
    <ITEM CMPNAME="TD_DOC_ID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_DOC_ID"/>
    <ITEM CMPNAME="TR_DOCID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TR_DOCID"/>
    <ITEM CMPNAME="TT_DOCS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_DOCS"/>
    <ITEM CMPNAME="TT_TEXTS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_TEXTS"/>
   </ALIASES>
   <ATTRIBUTS>
    <ITEM CMPNAME="A0_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100210" TYPTYPE="1" TYPE="TS_MAINDATA">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Line Type for Table with Package Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF doc_ids,
      header TYPE td_doc_id VALUE &apos;DO&apos;,
    END OF doc_ids
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="R_DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100210" ATTDECLTYP="1" TYPTYPE="1" TYPE="TR_DOCID">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100210" TYPTYPE="1" TYPE="TT_TEXTS"/>
    <ITEM CMPNAME="VALUES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100210" TYPTYPE="1" TYPE="TT_VALUES"/>
   </ATTRIBUTS>
   <DEFERRED>
    <CLASSES>
     <ITEM TYPEGROUP="ZAPLINK_DOCUMENTATION" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
    </CLASSES>
   </DEFERRED>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_DICTIONARY" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100210"/>
    <ITEM REFCLSNAME="ZAPLINK_EASYXML" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100210"/>
   </FRIENDS>
   <INTERFACES>
    <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100210" RELTYPE="1"/>
   </INTERFACES>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE
 CLASS ZAPLINK_DOCUMENTATION DEFINITION LOAD.</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="ANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100211" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Anonymized component data"/>
     </TEXTS>
     <SOURCE>`
  FIELD-SYMBOLS:
    &lt;t&gt; like LINE OF texts.

  clear: a0_maindata-AS4USER, a0_maindata-AS4DATE, a0_maindata-AS4TIME.
  loop at texts ASSIGNING &lt;t&gt;.
    clear: &lt;t&gt;-LONG_TXT-TDFUSER, &lt;t&gt;-LONG_TXT-TDFDATE, &lt;t&gt;-LONG_TXT-TDFTIME.
  endloop.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100210" MTDTYPE="2" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
  DATA _id LIKE LINE OF r_doc_ids.

  _id-sign = &apos;I&apos;. _id-option = &apos;EQ&apos;.
  _id-low = doc_ids-header. APPEND _id TO r_doc_ids.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="FROM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100210">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert FM Data to object attributes"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100210" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_value LIKE LINE OF values.
  DATA s_vtext LIKE LINE OF s_value-texts.
  DATA s_text  LIKE LINE OF texts.
  FIELD-SYMBOLS:
    &lt;d&gt; LIKE LINE OF fm_data-docs,
    &lt;dt&gt; LIKE LINE OF &lt;d&gt;-texts,
    &lt;vt&gt; LIKE LINE OF fm_data-values_texts,
    &lt;t&gt; LIKE LINE OF fm_data-texts,
    &lt;v&gt; LIKE LINE OF fm_data-values.

  a0_maindata-hdr = fm_data-header.

* Values
  LOOP AT fm_data-values ASSIGNING &lt;v&gt;.
    CLEAR s_value. s_value-main = &lt;v&gt;. CLEAR s_value-domname.
    LOOP AT fm_data-values_texts ASSIGNING &lt;vt&gt;
      WHERE valpos = &lt;v&gt;-valpos.
      CLEAR s_vtext.
      s_vtext-langu = &lt;vt&gt;-ddlanguage.
*      IF &lt;v&gt;-DOMVALUE_H is INITIAL.
      s_vtext-short_txt = &lt;vt&gt;-ddtext.
*      else.
*      endif.
      INSERT s_vtext INTO TABLE s_value-texts.
    ENDLOOP.
    INSERT s_value INTO TABLE values.
  ENDLOOP.

* Texts
  LOOP AT fm_data-texts ASSIGNING &lt;t&gt;.
    CLEAR s_text.
    s_text-langu = &lt;t&gt;-ddlanguage.
    s_text-short_txt = &lt;t&gt;-ddtext.
    READ TABLE fm_data-docs ASSIGNING &lt;d&gt;
         WITH KEY id = doc_ids-header
              object = a0_maindata-domname.
    IF sy-subrc = 0.
      READ TABLE &lt;d&gt;-texts ASSIGNING &lt;dt&gt;
          WITH KEY tdspras = s_text-langu.
      IF sy-subrc = 0.
        s_text-long_txt = &lt;dt&gt;.
        CLEAR s_text-long_txt-tdspras.
      ENDIF.
    ENDIF.
    INSERT s_text INTO TABLE texts.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="TO_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100210">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert object attributes to FM Data"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100210" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_value LIKE LINE OF fm_data-values.
  DATA s_vtext LIKE LINE OF fm_data-values_texts.
  DATA s_text  LIKE LINE OF fm_data-texts.
  DATA s_doc   LIKE LINE OF fm_data-docs.
  DATA s_dtxt  LIKE LINE OF s_doc-texts.
  FIELD-SYMBOLS:
    &lt;v&gt; LIKE LINE OF values,
    &lt;t&gt; LIKE LINE OF texts,
    &lt;d&gt; LIKE LINE OF fm_data-docs,
    &lt;vt&gt; LIKE LINE OF &lt;v&gt;-texts.

  fm_data-header = a0_maindata-hdr.

* Values
  LOOP AT values ASSIGNING &lt;v&gt;.
    CLEAR s_value. s_value = &lt;v&gt;-main. s_value-domname = fm_data-header-domname.
    INSERT s_value INTO TABLE fm_data-values.
    LOOP AT &lt;v&gt;-texts ASSIGNING &lt;vt&gt;.
      CLEAR s_vtext.
      MOVE-CORRESPONDING &lt;v&gt; TO s_vtext.
      s_vtext-domname = fm_data-header-domname.
      s_vtext-ddlanguage = &lt;vt&gt;-langu.
      s_vtext-as4local = &apos;A&apos;. &quot; Active
      s_vtext-valpos = &lt;v&gt;-valpos.
      s_vtext-as4vers = &apos;0000&apos;. &quot; Active
      s_vtext-ddtext = &lt;vt&gt;-short_txt.
      INSERT s_vtext INTO TABLE fm_data-values_texts.
    ENDLOOP.
  ENDLOOP.

* Texts
  LOOP AT texts ASSIGNING &lt;t&gt;.
    CLEAR s_text.
    s_text-domname = fm_data-header-domname.
    s_text-ddlanguage = &lt;t&gt;-langu.
    s_text-as4local = &apos;A&apos;. &quot; Active
    s_text-as4vers = &apos;0000&apos;. &quot; Active
    s_text-ddtext = &lt;t&gt;-short_txt.
    INSERT s_text INTO TABLE fm_data-texts.
    IF NOT &lt;t&gt;-long_txt IS INITIAL.
      IF fm_data-docs IS INITIAL.
        CLEAR s_doc.
*APPLICATION    DOKU
*ID	            DO
*OBJECT	        ____
*LANGU          E
*MASTERLANG	    X
*TYP            T
*DOKFORM        S_DOCU_SHOW
*DOKSTYLE	      S_DOCUS1
*SELFDEF
        s_doc-application = &apos;DOKU&apos;.
        s_doc-id = doc_ids-header.
        s_doc-object = fm_data-header-domname.
        s_doc-langu = &lt;t&gt;-langu.
        s_doc-masterlang = abap_true.
        s_doc-typ = &apos;T&apos;.
        s_doc-dokform = &apos;S_DOCU_SHOW&apos;.
        s_doc-dokstyle = &apos;S_DOCUS1&apos;.
        INSERT s_doc INTO TABLE fm_data-docs.
      ENDIF.
      s_dtxt = &lt;t&gt;-long_txt.
      s_dtxt-tdspras = &lt;t&gt;-langu.
      INSERT s_dtxt INTO TABLE s_doc-texts.
    ENDIF.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="UNANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100211" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UnAnonymized component data"/>
     </TEXTS>
    </ITEM>
   </METHODS>
   <TYPES>
    <ITEM CMPNAME="TS_FM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_fm_data,
* DO pour type doc
                header        TYPE dd01v,
                texts         TYPE tt_dd01t,
                docs          TYPE tt_docs,
                values        TYPE tt_dd07v,
                values_texts  TYPE tt_dd07t,
              END OF ts_fm_data
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function Module Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_maindata.
    INCLUDE TYPE dd01v AS hdr.
    TYPES:
      END OF ts_maindata
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="General Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_VALUE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_value.
    INCLUDE TYPE dd07v AS main.
    TYPES:
        texts TYPE tt_texts,
      END OF ts_value
`</ITEM>
    <ITEM CMPNAME="TT_DD01T" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd01t TYPE SORTED TABLE OF dd01t WITH UNIQUE KEY ddlanguage
`</ITEM>
    <ITEM CMPNAME="TT_DD07T" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd07t TYPE SORTED TABLE OF dd07t WITH UNIQUE KEY valpos ddlanguage
`</ITEM>
    <ITEM CMPNAME="TT_DD07V" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd07v TYPE STANDARD TABLE OF dd07v WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_VALUES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20100210" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" TYPTYPE="4">tt_values TYPE SORTED TABLE OF ts_value WITH UNIQUE KEY valpos
`</ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="088BA36EC73BC33BD30BD610FC4C4BFF" CODE_SIGNATURE="AD58FE1752E5A7565143456F6766535F" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_DTEL_DATA" TYPE="CLAS" VERSION="1.01">
  <DEPENDENCIES>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_DOCUMENTATION"/>
  </DEPENDENCIES>
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_RAW_DATA" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100211"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Data element (SE11) Datas">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_DICTIONARY
ASDefine XML structure of a Data element
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ALIASES>
    <ITEM CMPNAME="TD_DOC_ID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_DOC_ID"/>
    <ITEM CMPNAME="TR_DOCID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TR_DOCID"/>
    <ITEM CMPNAME="TT_DOCS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_DOCS"/>
    <ITEM CMPNAME="TT_TEXTS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_TEXTS"/>
   </ALIASES>
   <ATTRIBUTS>
    <ITEM CMPNAME="A0_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100212" TYPTYPE="1" TYPE="TS_MAINDATA">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Line Type for Table with Package Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF doc_ids,
      header TYPE td_doc_id VALUE &apos;DE&apos;,
    END OF doc_ids
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="R_DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100215" ATTDECLTYP="1" TYPTYPE="1" TYPE="TR_DOCID">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100212" TYPTYPE="1" TYPE="TT_TEXTS"/>
   </ATTRIBUTS>
   <DEFERRED>
    <CLASSES>
     <ITEM TYPEGROUP="ZAPLINK_DOCUMENTATION" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
    </CLASSES>
   </DEFERRED>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_DICTIONARY" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100211"/>
    <ITEM REFCLSNAME="ZAPLINK_EASYXML" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100211"/>
   </FRIENDS>
   <INTERFACES>
    <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100211" RELTYPE="1"/>
   </INTERFACES>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE
 CLASS ZAPLINK_DOCUMENTATION DEFINITION LOAD.</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="ANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100215" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Anonymized component data"/>
     </TEXTS>
     <SOURCE>`
  FIELD-SYMBOLS:
    &lt;t&gt; like LINE OF texts.

  clear: a0_maindata-AS4USER, a0_maindata-AS4DATE, a0_maindata-AS4TIME.
  loop at texts ASSIGNING &lt;t&gt;.
    clear: &lt;t&gt;-LONG_TXT-TDFUSER, &lt;t&gt;-LONG_TXT-TDFDATE, &lt;t&gt;-LONG_TXT-TDFTIME.
  endloop.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100212" MTDTYPE="2" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
  DATA _id LIKE LINE OF r_doc_ids.

  _id-sign = &apos;I&apos;. _id-option = &apos;EQ&apos;.
  _id-low = doc_ids-header. APPEND _id TO r_doc_ids.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="FROM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100212">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert FM Data to object attributes"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100212" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_text  LIKE LINE OF texts.
  FIELD-SYMBOLS:
    &lt;d&gt; LIKE LINE OF fm_data-docs,
    &lt;dt&gt; LIKE LINE OF &lt;d&gt;-texts,
    &lt;t&gt; LIKE LINE OF fm_data-texts.

  a0_maindata-hdr = fm_data-header.
  a0_maindata-param = fm_data-param.

* Texts
  LOOP AT fm_data-texts ASSIGNING &lt;t&gt;.
    CLEAR s_text.
    s_text-langu = &lt;t&gt;-ddlanguage.
    s_text-short_txt = &lt;t&gt;-ddtext.
    READ TABLE fm_data-docs ASSIGNING &lt;d&gt;
         WITH KEY id = doc_ids-header
              object = a0_maindata-rollname.
    IF sy-subrc = 0.
      READ TABLE &lt;d&gt;-texts ASSIGNING &lt;dt&gt;
          WITH KEY tdspras = s_text-langu.
      IF sy-subrc = 0.
        s_text-long_txt = &lt;dt&gt;.
        CLEAR s_text-long_txt-tdspras.
      ENDIF.
    ENDIF.
    INSERT s_text INTO TABLE texts.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="TO_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100212">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert object attributes to FM Data"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100212" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_text  LIKE LINE OF fm_data-texts.
  DATA s_doc   LIKE LINE OF fm_data-docs.
  DATA s_dtxt  LIKE LINE OF s_doc-texts.
  FIELD-SYMBOLS:
    &lt;d&gt; LIKE LINE OF fm_data-docs,
    &lt;t&gt; LIKE LINE OF texts.

  fm_data-header = a0_maindata-hdr.

* Texts
  LOOP AT texts ASSIGNING &lt;t&gt;.
    CLEAR s_text.
    s_text-rollname = fm_data-header-rollname.
    s_text-ddlanguage = &lt;t&gt;-langu.
    s_text-as4local = &apos;A&apos;. &quot; Active
    s_text-as4vers = &apos;0000&apos;. &quot; Active
    s_text-ddtext = &lt;t&gt;-short_txt.
    INSERT s_text INTO TABLE fm_data-texts.
    IF NOT &lt;t&gt;-long_txt IS INITIAL.
      IF fm_data-docs IS INITIAL.
*APPLICATION    DOKU
*ID	            DO
*OBJECT	        ____
*LANGU          E
*MASTERLANG	    X
*TYP            T
*DOKFORM        S_DOCU_SHOW
*DOKSTYLE	      S_DOCUS1
*SELFDEF
        s_doc-application = &apos;DOKU&apos;.
        s_doc-id = doc_ids-header.
        s_doc-object = fm_data-header-rollname.
        s_doc-langu = &lt;t&gt;-langu.
        s_doc-masterlang = abap_true.
        s_doc-typ = &apos;T&apos;.
        s_doc-dokform = &apos;S_DOCU_SHOW&apos;.
        s_doc-dokstyle = &apos;S_DOCUS1&apos;.
        INSERT s_doc INTO TABLE fm_data-docs.
      ENDIF.
      READ TABLE fm_data-docs ASSIGNING &lt;d&gt; INDEX 1.
      s_dtxt = &lt;t&gt;-long_txt.
      s_dtxt-tdspras = &lt;t&gt;-langu.
      INSERT s_dtxt INTO TABLE &lt;d&gt;-texts.
    ENDIF.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="UNANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100215" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UnAnonymized component data"/>
     </TEXTS>
    </ITEM>
   </METHODS>
   <TYPES>
    <ITEM CMPNAME="TS_FM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_fm_data,
* DO pour type doc
        header        TYPE dd04v,
        param         TYPE tpara,
        texts         TYPE tt_dd04t,
        docs          TYPE tt_docs,
      END OF ts_fm_data
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function Module Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100211" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" TYPTYPE="4">
     BEGIN OF ts_maindata.
    INCLUDE TYPE dd04v AS hdr.
    INCLUDE TYPE tpara AS param.
    TYPES:
      END OF ts_maindata
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="General Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TT_DD04T" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100212" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd04t TYPE SORTED TABLE OF dd04t WITH UNIQUE KEY ddlanguage
`</ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="300DCDA5AC467685FEA5295627A383D5" CODE_SIGNATURE="A650C1BF0CA5EA9FE49A9FDF4F23A740" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_ENQU_DATA" TYPE="CLAS" VERSION="1.01">
  <DEPENDENCIES>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_DOCUMENTATION"/>
  </DEPENDENCIES>
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_RAW_DATA" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100311"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Lock object (SE11) Datas">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_DICTIONARY
ASDefine XML structure of a Lock object
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ALIASES>
    <ITEM CMPNAME="TD_DOC_ID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_DOC_ID"/>
    <ITEM CMPNAME="TR_DOCID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TR_DOCID"/>
    <ITEM CMPNAME="TT_DOCS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_DOCS"/>
    <ITEM CMPNAME="TT_TEXTS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_TEXTS"/>
   </ALIASES>
   <ATTRIBUTS>
    <ITEM CMPNAME="A0_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" TYPTYPE="1" TYPE="TS_MAINDATA">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Line Type for Table with Package Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4" R3RELEASE="700">
     BEGIN OF doc_ids,
      header TYPE td_doc_id VALUE &apos;TT&apos;,
    END OF doc_ids
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="FIELDS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" TYPTYPE="1" TYPE="TT_FIELDS"/>
    <ITEM CMPNAME="R_DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311" ATTDECLTYP="1" TYPTYPE="1" TYPE="TR_DOCID" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TABLES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" TYPTYPE="1" TYPE="TT_TABLES"/>
    <ITEM CMPNAME="TEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" TYPTYPE="1" TYPE="TT_TEXTS"/>
   </ATTRIBUTS>
   <DEFERRED>
    <CLASSES>
     <ITEM TYPEGROUP="ZAPLINK_DOCUMENTATION" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
    </CLASSES>
   </DEFERRED>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_DICTIONARY" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100311"/>
    <ITEM REFCLSNAME="ZAPLINK_EASYXML" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100311"/>
   </FRIENDS>
   <INTERFACES>
    <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100311" RELTYPE="1"/>
   </INTERFACES>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE
 CLASS ZAPLINK_DOCUMENTATION DEFINITION LOAD.</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="ANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Anonymized component data"/>
     </TEXTS>
     <SOURCE>`
*  FIELD-SYMBOLS   &lt;t&gt; like LINE OF texts.
*
*  clear: a0_maindata-AS4USER, a0_maindata-AS4DATE, a0_maindata-AS4TIME.
*  loop at texts ASSIGNING &lt;t&gt;.    clear: &lt;t&gt;-LONG_TXT-TDFUSER, &lt;t&gt;-LONG_TXT-TDFDATE, &lt;t&gt;-LONG_TXT-TDFTIME.    endloop.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" MTDTYPE="2" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
* Link beetween Lock Object and Module in :
* LSD50F01 : form l_show_lock_functions.
*  concatenate &apos;*QUEUE_&apos; df-ddxx-viewname into func_name.
*  call function &apos;F4_FUNCTIONMODULE&apos;
  DATA _id LIKE LINE OF r_doc_ids.

  _id-sign = &apos;I&apos;. _id-option = &apos;EQ&apos;.
  _id-low = doc_ids-header. APPEND _id TO r_doc_ids.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="FROM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert FM Data to object attributes"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_text    LIKE LINE OF texts.
  DATA s_field   LIKE LINE OF fields.
  DATA s_table   LIKE LINE OF tables.
  DATA t_docs    TYPE tt_docs.
  FIELD-SYMBOLS:
    &lt;d&gt;  LIKE LINE OF fm_data-docs,
    &lt;dt&gt; LIKE LINE OF &lt;d&gt;-texts,
    &lt;f&gt;  LIKE LINE OF fm_data-fields,
    &lt;ta&gt; LIKE LINE OF fm_data-tables,
    &lt;t&gt;  LIKE LINE OF fm_data-texts.

  a0_maindata-hdr = fm_data-header.   CLEAR a0_maindata-ddtext.

* Texts
  t_docs = fm_data-docs.
  READ TABLE t_docs ASSIGNING &lt;d&gt;
       WITH KEY id = doc_ids-header
            object = a0_maindata-viewname.
  LOOP AT fm_data-texts ASSIGNING &lt;t&gt;
          WHERE viewname = a0_maindata-viewname.
    CLEAR s_text.   s_text-langu = &lt;t&gt;-ddlanguage.    s_text-short_txt = &lt;t&gt;-ddtext.
    IF &lt;d&gt; IS ASSIGNED.
      READ TABLE &lt;d&gt;-texts ASSIGNING &lt;dt&gt;
          WITH KEY tdspras = s_text-langu.
      IF sy-subrc = 0.    s_text-long_txt = &lt;dt&gt;.   CLEAR s_text-long_txt-tdspras.    DELETE TABLE &lt;d&gt;-texts FROM &lt;dt&gt;.    ENDIF.
    ENDIF.
    INSERT s_text INTO TABLE texts.
  ENDLOOP.
  IF &lt;d&gt; IS ASSIGNED.
    LOOP AT &lt;d&gt;-texts ASSIGNING &lt;dt&gt;.
      CLEAR s_text.    s_text-langu = &lt;dt&gt;-tdspras.   s_text-long_txt = &lt;dt&gt;.   CLEAR s_text-long_txt-tdspras.    INSERT s_text INTO TABLE texts.
    ENDLOOP.
  ENDIF.

* Tables
  LOOP AT fm_data-tables ASSIGNING &lt;ta&gt;
          WHERE viewname = a0_maindata-viewname.
    CLEAR s_table.   s_table = &lt;ta&gt;.   CLEAR: s_table-viewname, s_table-ddlanguage, s_table-fordir. &quot;, s_table-forfield.
    IF s_table-tabpos = &apos;0001&apos;.  CLEAR s_table-fortabname.  ENDIF.    &quot; Primary Table
    INSERT s_table INTO TABLE tables.
  ENDLOOP.

*Fields
  LOOP AT fm_data-fields ASSIGNING &lt;f&gt;
          WHERE viewname = a0_maindata-viewname.
    CLEAR s_field.   MOVE-CORRESPONDING &lt;f&gt; TO s_field.   CLEAR: s_field-keyflag, s_field-rollnamevi, s_field-rollname, s_field-rollchange, s_field-datatype, s_field-flength, s_field-rdonly, s_field-ddtext.
    INSERT s_field INTO TABLE fields.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="TO_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert object attributes to FM Data"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_txt      LIKE LINE OF fm_data-texts.
  DATA s_doc      LIKE LINE OF fm_data-docs.
  DATA s_doc_txt  LIKE LINE OF s_doc-texts.
  DATA s_field    LIKE LINE OF fm_data-fields.
  DATA s_table    LIKE LINE OF fm_data-tables.
  FIELD-SYMBOLS:
    &lt;d&gt;  LIKE LINE OF fm_data-docs,
    &lt;f&gt;  LIKE LINE OF fields,
    &lt;ta&gt; LIKE LINE OF tables,
    &lt;t&gt;  LIKE LINE OF texts.

  fm_data-header = a0_maindata-hdr.

* Texts
*APPLICATION                                      DOKU
*ID                                      RE
*OBJECT                                      SAPLxxxx
*LANGU                                      E
*MASTERLANG                                      X
*TYP                                      E
*DOKFORM                                      S_DOCU_SHOW
*DOKSTYLE                                      S_DOCUS1
  s_doc-application = &apos;DOKU&apos;.   s_doc-id = doc_ids-header.   s_doc-object = fm_data-header-viewname.
  s_doc-masterlang = abap_true.   s_doc-typ = &apos;E&apos;.    s_doc-dokform = &apos;S_DOCU_SHOW&apos;.    s_doc-dokstyle = &apos;S_DOCUS1&apos;.
  LOOP AT texts ASSIGNING &lt;t&gt;.
    IF NOT &lt;t&gt;-short_txt IS INITIAL.    CLEAR s_txt.    s_txt-viewname = fm_data-header-viewname.   s_txt-ddlanguage = &lt;t&gt;-langu.   s_txt-ddtext = &lt;t&gt;-short_txt.   INSERT s_txt INTO TABLE fm_data-texts.    ENDIF.
    IF NOT &lt;t&gt;-long_txt IS INITIAL.
      CLEAR s_doc_txt.    s_doc_txt = &lt;t&gt;-long_txt.   s_doc_txt-tdspras = &lt;t&gt;-langu.    INSERT s_doc_txt INTO TABLE s_doc-texts.
      IF s_doc-langu IS INITIAL.    s_doc-langu = s_doc_txt-tdspras.    ENDIF.
    ENDIF.
  ENDLOOP.
  IF NOT s_doc-texts IS INITIAL.    INSERT s_doc INTO TABLE fm_data-docs.   ENDIF.

* Tables
  LOOP AT tables ASSIGNING &lt;ta&gt;.
    CLEAR s_table.   s_table = &lt;ta&gt;.   s_table-viewname = a0_maindata-viewname.
    IF s_table-tabpos = &apos;0001&apos;.  s_table-fortabname = s_table-tabname.  ENDIF.    &quot; Primary Table
    INSERT s_table INTO TABLE fm_data-tables.
  ENDLOOP.

*Fields
  LOOP AT fields ASSIGNING &lt;f&gt;.
    CLEAR s_field.   s_field-objpos = sy-tabix.   MOVE-CORRESPONDING &lt;f&gt; TO s_field.   s_field-keyflag = abap_true.    s_field-viewname = a0_maindata-viewname.
    INSERT s_field INTO TABLE fm_data-fields.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="UNANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UnAnonymized component data"/>
     </TEXTS>
    </ITEM>
   </METHODS>
   <TYPES>
    <ITEM CMPNAME="TS_FM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_fm_data,
          header        TYPE dd25v,
          texts         TYPE tt_dd25t,
          docs          TYPE tt_docs,
          tables        TYPE tt_dd26e,
          fields        TYPE tt_dd27p,
        END OF ts_fm_data
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function Module Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_maindata.
    INCLUDE TYPE dd25v AS hdr.
    TYPES:
      END OF ts_maindata
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="General Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TT_DD25T" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd25t TYPE SORTED TABLE OF dd25t WITH UNIQUE KEY ddlanguage
`</ITEM>
    <ITEM CMPNAME="TT_DD26E" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd26e TYPE STANDARD TABLE OF dd26e WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD27P" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd27p TYPE STANDARD TABLE OF dd27p WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_FIELDS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_fields TYPE SORTED TABLE OF dd53d WITH UNIQUE KEY viewfield
`</ITEM>
    <ITEM CMPNAME="TT_TABLES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_tables TYPE SORTED TABLE OF dd26e WITH UNIQUE KEY tabpos
`</ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="030335E8A8466A875D6C452D2FC25D26" CODE_SIGNATURE="EFD0BBB04735E6689737FEF609C8C922" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_SHLP_DATA" TYPE="CLAS" VERSION="1.01">
  <DEPENDENCIES>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_DOCUMENTATION"/>
  </DEPENDENCIES>
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_RAW_DATA" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100310"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Search Help (SE11) Datas">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_DICTIONARY
ASDefine XML structure of a Search help
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ALIASES>
    <ITEM CMPNAME="TD_DOC_ID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_DOC_ID"/>
    <ITEM CMPNAME="TR_DOCID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TR_DOCID"/>
    <ITEM CMPNAME="TT_DOCS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_DOCS"/>
    <ITEM CMPNAME="TT_TEXTS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_TEXTS"/>
   </ALIASES>
   <ATTRIBUTS>
    <ITEM CMPNAME="A0_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" TYPTYPE="1" TYPE="TS_MAINDATA">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Line Type for Table with Package Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4" R3RELEASE="700">
     BEGIN OF doc_ids,
      header TYPE td_doc_id VALUE &apos;TT&apos;,
    END OF doc_ids
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="PARAMS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100311" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" TYPTYPE="1" TYPE="TT_FIELDS"/>
    <ITEM CMPNAME="R_DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" ATTDECLTYP="1" TYPTYPE="1" TYPE="TR_DOCID" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="SUB_SEARCH_HELPS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" TYPTYPE="1" TYPE="TT_SUB_SH"/>
    <ITEM CMPNAME="TEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" TYPTYPE="1" TYPE="TT_TEXTS"/>
   </ATTRIBUTS>
   <DEFERRED>
    <CLASSES>
     <ITEM TYPEGROUP="ZAPLINK_DOCUMENTATION" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
    </CLASSES>
   </DEFERRED>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_DICTIONARY" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100310"/>
    <ITEM REFCLSNAME="ZAPLINK_EASYXML" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100310"/>
   </FRIENDS>
   <INTERFACES>
    <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100310" RELTYPE="1"/>
   </INTERFACES>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE
 CLASS ZAPLINK_DOCUMENTATION DEFINITION LOAD.</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="ANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Anonymized component data"/>
     </TEXTS>
     <SOURCE>`
*  FIELD-SYMBOLS   &lt;t&gt; like LINE OF texts.
*
*  clear: a0_maindata-AS4USER, a0_maindata-AS4DATE, a0_maindata-AS4TIME.
*  loop at texts ASSIGNING &lt;t&gt;.    clear: &lt;t&gt;-LONG_TXT-TDFUSER, &lt;t&gt;-LONG_TXT-TDFDATE, &lt;t&gt;-LONG_TXT-TDFTIME.    endloop.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" MTDTYPE="2" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
  DATA _id LIKE LINE OF r_doc_ids.

  _id-sign = &apos;I&apos;. _id-option = &apos;EQ&apos;.
  _id-low = doc_ids-header. APPEND _id TO r_doc_ids.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="FROM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert FM Data to object attributes"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_text    LIKE LINE OF texts.
  DATA s_param   LIKE LINE OF params.
  DATA s_ssh     LIKE LINE OF sub_search_helps.
  DATA s_sshp    LIKE LINE OF s_ssh-params.
  DATA t_docs    TYPE tt_docs.
  FIELD-SYMBOLS:
    &lt;d&gt;  LIKE LINE OF fm_data-docs,
    &lt;dt&gt; LIKE LINE OF &lt;d&gt;-texts,
    &lt;s&gt;  LIKE LINE OF fm_data-sub_sh,
    &lt;sp&gt; LIKE LINE OF fm_data-ssh_params,
    &lt;t&gt;  LIKE LINE OF fm_data-texts.

  a0_maindata-hdr = fm_data-header.   CLEAR a0_maindata-ddtext.
  params = fm_data-fields.    MODIFY params FROM s_param TRANSPORTING shlpname WHERE table_line IS NOT INITIAL.

* Texts
  t_docs = fm_data-docs.
  READ TABLE t_docs ASSIGNING &lt;d&gt;
       WITH KEY id = doc_ids-header
            object = a0_maindata-shlpname.
  LOOP AT fm_data-texts ASSIGNING &lt;t&gt;
          WHERE shlpname = a0_maindata-shlpname.
    CLEAR s_text.   s_text-langu = &lt;t&gt;-ddlanguage.    s_text-short_txt = &lt;t&gt;-ddtext.
    IF &lt;d&gt; IS ASSIGNED.
      READ TABLE &lt;d&gt;-texts ASSIGNING &lt;dt&gt;
          WITH KEY tdspras = s_text-langu.
      IF sy-subrc = 0.    s_text-long_txt = &lt;dt&gt;.   CLEAR s_text-long_txt-tdspras.    DELETE TABLE &lt;d&gt;-texts FROM &lt;dt&gt;.    ENDIF.
    ENDIF.
    INSERT s_text INTO TABLE texts.
  ENDLOOP.
  IF &lt;d&gt; IS ASSIGNED.
    LOOP AT &lt;d&gt;-texts ASSIGNING &lt;dt&gt;.
      CLEAR s_text.    s_text-langu = &lt;dt&gt;-tdspras.   s_text-long_txt = &lt;dt&gt;.   CLEAR s_text-long_txt-tdspras.    INSERT s_text INTO TABLE texts.
    ENDLOOP.
  ENDIF.

* SUB_SEARCH_HELPS
  LOOP AT fm_data-sub_sh ASSIGNING &lt;s&gt;
          WHERE shlpname = a0_maindata-shlpname.
    CLEAR s_ssh.   s_ssh-hdr = &lt;s&gt;.   CLEAR s_ssh-shlpname.
    IF s_ssh-viashlp = a0_maindata-shlpname.  CLEAR s_ssh-viashlp.  ENDIF.
    LOOP AT fm_data-ssh_params ASSIGNING &lt;sp&gt;
            WHERE shlpname = a0_maindata-shlpname
              AND subshlp = s_ssh-subshlp.
      CLEAR s_sshp.   s_sshp = &lt;sp&gt;.    CLEAR: s_sshp-shlpname, s_sshp-subshlp, s_sshp-valuedirec.    &quot;auto determinded
      INSERT s_sshp INTO TABLE s_ssh-params.
    ENDLOOP.
    DELETE s_ssh-params WHERE fieldname IS INITIAL.
    INSERT s_ssh INTO TABLE sub_search_helps.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="TO_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert object attributes to FM Data"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_txt      LIKE LINE OF fm_data-texts.
  DATA s_field    LIKE LINE OF fm_data-fields.
  DATA s_doc      LIKE LINE OF fm_data-docs.
  DATA s_doc_txt  LIKE LINE OF s_doc-texts.
  DATA s_ssh      LIKE LINE OF fm_data-sub_sh.
  DATA s_sshp     LIKE LINE OF fm_data-ssh_params.
  FIELD-SYMBOLS:
    &lt;d&gt;  LIKE LINE OF fm_data-docs,
    &lt;s&gt;  LIKE LINE OF sub_search_helps,
    &lt;sp&gt; LIKE LINE OF &lt;s&gt;-params,
    &lt;t&gt;  LIKE LINE OF texts.

  fm_data-header = a0_maindata-hdr.
  s_field-shlpname = fm_data-header-shlpname.   fm_data-fields = params.    MODIFY fm_data-fields FROM s_field TRANSPORTING shlpname WHERE table_line IS NOT INITIAL.

* Texts
*APPLICATION                                      DOKU
*ID                                      RE
*OBJECT                                      SAPLxxxx
*LANGU                                      E
*MASTERLANG                                      X
*TYP                                      E
*DOKFORM                                      S_DOCU_SHOW
*DOKSTYLE                                      S_DOCUS1
  s_doc-application = &apos;DOKU&apos;.   s_doc-id = doc_ids-header.   s_doc-object = fm_data-header-shlpname.
  s_doc-masterlang = abap_true.   s_doc-typ = &apos;E&apos;.    s_doc-dokform = &apos;S_DOCU_SHOW&apos;.    s_doc-dokstyle = &apos;S_DOCUS1&apos;.
  LOOP AT texts ASSIGNING &lt;t&gt;.
    IF NOT &lt;t&gt;-short_txt IS INITIAL.    CLEAR s_txt.    s_txt-shlpname = fm_data-header-shlpname.   s_txt-ddlanguage = &lt;t&gt;-langu.   s_txt-ddtext = &lt;t&gt;-short_txt.   INSERT s_txt INTO TABLE fm_data-texts.    ENDIF.
    IF NOT &lt;t&gt;-long_txt IS INITIAL.
      CLEAR s_doc_txt.    s_doc_txt = &lt;t&gt;-long_txt.   s_doc_txt-tdspras = &lt;t&gt;-langu.    INSERT s_doc_txt INTO TABLE s_doc-texts.
      IF s_doc-langu IS INITIAL.    s_doc-langu = s_doc_txt-tdspras.    ENDIF.
    ENDIF.
  ENDLOOP.
  IF NOT s_doc-texts IS INITIAL.    INSERT s_doc INTO TABLE fm_data-docs.   ENDIF.

* SUB_SEARCH_HELPS
  LOOP AT sub_search_helps ASSIGNING &lt;s&gt;.
    CLEAR s_ssh.   s_ssh = &lt;s&gt;-hdr.   s_ssh-shlpname = a0_maindata-shlpname.
    IF s_ssh-viashlp IS INITIAL.    s_ssh-viashlp = a0_maindata-shlpname.  ENDIF.
    INSERT s_ssh INTO TABLE fm_data-sub_sh.
    LOOP AT &lt;s&gt;-params ASSIGNING &lt;sp&gt;.
      CLEAR s_sshp.   s_sshp = &lt;sp&gt;.    s_sshp-shlpname = a0_maindata-shlpname.   s_sshp-subshlp = &lt;s&gt;-subshlp.
      INSERT s_sshp INTO TABLE fm_data-ssh_params.
    ENDLOOP.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="UNANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UnAnonymized component data"/>
     </TEXTS>
    </ITEM>
   </METHODS>
   <TYPES>
    <ITEM CMPNAME="TO_ME" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" TYPTYPE="3" TYPE="ZAPLINK_SHLP_DATA"/>
    <ITEM CMPNAME="TS_FM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_fm_data,
        header        TYPE dd30v,
        texts         TYPE tt_dd30t,
        docs          TYPE tt_docs,
        fields        TYPE tt_dd32p,
        sub_sh        TYPE tt_dd31v,
        ssh_params    TYPE tt_dd33v,
      END OF ts_fm_data
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function Module Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="11 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100311" TYPTYPE="4">
     BEGIN OF ts_maindata.
    INCLUDE TYPE dd30v AS hdr.
    TYPES:
      END OF ts_maindata
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="General Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_SUB_SH" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="9 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_sub_sh.
    INCLUDE TYPE dd31v AS hdr.
    TYPES:
        params        TYPE tt_params,
        zl_object     TYPE to_me,
      END OF ts_sub_sh
`</ITEM>
    <ITEM CMPNAME="TT_DD30T" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd30t TYPE SORTED TABLE OF dd30t WITH UNIQUE KEY ddlanguage
`</ITEM>
    <ITEM CMPNAME="TT_DD31V" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd31v TYPE STANDARD TABLE OF dd31v WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD32P" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd32p TYPE STANDARD TABLE OF dd32p WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD33V" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd33v TYPE STANDARD TABLE OF dd33v WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_FIELDS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_fields TYPE SORTED TABLE OF dd32p WITH UNIQUE KEY fieldname
`</ITEM>
    <ITEM CMPNAME="TT_PARAMS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_params TYPE SORTED TABLE OF dd33v WITH UNIQUE KEY subfield
`</ITEM>
    <ITEM CMPNAME="TT_SUB_SH" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="10 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_sub_sh TYPE SORTED TABLE OF ts_sub_sh WITH UNIQUE KEY shposition
`</ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="AE13FAA629CEF7504108D4DF3291920E" CODE_SIGNATURE="BEF91F8C34107B8EF62256CC0F96593C" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_TABL_DATA" TYPE="CLAS" VERSION="1.01">
  <DEPENDENCIES>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_DOCUMENTATION"/>
  </DEPENDENCIES>
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_RAW_DATA" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100222"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Table (SE11) Datas">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_DICTIONARY
ASDefine XML structure of a Table or Structure
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ALIASES>
    <ITEM CMPNAME="TD_DOC_ID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_DOC_ID"/>
    <ITEM CMPNAME="TR_DOCID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TR_DOCID"/>
    <ITEM CMPNAME="TT_DOCS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_DOCS"/>
    <ITEM CMPNAME="TT_TEXTS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_TEXTS"/>
   </ALIASES>
   <ATTRIBUTS>
    <ITEM CMPNAME="A0_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222" TYPTYPE="1" TYPE="TS_MAINDATA">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Line Type for Table with Package Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF doc_ids,
      header TYPE td_doc_id VALUE &apos;TB&apos;,
    END OF doc_ids
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="FIELDS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222" TYPTYPE="1" TYPE="TT_FIELDS"/>
    <ITEM CMPNAME="INDEXES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222" TYPTYPE="1" TYPE="TT_INDEXES"/>
    <ITEM CMPNAME="R_DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222" ATTDECLTYP="1" TYPTYPE="1" TYPE="TR_DOCID">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222" TYPTYPE="1" TYPE="TT_TEXTS"/>
   </ATTRIBUTS>
   <DEFERRED>
    <CLASSES>
     <ITEM TYPEGROUP="ZAPLINK_DOCUMENTATION" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
    </CLASSES>
   </DEFERRED>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_DICTIONARY" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100222"/>
    <ITEM REFCLSNAME="ZAPLINK_EASYXML" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100222"/>
   </FRIENDS>
   <INTERFACES>
    <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100222" RELTYPE="1"/>
   </INTERFACES>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE
 CLASS ZAPLINK_DOCUMENTATION DEFINITION LOAD.</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="ANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Anonymized component data"/>
     </TEXTS>
     <SOURCE>`
  FIELD-SYMBOLS:
    &lt;t&gt; like LINE OF texts.

  clear: a0_maindata-AS4USER, a0_maindata-AS4DATE, a0_maindata-AS4TIME,
         a0_maindata-technical_settings-AS4USER, a0_maindata-technical_settings-AS4DATE, a0_maindata-technical_settings-AS4TIME.
  loop at texts ASSIGNING &lt;t&gt;.
    clear: &lt;t&gt;-LONG_TXT-TDFUSER, &lt;t&gt;-LONG_TXT-TDFDATE, &lt;t&gt;-LONG_TXT-TDFTIME.
  endloop.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222" MTDTYPE="2" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
  DATA _id LIKE LINE OF r_doc_ids.

  _id-sign = &apos;I&apos;. _id-option = &apos;EQ&apos;.
  _id-low = doc_ids-header. APPEND _id TO r_doc_ids.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="FROM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert FM Data to object attributes"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_text  LIKE LINE OF texts.
  DATA s_field LIKE LINE OF fields.
  DATA s_sh_f  LIKE LINE OF s_field-search_help-fields.
  DATA s_fk_f  LIKE LINE OF s_field-forein_key-fields.
  DATA s_f_txt LIKE LINE OF s_field-texts.
  DATA s_index LIKE LINE OF indexes.
  DATA s_idx_f LIKE LINE OF s_index-fields.
  DATA d_str   TYPE string.
  FIELD-SYMBOLS:
    &lt;f&gt; LIKE LINE OF fm_data-fields,
    &lt;ft&gt; LIKE LINE OF fm_data-fields_texts,
    &lt;s&gt; LIKE LINE OF fm_data-search_helps,
    &lt;sf&gt; LIKE LINE OF fm_data-sh_fields,
    &lt;k&gt; LIKE LINE OF fm_data-forein_keys,
    &lt;ff&gt; LIKE LINE OF fm_data-fk_fields,
    &lt;i&gt; LIKE LINE OF fm_data-indexes,
    &lt;if&gt; LIKE LINE OF fm_data-idx_fields,
    &lt;d&gt; LIKE LINE OF fm_data-docs,
    &lt;dt&gt; LIKE LINE OF &lt;d&gt;-texts,
    &lt;t&gt; LIKE LINE OF fm_data-texts.

  a0_maindata-hdr = fm_data-header.
  a0_maindata-technical_settings = fm_data-tech.
  CLEAR: a0_maindata-technical_settings-tabname,
         a0_maindata-technical_settings-as4local,
         a0_maindata-technical_settings-as4vers.

* Texts
  LOOP AT fm_data-texts ASSIGNING &lt;t&gt;.
    CLEAR s_text.
    s_text-langu = &lt;t&gt;-ddlanguage.
    s_text-short_txt = &lt;t&gt;-ddtext.
    READ TABLE fm_data-docs ASSIGNING &lt;d&gt;
         WITH KEY id = doc_ids-header
              object = a0_maindata-tabname.
    IF sy-subrc = 0.
      READ TABLE &lt;d&gt;-texts ASSIGNING &lt;dt&gt;
          WITH KEY tdspras = s_text-langu.
      IF sy-subrc = 0.
        s_text-long_txt = &lt;dt&gt;.
        CLEAR s_text-long_txt-tdspras.
      ENDIF.
    ENDIF.
    INSERT s_text INTO TABLE texts.
  ENDLOOP.

* fields
  LOOP AT fm_data-fields ASSIGNING &lt;f&gt;
          WHERE tabname = a0_maindata-tabname.
    CLEAR s_field.      s_field-hdr = &lt;f&gt;.      CLEAR: s_field-tabname.

* Texts
    LOOP AT fm_data-fields_texts ASSIGNING &lt;ft&gt;
            WHERE tabname = &lt;f&gt;-tabname
            AND fieldname = &lt;f&gt;-fieldname.
      CLEAR s_f_txt.
      s_f_txt-langu = &lt;ft&gt;-ddlanguage.
      s_f_txt-short_txt = &lt;ft&gt;-ddtext.
      INSERT s_f_txt INTO TABLE s_field-texts.
    ENDLOOP.

* Search help
    LOOP AT fm_data-search_helps ASSIGNING &lt;s&gt;
            WHERE tabname = &lt;f&gt;-tabname
            AND fieldname = &lt;f&gt;-fieldname.
      IF s_field-search_help IS NOT INITIAL. sy-subrc = sy-tabix / 0. ENDIF.    &quot; should not append
      s_field-search_help-hdr = &lt;s&gt;.      CLEAR: s_field-search_help-tabname, s_field-search_help-fieldname.
      LOOP AT fm_data-sh_fields ASSIGNING &lt;sf&gt;
              WHERE tabname = &lt;s&gt;-tabname
              AND fieldname = &lt;s&gt;-fieldname
               AND shlpname = &lt;s&gt;-shlpname.
        CLEAR s_sh_f.     s_sh_f = &lt;sf&gt;.    CLEAR: s_sh_f-tabname, s_sh_f-fieldname, s_sh_f-shlpname.
        IF s_sh_f-shtable = a0_maindata-tabname.    CLEAR: s_sh_f-shtable.    IF s_sh_f-shfield = s_field-fieldname.    CLEAR: s_sh_f-shfield. ENDIF. ENDIF.
        INSERT s_sh_f INTO TABLE s_field-search_help-fields.
      ENDLOOP.
    ENDLOOP.

* Foreign Keys
    LOOP AT fm_data-forein_keys ASSIGNING &lt;k&gt;
            WHERE tabname = &lt;f&gt;-tabname
            AND fieldname = &lt;f&gt;-fieldname.
      IF s_field-forein_key IS NOT INITIAL. sy-subrc = sy-tabix / 0. ENDIF.    &quot; should not append
      s_field-forein_key-hdr = &lt;k&gt;.      CLEAR: s_field-forein_key-tabname, s_field-forein_key-fieldname, s_field-checktable.
      LOOP AT fm_data-fk_fields ASSIGNING &lt;ff&gt;
              WHERE tabname = &lt;k&gt;-tabname
              AND fieldname = &lt;k&gt;-fieldname
             AND checktable = &lt;k&gt;-checktable.
        CLEAR s_fk_f.     s_fk_f = &lt;ff&gt;.    CLEAR: s_fk_f-tabname, s_fk_f-fieldname, s_fk_f-checktable.
        IF s_fk_f-fortable = a0_maindata-tabname.    CLEAR: s_fk_f-fortable.    IF s_fk_f-forkey = s_field-fieldname.    CLEAR: s_fk_f-forkey. ENDIF. ENDIF.
        INSERT s_fk_f INTO TABLE s_field-forein_key-fields.
      ENDLOOP.
    ENDLOOP.

    INSERT s_field INTO TABLE fields.
  ENDLOOP.

* indexes
  LOOP AT fm_data-indexes ASSIGNING &lt;i&gt;
          WHERE sqltab = a0_maindata-tabname.
    CLEAR s_index.      s_index-hdr = &lt;i&gt;.      CLEAR: s_index-sqltab.
    CONCATENATE &lt;i&gt;-sqltab &apos;~&apos; &lt;i&gt;-indexname INTO d_str.
    IF d_str = s_index-dbindex. CLEAR s_index-dbindex. ENDIF.     &quot; clear default naming convention

* fields
    LOOP AT fm_data-idx_fields ASSIGNING &lt;if&gt;
            WHERE sqltab = &lt;i&gt;-sqltab
           AND indexname = &lt;i&gt;-indexname.
      CLEAR s_idx_f.    s_idx_f = &lt;if&gt;.       CLEAR: s_idx_f-sqltab, s_idx_f-indexname.
      INSERT s_idx_f INTO TABLE s_index-fields.
    ENDLOOP.

    INSERT s_index INTO TABLE indexes.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="TO_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert object attributes to FM Data"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_text  LIKE LINE OF fm_data-texts.
  DATA s_doc   LIKE LINE OF fm_data-docs.
  DATA s_dtxt  LIKE LINE OF s_doc-texts.
  DATA s_index LIKE LINE OF fm_data-indexes.
  DATA s_idx_f LIKE LINE OF fm_data-idx_fields.
  DATA s_field LIKE LINE OF fm_data-fields.
  DATA s_f_txt LIKE LINE OF fm_data-fields_texts.
  DATA s_sh    LIKE LINE OF fm_data-search_helps.
  DATA s_sh_f  LIKE LINE OF fm_data-sh_fields.
  DATA s_fk    LIKE LINE OF fm_data-forein_keys.
  DATA s_fk_f  LIKE LINE OF fm_data-fk_fields.
  FIELD-SYMBOLS:
    &lt;i&gt;  LIKE LINE OF indexes,
    &lt;if&gt; LIKE LINE OF &lt;i&gt;-fields,
    &lt;f&gt;  LIKE LINE OF fields,
    &lt;ft&gt; LIKE LINE OF &lt;f&gt;-texts,
    &lt;sf&gt; LIKE LINE OF &lt;f&gt;-search_help-fields,
    &lt;ff&gt; LIKE LINE OF &lt;f&gt;-forein_key-fields,
    &lt;d&gt;  LIKE LINE OF fm_data-docs,
    &lt;t&gt;  LIKE LINE OF texts.

  fm_data-header = a0_maindata-hdr.
  fm_data-tech = a0_maindata-technical_settings.
  fm_data-tech-tabname = fm_data-header-tabname.
  fm_data-tech-as4local = &apos;A&apos;.
  fm_data-tech-as4vers = &apos;0000&apos;.

* Texts
  LOOP AT texts ASSIGNING &lt;t&gt;.
    CLEAR s_text.
    s_text-tabname = fm_data-header-tabname.
    s_text-ddlanguage = &lt;t&gt;-langu.
    s_text-as4local = &apos;A&apos;. &quot; Active
    s_text-as4vers = &apos;0000&apos;. &quot; Active
    s_text-ddtext = &lt;t&gt;-short_txt.
    INSERT s_text INTO TABLE fm_data-texts.
    IF NOT &lt;t&gt;-long_txt IS INITIAL.
      IF fm_data-docs IS INITIAL.
        s_doc-application = &apos;DOKU&apos;.
        s_doc-id = doc_ids-header.
        s_doc-object = fm_data-header-tabname.
        s_doc-langu = &lt;t&gt;-langu.
        s_doc-masterlang = abap_true.
        s_doc-typ = &apos;E&apos;.
        s_doc-dokform = &apos;S_DOCU_SHOW&apos;.
        s_doc-dokstyle = &apos;S_DOCUS1&apos;.
        INSERT s_doc INTO TABLE fm_data-docs.
      ENDIF.
      READ TABLE fm_data-docs ASSIGNING &lt;d&gt; INDEX 1.
      s_dtxt = &lt;t&gt;-long_txt.
      s_dtxt-tdspras = &lt;t&gt;-langu.
      INSERT s_dtxt INTO TABLE &lt;d&gt;-texts.
    ENDIF.
  ENDLOOP.

* indexes
  LOOP AT indexes ASSIGNING &lt;i&gt;.
    CLEAR s_index.      s_index = &lt;i&gt;-hdr.      s_index-sqltab = a0_maindata-tabname.
    IF s_index-dbindex IS INITIAL. CONCATENATE s_index-sqltab &apos;~&apos; s_index-indexname INTO s_index-dbindex. ENDIF.     &quot; retrieve default naming convention
    INSERT s_index INTO TABLE fm_data-indexes.

* fields
    LOOP AT &lt;i&gt;-fields ASSIGNING &lt;if&gt;.
      CLEAR s_idx_f.    s_idx_f = &lt;if&gt;.       s_idx_f-sqltab = s_index-sqltab. s_idx_f-indexname = s_index-indexname.
      INSERT s_idx_f INTO TABLE fm_data-idx_fields.
    ENDLOOP.
  ENDLOOP.

* fields
  LOOP AT fields ASSIGNING &lt;f&gt;.
    CLEAR s_field.      s_field = &lt;f&gt;-hdr.      s_field-tabname = a0_maindata-tabname.

* Texts
    LOOP AT &lt;f&gt;-texts ASSIGNING &lt;ft&gt;.
      CLEAR s_f_txt.    s_f_txt-ddlanguage = &lt;ft&gt;-langu.    s_f_txt-ddtext = &lt;ft&gt;-short_txt.    s_f_txt-tabname = s_field-tabname.    s_f_txt-fieldname = s_field-fieldname.
      INSERT s_f_txt INTO TABLE fm_data-fields_texts.
    ENDLOOP.

* Search help
    IF NOT &lt;f&gt;-search_help IS INITIAL.
      CLEAR s_sh.   s_sh = &lt;f&gt;-search_help-hdr.   s_sh-tabname = s_field-tabname.   s_sh-fieldname = s_field-fieldname.
      INSERT s_sh INTO TABLE fm_data-search_helps.
      LOOP AT &lt;f&gt;-search_help-fields ASSIGNING &lt;sf&gt;.
        CLEAR s_sh_f.     s_sh_f = &lt;sf&gt;.    s_sh_f-tabname = s_sh-tabname.    s_sh_f-fieldname = s_sh-fieldname.    s_sh_f-shlpname = s_sh-shlpname.
        IF s_sh_f-shtable IS INITIAL. s_sh_f-shtable = a0_maindata-tabname.    IF s_sh_f-shfield IS INITIAL. s_sh_f-shfield = &lt;f&gt;-fieldname.    ENDIF. ENDIF.
        INSERT s_sh_f INTO TABLE fm_data-sh_fields.
      ENDLOOP.
    ENDIF.

* Foreign Keys
    IF NOT &lt;f&gt;-forein_key IS INITIAL.
      CLEAR s_fk.   s_fk = &lt;f&gt;-forein_key-hdr.   s_fk-tabname = s_field-tabname.   s_fk-fieldname = s_field-fieldname.
      INSERT s_fk INTO TABLE fm_data-forein_keys.
      s_field-checktable = s_fk-checktable.
      LOOP AT &lt;f&gt;-forein_key-fields ASSIGNING &lt;ff&gt;.
        CLEAR s_fk_f.     s_fk_f = &lt;ff&gt;.    s_fk_f-tabname = s_fk-tabname.   s_fk_f-fieldname = s_fk-fieldname.   s_fk_f-checktable = s_fk-checktable.
        IF s_fk_f-fortable IS INITIAL.    s_fk_f-fortable = a0_maindata-tabname.    IF s_fk_f-forkey IS INITIAL.  s_fk_f-forkey = s_field-fieldname.   ENDIF. ENDIF.
        INSERT s_fk_f INTO TABLE fm_data-fk_fields.
      ENDLOOP.
    ENDIF.
    INSERT s_field INTO TABLE fm_data-fields.
  ENDLOOP.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="UNANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100222">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UnAnonymized component data"/>
     </TEXTS>
    </ITEM>
   </METHODS>
   <TYPES>
    <ITEM CMPNAME="TS_FIELD" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="14 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_field.
    INCLUDE TYPE dd03p AS hdr.
    TYPES:
        texts       TYPE tt_texts,
        search_help TYPE ts_search_help,
        forein_key  TYPE ts_forein_key,
      END OF ts_field
`</ITEM>
    <ITEM CMPNAME="TS_FM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="11 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_fm_data,
* DO pour type doc
              header        TYPE dd02v,
              tech          TYPE dd09v,
              texts         TYPE tt_dd02t,
              docs          TYPE tt_docs,
              fields        TYPE tt_dd03p,
              fields_texts  TYPE tt_dd03t,
              forein_keys   TYPE tt_dd08v,      &quot; Header
              fk_fields     TYPE tt_dd05m,
              indexes       TYPE tt_dd12v,
              idx_fields    TYPE tt_dd17v,
              search_helps  TYPE tt_dd35v,
              sh_fields     TYPE tt_dd36m,
            END OF ts_fm_data
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function Module Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_FOREIN_KEY" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="13 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_forein_key.
    INCLUDE TYPE dd08v AS hdr.
    TYPES:
        fields TYPE SORTED TABLE OF dd05m WITH UNIQUE KEY primpos,
      END OF ts_forein_key
`</ITEM>
    <ITEM CMPNAME="TS_INDEX" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="16 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_index.
    INCLUDE TYPE dd12v AS hdr.
    TYPES:
        fields TYPE SORTED TABLE OF dd17v WITH UNIQUE KEY position,
      END OF ts_index
`</ITEM>
    <ITEM CMPNAME="TS_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="18 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100225" TYPTYPE="4">
     BEGIN OF ts_maindata.
    INCLUDE TYPE dd02v AS hdr.
*    INCLUDE TYPE dd09v AS tech.
*    types:
*      BEGIN OF ts_dd09v_light,
** required fields of dd09V
*        TABKAT TABKAT  CHAR  2 0 Size category
*        TABART TABART  CHAR  5 0 Data class in technical settings
*        PUFFERUNG  PUFFERUNG CHAR  1 0 Buffering type indicator
*        SCHFELDANZ SCHFELDANZ  NUMC  3 0 No. of key fields for generic buffers
*        PROTOKOLL  DDPROTOCOL  CHAR  1 0 Log data changes
*        SPEICHPUFF SPEICHPUFF  CHAR  1 0 Flag for the storage type in the buffer
*        AS4USER  AS4USER CHAR  12  0 Last Changed by
*        AS4DATE  AS4DATE DATS  8 0 Date of Last Change
*        AS4TIME  AS4TIME TIMS  6 0 Last changed at
*        TRANSPFLAG DDTRANSP  CHAR  1 0 Convert to transparent table or maintain transparency
*        RESERVE  DDRESERVE CHAR  1 0 Reserved field in the ABAP Dictionary
*        UEBERSETZ  UEBERSETZ CHAR  1 0 Flag whether table is relevant for translation
*        ACTFLAG  ACTFLAG CHAR  1 0 Activation flag
*        BUFALLOW BUFALLOW  CHAR  1 0 Indicator for buffering allowed/not allowed
*        JAVAONLY DDJAVAONLY  CHAR  1 0 Write access only with JAVA
*      END OF ts_dd09v_light .
*    INCLUDE TYPE ts_dd09v_light AS tech.
    TYPES:
        technical_settings TYPE dd09v,
      END OF ts_maindata
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="General Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_SEARCH_HELP" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="12 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">BEGIN OF ts_search_help.
    INCLUDE TYPE dd35v AS hdr.
    TYPES:
        fields TYPE SORTED TABLE OF dd36m WITH UNIQUE KEY shlpfield,
      END OF ts_search_help
`</ITEM>
    <ITEM CMPNAME="TT_DD02T" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd02t TYPE SORTED TABLE OF dd02t WITH UNIQUE KEY ddlanguage
`</ITEM>
    <ITEM CMPNAME="TT_DD03P" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd03p TYPE STANDARD TABLE OF dd03p WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD03T" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="9 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd03t TYPE SORTED TABLE OF dd03t WITH UNIQUE KEY fieldname ddlanguage
`</ITEM>
    <ITEM CMPNAME="TT_DD05M" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd05m TYPE STANDARD TABLE OF dd05m WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD08V" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd08v TYPE STANDARD TABLE OF dd08v WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD12V" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd12v TYPE STANDARD TABLE OF dd12v WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD17V" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd17v TYPE STANDARD TABLE OF dd17v WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD35V" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd35v TYPE STANDARD TABLE OF dd35v WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD36M" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd36m TYPE STANDARD TABLE OF dd36m WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_FIELDS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="15 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_fields TYPE SORTED TABLE OF ts_field WITH UNIQUE KEY position
`</ITEM>
    <ITEM CMPNAME="TT_INDEXES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="17 " AUTHOR="TBENSIAL" CREATEDON="20100222" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_indexes TYPE SORTED TABLE OF ts_index WITH UNIQUE KEY indexname
`</ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="3BE8C1932836374BD3F7E2AD5B9F7287" CODE_SIGNATURE="907CDE94EE95881B4F2FD950E788EA15" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_TTYP_DATA" TYPE="CLAS" VERSION="1.01">
  <DEPENDENCIES>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_DOCUMENTATION"/>
  </DEPENDENCIES>
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100310" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_RAW_DATA" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100310"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Table (SE11) Datas">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_DICTIONARY
ASDefine XML structure of a Table Type
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ALIASES>
    <ITEM CMPNAME="TD_DOC_ID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_DOC_ID"/>
    <ITEM CMPNAME="TR_DOCID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TR_DOCID"/>
    <ITEM CMPNAME="TT_DOCS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_DOCS"/>
    <ITEM CMPNAME="TT_TEXTS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_TEXTS"/>
   </ALIASES>
   <ATTRIBUTS>
    <ITEM CMPNAME="A0_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310" TYPTYPE="1" TYPE="TS_MAINDATA">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Line Type for Table with Package Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100506" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF doc_ids,
      header TYPE td_doc_id VALUE &apos;TT&apos;,
    END OF doc_ids
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="KEYS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310" TYPTYPE="1" TYPE="TT_KEYS"/>
    <ITEM CMPNAME="R_DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310" ATTDECLTYP="1" TYPTYPE="1" TYPE="TR_DOCID">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310" TYPTYPE="1" TYPE="TT_TEXTS"/>
   </ATTRIBUTS>
   <DEFERRED>
    <CLASSES>
     <ITEM TYPEGROUP="ZAPLINK_DOCUMENTATION" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
    </CLASSES>
   </DEFERRED>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_DICTIONARY" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100310"/>
    <ITEM REFCLSNAME="ZAPLINK_EASYXML" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100310"/>
   </FRIENDS>
   <INTERFACES>
    <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100310" RELTYPE="1"/>
   </INTERFACES>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE
 CLASS ZAPLINK_DOCUMENTATION DEFINITION LOAD.</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="ANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Anonymized component data"/>
     </TEXTS>
     <SOURCE>`
  FIELD-SYMBOLS   &lt;t&gt; like LINE OF texts.

  clear: a0_maindata-AS4USER, a0_maindata-AS4DATE, a0_maindata-AS4TIME.
  loop at texts ASSIGNING &lt;t&gt;.    clear: &lt;t&gt;-LONG_TXT-TDFUSER, &lt;t&gt;-LONG_TXT-TDFDATE, &lt;t&gt;-LONG_TXT-TDFTIME.    endloop.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310" MTDTYPE="2" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
  DATA _id LIKE LINE OF r_doc_ids.

  _id-sign = &apos;I&apos;. _id-option = &apos;EQ&apos;.
  _id-low = doc_ids-header. APPEND _id TO r_doc_ids.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="FROM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert FM Data to object attributes"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_text    LIKE LINE OF texts.
  DATA s_key     LIKE LINE OF keys.
  DATA t_docs    TYPE tt_docs.
  FIELD-SYMBOLS:
    &lt;d&gt;  LIKE LINE OF fm_data-docs,
    &lt;dt&gt; LIKE LINE OF &lt;d&gt;-texts,
    &lt;t&gt;  LIKE LINE OF fm_data-texts.

  a0_maindata-hdr = fm_data-header.   CLEAR a0_maindata-ddtext.
  keys = fm_data-keys.    MODIFY keys FROM s_key TRANSPORTING typename rowtypepos WHERE table_line IS NOT INITIAL.

* Texts
  t_docs = fm_data-docs.
  READ TABLE t_docs ASSIGNING &lt;d&gt;
       WITH KEY id = doc_ids-header
            object = a0_maindata-typename.
  LOOP AT fm_data-texts ASSIGNING &lt;t&gt;.
    CLEAR s_text.   s_text-langu = &lt;t&gt;-ddlanguage.    s_text-short_txt = &lt;t&gt;-ddtext.
    IF &lt;d&gt; IS ASSIGNED.
      READ TABLE &lt;d&gt;-texts ASSIGNING &lt;dt&gt;
          WITH KEY tdspras = s_text-langu.
      IF sy-subrc = 0.    s_text-long_txt = &lt;dt&gt;.   CLEAR s_text-long_txt-tdspras.    DELETE TABLE &lt;d&gt;-texts FROM &lt;dt&gt;.    ENDIF.
    ENDIF.
    INSERT s_text INTO TABLE texts.
  ENDLOOP.
  IF &lt;d&gt; IS ASSIGNED.
    LOOP AT &lt;d&gt;-texts ASSIGNING &lt;dt&gt;.
      CLEAR s_text.    s_text-langu = &lt;dt&gt;-tdspras.   s_text-long_txt = &lt;dt&gt;.   CLEAR s_text-long_txt-tdspras.    INSERT s_text INTO TABLE texts.
    ENDLOOP.
  ENDIF.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="TO_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert object attributes to FM Data"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_txt      LIKE LINE OF fm_data-texts.
  DATA s_key      LIKE LINE OF fm_data-keys.
  DATA s_doc      LIKE LINE OF fm_data-docs.
  DATA s_doc_txt  LIKE LINE OF s_doc-texts.
  FIELD-SYMBOLS:
    &lt;d&gt;  LIKE LINE OF fm_data-docs,
    &lt;t&gt;  LIKE LINE OF texts.

  fm_data-header = a0_maindata-hdr.
  s_key-typename = fm_data-header-typename.   fm_data-keys = keys.    MODIFY fm_data-keys FROM s_key TRANSPORTING typename WHERE table_line IS NOT INITIAL.

* Texts
*APPLICATION                                      DOKU
*ID	                                   	RE
*OBJECT	                                   	SAPLxxxx
*LANGU                                      E
*MASTERLANG	                                   	X
*TYP                                      E
*DOKFORM                                      S_DOCU_SHOW
*DOKSTYLE	                                   	S_DOCUS1
  s_doc-application = &apos;DOKU&apos;.   s_doc-id = doc_ids-header.   s_doc-object = fm_data-header-typename.
  s_doc-masterlang = abap_true.   s_doc-typ = &apos;E&apos;.    s_doc-dokform = &apos;S_DOCU_SHOW&apos;.    s_doc-dokstyle = &apos;S_DOCUS1&apos;.
  LOOP AT texts ASSIGNING &lt;t&gt;.
    IF NOT &lt;t&gt;-short_txt IS INITIAL.    CLEAR s_txt.    s_txt-typename = fm_data-header-typename.   s_txt-ddlanguage = &lt;t&gt;-langu.   s_txt-ddtext = &lt;t&gt;-short_txt.   INSERT s_txt INTO TABLE fm_data-texts.    ENDIF.
    IF NOT &lt;t&gt;-long_txt IS INITIAL.
      CLEAR s_doc_txt.    s_doc_txt = &lt;t&gt;-long_txt.   s_doc_txt-tdspras = &lt;t&gt;-langu.    INSERT s_doc_txt INTO TABLE s_doc-texts.
      IF s_doc-langu IS INITIAL.    s_doc-langu = s_doc_txt-tdspras.    ENDIF.
    ENDIF.
  ENDLOOP.
  IF NOT s_doc-texts IS INITIAL.    INSERT s_doc INTO TABLE fm_data-docs.   ENDIF.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="UNANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100310">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UnAnonymized component data"/>
     </TEXTS>
    </ITEM>
   </METHODS>
   <TYPES>
    <ITEM CMPNAME="TS_FM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100506" TYPTYPE="4">
     BEGIN OF ts_fm_data,
      header        TYPE dd40v,
      texts         TYPE tt_dd40t,
      keys          TYPE tt_dd42v,
      docs          type tt_docs,
    END OF ts_fm_data
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function Module Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100506" TYPTYPE="4">
     BEGIN OF ts_maindata.
    INCLUDE TYPE dd40v AS hdr.
    TYPES:
      END OF ts_maindata
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="General Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TT_DD40T" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100506" TYPTYPE="4">tt_dd40t TYPE SORTED TABLE OF dd40t WITH UNIQUE KEY ddlanguage
`</ITEM>
    <ITEM CMPNAME="TT_DD42V" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100506" TYPTYPE="4">tt_dd42v TYPE STANDARD TABLE OF dd42v WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_KEYS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100310" CHANGEDBY="TBENSIAL" CHANGEDON="20100506" TYPTYPE="4">tt_keys type SORTED TABLE OF dd42v with UNIQUE key KEYFDPOS
`</ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="6A9A8C069102DBD5FA326D023059D610" CODE_SIGNATURE="C820E37DFB5BD5A72B853EF77C0CA71D" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_TYPE_DATA" TYPE="CLAS" VERSION="1.01">
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20090924" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_RAW_DATA" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100129"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Type Pool (SE11) Datas">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_DICTIONARY
ASDefine XML structure of a Type group
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ATTRIBUTS>
    <ITEM CMPNAME="A0_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100209" TYPTYPE="1" TYPE="TS_DATA" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Line Type for Table with Package Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="SOURCE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" ATTRDONLY="X" TYPTYPE="1" TYPE="STRING" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Type-pool ABAP source code"/>
     </TEXTS>
    </ITEM>
   </ATTRIBUTS>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_DICTIONARY" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100218"/>
    <ITEM REFCLSNAME="ZAPLINK_EASYXML" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20091118"/>
   </FRIENDS>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="GET_SOURCE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Get source attribute as standard table"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="SOURCE" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARDECLTYP="3" TYPTYPE="1" TYPE="TT_ABAPSOURCE"/>
     </PARAMETERS>
     <SOURCE>`
SPLIT me-&gt;source AT cl_abap_char_utilities=&gt;newline
        INTO TABLE source.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="SET_SOURCE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" R3RELEASE="700">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Set source attribute from standard table"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="SOURCE" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
     </PARAMETERS>
     <SOURCE>`
  me-&gt;source = zaplink_tools=&gt;table_2_string( source ).</SOURCE>
    </ITEM>
   </METHODS>
   <TYPES>
    <ITEM CMPNAME="TS_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="4" R3RELEASE="700">
     BEGIN OF ts_data,
        name      TYPE typegroup,
        lang      TYPE langu,
        text      TYPE ddtext,
        devclass  TYPE devclass,
        uccheck   TYPE uccheck,
      END OF ts_data
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="General Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TT_ABAPSOURCE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="4" R3RELEASE="700">tt_abapsource type standard table of ABAPSOURCE with DEFAULT KEY</ITEM>
    <ITEM CMPNAME="TT_STRING" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100218" TYPTYPE="4" R3RELEASE="700">tt_string type standard table of ABAPSOURCE with DEFAULT KEY</ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
 <ZL_OBJECT CHECKSUM="F58D5E7A6F754AB6F2B63C297164B796" CODE_SIGNATURE="C1766958E37DF0E486AEF59E4B82120D" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_VIEW_DATA" TYPE="CLAS" VERSION="1.01">
  <DEPENDENCIES>
   <ITEM TYPE="CLAS" NAME="ZAPLINK_DOCUMENTATION"/>
  </DEPENDENCIES>
  <DIRECTORY SRCSYSTEM="OD4" AUTHOR="TBENSIAL" DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
  <RAW>
   <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700">
    <INHERITANCE REFCLSNAME="ZAPLINK_RAW_DATA" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100216"/>
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Views (SE11) Datas">
      <DOCUMENTATION TDFRELES="700" TDLINESIZE="072">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_DICTIONARY
ASDefine XML structure of a View
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS</DOCUMENTATION>
     </ITEM>
    </TEXTS>
   </A0_MAINDATA>
   <ALIASES>
    <ITEM CMPNAME="TD_DOC_ID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_DOC_ID"/>
    <ITEM CMPNAME="TR_DOCID" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TR_DOCID"/>
    <ITEM CMPNAME="TT_DOCS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_DOCS"/>
    <ITEM CMPNAME="TT_TEXTS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_TEXTS"/>
   </ALIASES>
   <ATTRIBUTS>
    <ITEM CMPNAME="A0_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" TYPTYPE="1" TYPE="TS_MAINDATA">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Line Type for Table with Package Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="CONDITIONS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="TBENSIAL" CREATEDON="20100216" TYPTYPE="1" TYPE="TT_WHERES"/>
    <ITEM CMPNAME="DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" ATTDECLTYP="2" TYPTYPE="4">
     BEGIN OF doc_ids,
      header TYPE td_doc_id VALUE &apos;VW&apos;,
    END OF doc_ids
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="FIELDS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" TYPTYPE="1" TYPE="TT_FIELDS"/>
    <ITEM CMPNAME="INNER_JOIN" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" TYPTYPE="1" TYPE="TT_JOINS"/>
    <ITEM CMPNAME="R_DOC_IDS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" ATTDECLTYP="1" TYPTYPE="1" TYPE="TR_DOCID">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Documentation IDS"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TABLES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" TYPTYPE="1" TYPE="TT_TABLES"/>
    <ITEM CMPNAME="TEXTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" TYPTYPE="1" TYPE="TT_TEXTS"/>
   </ATTRIBUTS>
   <DEFERRED>
    <CLASSES>
     <ITEM TYPEGROUP="ZAPLINK_DOCUMENTATION" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
    </CLASSES>
   </DEFERRED>
   <FRIENDS>
    <ITEM REFCLSNAME="ZAPLINK_DICTIONARY" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100216"/>
    <ITEM REFCLSNAME="ZAPLINK_EASYXML" VERSION="1" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100216"/>
   </FRIENDS>
   <INTERFACES>
    <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="TBENSIAL" CREATEDON="20100216" RELTYPE="1"/>
   </INTERFACES>
   <LOCAL>
    <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE
 CLASS ZAPLINK_DOCUMENTATION DEFINITION LOAD.</TYPES>
    <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
    <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
   </LOCAL>
   <METHODS>
    <ITEM CMPNAME="ANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Anonymized component data"/>
     </TEXTS>
     <SOURCE>`
  FIELD-SYMBOLS:
    &lt;t&gt; like LINE OF texts.

  clear: a0_maindata-AS4USER, a0_maindata-AS4DATE, a0_maindata-AS4TIME,
         a0_maindata-technical_settings-AS4USER, a0_maindata-technical_settings-AS4DATE, a0_maindata-technical_settings-AS4TIME.
  loop at texts ASSIGNING &lt;t&gt;.
    clear: &lt;t&gt;-LONG_TXT-TDFUSER, &lt;t&gt;-LONG_TXT-TDFDATE, &lt;t&gt;-LONG_TXT-TDFTIME.
  endloop.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" MTDTYPE="2" MTDDECLTYP="1">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
     </TEXTS>
     <SOURCE>`
  DATA _id LIKE LINE OF r_doc_ids.

  _id-sign = &apos;I&apos;. _id-option = &apos;EQ&apos;.
  _id-low = doc_ids-header. APPEND _id TO r_doc_ids.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="FROM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert FM Data to object attributes"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_text  LIKE LINE OF texts.
  DATA s_table LIKE LINE OF tables.
  DATA s_field LIKE LINE OF fields.
  DATA s_join  LIKE LINE OF inner_join.
  DATA s_where LIKE LINE OF conditions.
  FIELD-SYMBOLS:
    &lt;d&gt; LIKE LINE OF fm_data-docs,
    &lt;dt&gt; LIKE LINE OF &lt;d&gt;-texts,
    &lt;t&gt; LIKE LINE OF fm_data-texts.

  a0_maindata-hdr = fm_data-header.
  a0_maindata-technical_settings = fm_data-tech.
  CLEAR: a0_maindata-technical_settings-tabname,
         a0_maindata-technical_settings-as4local,
         a0_maindata-technical_settings-as4vers.

* Texts
  LOOP AT fm_data-texts ASSIGNING &lt;t&gt;.
    CLEAR s_text.
    s_text-langu = &lt;t&gt;-ddlanguage.
    s_text-short_txt = &lt;t&gt;-ddtext.
    READ TABLE fm_data-docs ASSIGNING &lt;d&gt;
         WITH KEY id = doc_ids-header
              object = a0_maindata-viewname.
    IF sy-subrc = 0.
      READ TABLE &lt;d&gt;-texts ASSIGNING &lt;dt&gt;
          WITH KEY tdspras = s_text-langu.
      IF sy-subrc = 0.
        s_text-long_txt = &lt;dt&gt;.
        CLEAR s_text-long_txt-tdspras.
      ENDIF.
    ENDIF.
    INSERT s_text INTO TABLE texts.
  ENDLOOP.

* Tables
  tables = fm_data-tables.
  MODIFY tables FROM s_table TRANSPORTING viewname WHERE NOT viewname IS INITIAL.

* fields
  fields = fm_data-fields.
  MODIFY fields FROM s_field TRANSPORTING viewname WHERE NOT viewname IS INITIAL.

* joins
  inner_join = fm_data-joins.
  MODIFY inner_join FROM s_join TRANSPORTING viewname WHERE NOT viewname IS INITIAL.

* where
  conditions = fm_data-wheres.
  MODIFY conditions FROM s_where TRANSPORTING condname WHERE NOT condname IS INITIAL.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="TO_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Convert object attributes to FM Data"/>
     </TEXTS>
     <PARAMETERS>
      <ITEM SCONAME="FM_DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_FM_DATA">
       <TEXTS>
        <ITEM LANGU="E" DESCRIPT="Function Modules object Data"/>
       </TEXTS>
      </ITEM>
     </PARAMETERS>
     <SOURCE>`
  DATA s_text  LIKE LINE OF fm_data-texts.
  DATA s_doc   LIKE LINE OF fm_data-docs.
  DATA s_dtxt  LIKE LINE OF s_doc-texts.
  DATA s_table LIKE LINE OF fm_data-tables.
  DATA s_field LIKE LINE OF fm_data-fields.
  DATA s_join  LIKE LINE OF fm_data-joins.
  DATA s_where LIKE LINE OF fm_data-wheres.
  FIELD-SYMBOLS:
    &lt;d&gt; LIKE LINE OF fm_data-docs,
    &lt;t&gt; LIKE LINE OF texts.

  fm_data-header = a0_maindata-hdr.
  fm_data-tech = a0_maindata-technical_settings.
  fm_data-tech-tabname = a0_maindata-viewname.
  fm_data-tech-as4local = a0_maindata-as4local.
  fm_data-tech-as4vers = a0_maindata-as4vers.

* Texts
  LOOP AT texts ASSIGNING &lt;t&gt;.
    CLEAR s_text.
    s_text-viewname = fm_data-header-viewname.
    s_text-ddlanguage = &lt;t&gt;-langu.
    s_text-as4local = &apos;A&apos;. &quot; Active
    s_text-as4vers = &apos;0000&apos;. &quot; Active
    s_text-ddtext = &lt;t&gt;-short_txt.
    INSERT s_text INTO TABLE fm_data-texts.
    IF NOT &lt;t&gt;-long_txt IS INITIAL.
      IF fm_data-docs IS INITIAL.
        s_doc-application = &apos;DOKU&apos;.
        s_doc-id = doc_ids-header.
        s_doc-object = fm_data-header-viewname.
        s_doc-langu = &lt;t&gt;-langu.
        s_doc-masterlang = abap_true.
        s_doc-typ = &apos;E&apos;.
        s_doc-dokform = &apos;S_DOCU_SHOW&apos;.
        s_doc-dokstyle = &apos;S_DOCUS1&apos;.
        INSERT s_doc INTO TABLE fm_data-docs.
      ENDIF.
      READ TABLE fm_data-docs ASSIGNING &lt;d&gt; INDEX 1.
      s_dtxt = &lt;t&gt;-long_txt.
      s_dtxt-tdspras = &lt;t&gt;-langu.
      INSERT s_dtxt INTO TABLE &lt;d&gt;-texts.
    ENDIF.
  ENDLOOP.

* Tables
  fm_data-tables = tables.        s_table-viewname = a0_maindata-viewname.
  MODIFY fm_data-tables FROM s_table TRANSPORTING viewname WHERE viewname &lt;&gt; s_table-viewname.

* fields
  fm_data-fields = fields.        s_field-viewname = a0_maindata-viewname.
  MODIFY fm_data-fields FROM s_field TRANSPORTING viewname WHERE viewname &lt;&gt; s_field-viewname.

* joins
  fm_data-joins = inner_join.     s_join-viewname = a0_maindata-viewname.
  MODIFY fm_data-joins FROM s_join TRANSPORTING viewname WHERE viewname &lt;&gt; s_join-viewname.

* where
  fm_data-wheres = conditions.    s_where-condname = a0_maindata-viewname.
  MODIFY fm_data-wheres FROM s_where TRANSPORTING condname WHERE condname &lt;&gt; s_where-condname.</SOURCE>
    </ITEM>
    <ITEM CMPNAME="UNANONYMIZE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216">
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="UnAnonymized component data"/>
     </TEXTS>
    </ITEM>
   </METHODS>
   <TYPES>
    <ITEM CMPNAME="TS_FM_DATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">
     BEGIN OF ts_fm_data,
* DO pour type doc
            header        TYPE dd25v,
            tech          TYPE dd09v,
            texts         TYPE tt_dd25t,
            docs          TYPE tt_docs,
            tables        TYPE tt_dd26v,
*  types:       &quot; If alias is used
*    BEGIN OF ts_table,
*      TABNAME     type DD26V-TABNAME,
*      TABPOS	    type DD26V-TABPOS,
*      FORTABNAME	type DD26V-FORTABNAME,
*      FORFIELD	  type DD26V-FORFIELD,
*      FORDIR	    type DD26V-FORDIR,
*    END OF ts_table.
            fields        TYPE tt_dd27p,
            joins         TYPE tt_dd28j,
            wheres        TYPE tt_dd28v,
          END OF ts_fm_data
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="Function Module Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TS_MAINDATA" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="12 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100216" TYPTYPE="4">
     BEGIN OF ts_maindata.
    INCLUDE TYPE dd25v AS hdr.
*    INCLUDE TYPE dd09v AS tech.
*    types:
*      BEGIN OF ts_dd09v_light,
** required fields of dd09V
*        TABKAT TABKAT  CHAR  2 0 Size category
*        TABART TABART  CHAR  5 0 Data class in technical settings
*        PUFFERUNG  PUFFERUNG CHAR  1 0 Buffering type indicator
*        SCHFELDANZ SCHFELDANZ  NUMC  3 0 No. of key fields for generic buffers
*        PROTOKOLL  DDPROTOCOL  CHAR  1 0 Log data changes
*        SPEICHPUFF SPEICHPUFF  CHAR  1 0 Flag for the storage type in the buffer
*        AS4USER  AS4USER CHAR  12  0 Last Changed by
*        AS4DATE  AS4DATE DATS  8 0 Date of Last Change
*        AS4TIME  AS4TIME TIMS  6 0 Last changed at
*        TRANSPFLAG DDTRANSP  CHAR  1 0 Convert to transparent table or maintain transparency
*        RESERVE  DDRESERVE CHAR  1 0 Reserved field in the ABAP Dictionary
*        UEBERSETZ  UEBERSETZ CHAR  1 0 Flag whether table is relevant for translation
*        ACTFLAG  ACTFLAG CHAR  1 0 Activation flag
*        BUFALLOW BUFALLOW  CHAR  1 0 Indicator for buffering allowed/not allowed
*        JAVAONLY DDJAVAONLY  CHAR  1 0 Write access only with JAVA
*      END OF ts_dd09v_light .
*    INCLUDE TYPE ts_dd09v_light AS tech.
    TYPES:
        technical_settings TYPE dd09v,
      END OF ts_maindata
`
     <TEXTS>
      <ITEM LANGU="E" DESCRIPT="General Data"/>
     </TEXTS>
    </ITEM>
    <ITEM CMPNAME="TT_DD25T" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd25t TYPE SORTED TABLE OF dd25t WITH UNIQUE KEY ddlanguage
`</ITEM>
    <ITEM CMPNAME="TT_DD26V" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd26v TYPE STANDARD TABLE OF dd26v WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD27P" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd27p TYPE STANDARD TABLE OF dd27p WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD28J" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd28j TYPE STANDARD TABLE OF dd28j WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_DD28V" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_dd28v TYPE STANDARD TABLE OF dd28v WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_FIELDS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="9 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_fields TYPE SORTED TABLE OF dd27p WITH UNIQUE KEY objpos
`</ITEM>
    <ITEM CMPNAME="TT_JOINS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="10 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_joins TYPE STANDARD TABLE OF dd28j WITH DEFAULT KEY
`</ITEM>
    <ITEM CMPNAME="TT_TABLES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_tables TYPE SORTED TABLE OF dd26v WITH UNIQUE KEY tabpos
`</ITEM>
    <ITEM CMPNAME="TT_WHERES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="11 " AUTHOR="TBENSIAL" CREATEDON="20100216" CHANGEDBY="TBENSIAL" CHANGEDON="20100507" TYPTYPE="4">tt_wheres TYPE SORTED TABLE OF dd28v WITH UNIQUE KEY position
`</ITEM>
   </TYPES>
  </RAW>
 </ZL_OBJECT>
</CONTAINER>
